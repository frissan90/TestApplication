<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAudio.1.7.0.15.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.NAudioDelegates">
            <summary>Contains custom delegates used for the stubs and shims of NAudio</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimALawDecoder">
            <summary>Shim type of NAudio.Codecs.ALawDecoder</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawDecoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawDecoder.#ctor(NAudio.Codecs.ALawDecoder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawDecoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawDecoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawDecoder.ALawToLinearSampleByte">
            <summary>Sets the shim of ALawDecoder.ALawToLinearSample(Byte aLaw)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawDecoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawDecoder.Constructor">
            <summary>Sets the shim of ALawDecoder.ALawDecoder()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawDecoder.StaticConstructor">
            <summary>Sets the shim of ALawDecoder.ALawDecoder()</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimALawDecoder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimALawEncoder">
            <summary>Shim type of NAudio.Codecs.ALawEncoder</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawEncoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawEncoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimALawEncoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawEncoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawEncoder.LinearToALawSampleInt16">
            <summary>Sets the shim of ALawEncoder.LinearToALawSample(Int16 sample)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimALawEncoder.StaticConstructor">
            <summary>Sets the shim of ALawEncoder.ALawEncoder()</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimBand">
            <summary>Shim type of NAudio.Codecs.Band</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimBand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimBand.#ctor(NAudio.Codecs.Band)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimBand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimBand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimBand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimBand.Constructor">
            <summary>Sets the shim of Band.Band()</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimBand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimG722Codec">
            <summary>Shim type of NAudio.Codecs.G722Codec</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722Codec.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722Codec.#ctor(NAudio.Codecs.G722Codec)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722Codec.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722Codec.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.Block4G722CodecStateInt32Int32">
            <summary>Sets the shim of G722Codec.Block4(G722CodecState s, Int32 band, Int32 d)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.Constructor">
            <summary>Sets the shim of G722Codec.G722Codec()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.DecodeG722CodecStateInt16ArrayByteArrayInt32">
            <summary>Sets the shim of G722Codec.Decode(G722CodecState state, Int16[] outputBuffer, Byte[] inputG722Data, Int32 inputLength)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.EncodeG722CodecStateByteArrayInt16ArrayInt32">
            <summary>Sets the shim of G722Codec.Encode(G722CodecState state, Byte[] outputBuffer, Int16[] inputBuffer, Int32 inputBufferCount)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.SaturateInt32">
            <summary>Sets the shim of G722Codec.Saturate(Int32 amp)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.StaticConstructor">
            <summary>Sets the shim of G722Codec.G722Codec()</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimG722Codec.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.AllInstances.DecodeG722CodecStateInt16ArrayByteArrayInt32">
            <summary>Sets the shim of G722Codec.Decode(G722CodecState state, Int16[] outputBuffer, Byte[] inputG722Data, Int32 inputLength)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722Codec.AllInstances.EncodeG722CodecStateByteArrayInt16ArrayInt32">
            <summary>Sets the shim of G722Codec.Encode(G722CodecState state, Byte[] outputBuffer, Int16[] inputBuffer, Int32 inputBufferCount)</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimG722CodecState">
            <summary>Shim type of NAudio.Codecs.G722CodecState</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722CodecState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722CodecState.#ctor(NAudio.Codecs.G722CodecState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722CodecState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimG722CodecState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.BandGet">
            <summary>Sets the shim of G722CodecState.get_Band()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.BandSetBandArray">
            <summary>Sets the shim of G722CodecState.set_Band(Band[] value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.BitsPerSampleGet">
            <summary>Sets the shim of G722CodecState.get_BitsPerSample()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.BitsPerSampleSetInt32">
            <summary>Sets the shim of G722CodecState.set_BitsPerSample(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.ConstructorInt32G722Flags">
            <summary>Sets the shim of G722CodecState.G722CodecState(Int32 rate, G722Flags options)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.EncodeFrom8000HzGet">
            <summary>Sets the shim of G722CodecState.get_EncodeFrom8000Hz()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.EncodeFrom8000HzSetBoolean">
            <summary>Sets the shim of G722CodecState.set_EncodeFrom8000Hz(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.InBitsGet">
            <summary>Sets the shim of G722CodecState.get_InBits()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.InBitsSetInt32">
            <summary>Sets the shim of G722CodecState.set_InBits(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.InBufferGet">
            <summary>Sets the shim of G722CodecState.get_InBuffer()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.InBufferSetUInt32">
            <summary>Sets the shim of G722CodecState.set_InBuffer(UInt32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.ItuTestModeGet">
            <summary>Sets the shim of G722CodecState.get_ItuTestMode()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.ItuTestModeSetBoolean">
            <summary>Sets the shim of G722CodecState.set_ItuTestMode(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.OutBitsGet">
            <summary>Sets the shim of G722CodecState.get_OutBits()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.OutBitsSetInt32">
            <summary>Sets the shim of G722CodecState.set_OutBits(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.OutBufferGet">
            <summary>Sets the shim of G722CodecState.get_OutBuffer()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.OutBufferSetUInt32">
            <summary>Sets the shim of G722CodecState.set_OutBuffer(UInt32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.PackedGet">
            <summary>Sets the shim of G722CodecState.get_Packed()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.PackedSetBoolean">
            <summary>Sets the shim of G722CodecState.set_Packed(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.QmfSignalHistoryGet">
            <summary>Sets the shim of G722CodecState.get_QmfSignalHistory()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.QmfSignalHistorySetInt32Array">
            <summary>Sets the shim of G722CodecState.set_QmfSignalHistory(Int32[] value)</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.BandGet">
            <summary>Sets the shim of G722CodecState.get_Band()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.BandSetBandArray">
            <summary>Sets the shim of G722CodecState.set_Band(Band[] value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.BitsPerSampleGet">
            <summary>Sets the shim of G722CodecState.get_BitsPerSample()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.BitsPerSampleSetInt32">
            <summary>Sets the shim of G722CodecState.set_BitsPerSample(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.EncodeFrom8000HzGet">
            <summary>Sets the shim of G722CodecState.get_EncodeFrom8000Hz()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.EncodeFrom8000HzSetBoolean">
            <summary>Sets the shim of G722CodecState.set_EncodeFrom8000Hz(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.InBitsGet">
            <summary>Sets the shim of G722CodecState.get_InBits()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.InBitsSetInt32">
            <summary>Sets the shim of G722CodecState.set_InBits(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.InBufferGet">
            <summary>Sets the shim of G722CodecState.get_InBuffer()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.InBufferSetUInt32">
            <summary>Sets the shim of G722CodecState.set_InBuffer(UInt32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.ItuTestModeGet">
            <summary>Sets the shim of G722CodecState.get_ItuTestMode()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.ItuTestModeSetBoolean">
            <summary>Sets the shim of G722CodecState.set_ItuTestMode(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.OutBitsGet">
            <summary>Sets the shim of G722CodecState.get_OutBits()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.OutBitsSetInt32">
            <summary>Sets the shim of G722CodecState.set_OutBits(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.OutBufferGet">
            <summary>Sets the shim of G722CodecState.get_OutBuffer()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.OutBufferSetUInt32">
            <summary>Sets the shim of G722CodecState.set_OutBuffer(UInt32 value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.PackedGet">
            <summary>Sets the shim of G722CodecState.get_Packed()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.PackedSetBoolean">
            <summary>Sets the shim of G722CodecState.set_Packed(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.QmfSignalHistoryGet">
            <summary>Sets the shim of G722CodecState.get_QmfSignalHistory()</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimG722CodecState.AllInstances.QmfSignalHistorySetInt32Array">
            <summary>Sets the shim of G722CodecState.set_QmfSignalHistory(Int32[] value)</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimMuLawDecoder">
            <summary>Shim type of NAudio.Codecs.MuLawDecoder</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimMuLawDecoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimMuLawDecoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimMuLawDecoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimMuLawDecoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimMuLawDecoder.MuLawToLinearSampleByte">
            <summary>Sets the shim of MuLawDecoder.MuLawToLinearSample(Byte muLaw)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimMuLawDecoder.StaticConstructor">
            <summary>Sets the shim of MuLawDecoder.MuLawDecoder()</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.ShimMuLawEncoder">
            <summary>Shim type of NAudio.Codecs.MuLawEncoder</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimMuLawEncoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimMuLawEncoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.ShimMuLawEncoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimMuLawEncoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimMuLawEncoder.LinearToMuLawSampleInt16">
            <summary>Sets the shim of MuLawEncoder.LinearToMuLawSample(Int16 sample)</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.ShimMuLawEncoder.StaticConstructor">
            <summary>Sets the shim of MuLawEncoder.MuLawEncoder()</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.StubALawDecoder">
            <summary>Stub type of NAudio.Codecs.ALawDecoder</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubALawDecoder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubALawDecoder.InitializeStub">
            <summary>Initializes a new instance of type StubALawDecoder</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubALawDecoder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubALawDecoder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubALawDecoder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.StubBand">
            <summary>Stub type of NAudio.Codecs.Band</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubBand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubBand.InitializeStub">
            <summary>Initializes a new instance of type StubBand</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubBand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubBand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubBand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.StubG722Codec">
            <summary>Stub type of NAudio.Codecs.G722Codec</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubG722Codec.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubG722Codec.InitializeStub">
            <summary>Initializes a new instance of type StubG722Codec</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubG722Codec.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubG722Codec.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubG722Codec.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Codecs.Fakes.StubG722CodecState">
            <summary>Stub type of NAudio.Codecs.G722CodecState</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubG722CodecState.#ctor(System.Int32,NAudio.Codecs.G722Flags)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Codecs.Fakes.StubG722CodecState.InitializeStub">
            <summary>Initializes a new instance of type StubG722CodecState</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubG722CodecState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubG722CodecState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Codecs.Fakes.StubG722CodecState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient">
            <summary>Shim type of NAudio.CoreAudioApi.AudioCaptureClient</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.#ctor(NAudio.CoreAudioApi.AudioCaptureClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.Dispose">
            <summary>Sets the shim of AudioCaptureClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.GetBufferInt32OutAudioClientBufferFlagsOut">
            <summary>Sets the shim of AudioCaptureClient.GetBuffer(Int32&amp; numFramesToRead, AudioClientBufferFlags&amp; bufferFlags)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.GetNextPacketSize">
            <summary>Sets the shim of AudioCaptureClient.GetNextPacketSize()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.ReleaseBufferInt32">
            <summary>Sets the shim of AudioCaptureClient.ReleaseBuffer(Int32 numFramesWritten)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.AllInstances.Dispose">
            <summary>Sets the shim of AudioCaptureClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.AllInstances.GetBufferInt32OutAudioClientBufferFlagsOut">
            <summary>Sets the shim of AudioCaptureClient.GetBuffer(Int32&amp; numFramesToRead, AudioClientBufferFlags&amp; bufferFlags)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.AllInstances.GetNextPacketSize">
            <summary>Sets the shim of AudioCaptureClient.GetNextPacketSize()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioCaptureClient.AllInstances.ReleaseBufferInt32">
            <summary>Sets the shim of AudioCaptureClient.ReleaseBuffer(Int32 numFramesWritten)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioClient">
            <summary>Shim type of NAudio.CoreAudioApi.AudioClient</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClient.#ctor(NAudio.CoreAudioApi.AudioClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AudioCaptureClientGet">
            <summary>Sets the shim of AudioClient.get_AudioCaptureClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AudioClockClientGet">
            <summary>Sets the shim of AudioClient.get_AudioClockClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AudioRenderClientGet">
            <summary>Sets the shim of AudioClient.get_AudioRenderClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.BufferSizeGet">
            <summary>Sets the shim of AudioClient.get_BufferSize()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.CurrentPaddingGet">
            <summary>Sets the shim of AudioClient.get_CurrentPadding()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.DefaultDevicePeriodGet">
            <summary>Sets the shim of AudioClient.get_DefaultDevicePeriod()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.Dispose">
            <summary>Sets the shim of AudioClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.InitializeAudioClientShareModeAudioClientStreamFlagsInt64Int64WaveFormatGuid">
            <summary>Sets the shim of AudioClient.Initialize(AudioClientShareMode shareMode, AudioClientStreamFlags streamFlags, Int64 bufferDuration, Int64 periodicity, WaveFormat waveFormat, Guid audioSessionGuid)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.IsFormatSupportedAudioClientShareModeWaveFormat">
            <summary>Sets the shim of AudioClient.IsFormatSupported(AudioClientShareMode shareMode, WaveFormat desiredFormat)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.IsFormatSupportedAudioClientShareModeWaveFormatWaveFormatExtensibleOut">
            <summary>Sets the shim of AudioClient.IsFormatSupported(AudioClientShareMode shareMode, WaveFormat desiredFormat, WaveFormatExtensible&amp; closestMatchFormat)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.MinimumDevicePeriodGet">
            <summary>Sets the shim of AudioClient.get_MinimumDevicePeriod()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.MixFormatGet">
            <summary>Sets the shim of AudioClient.get_MixFormat()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.Reset">
            <summary>Sets the shim of AudioClient.Reset()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.SetEventHandleIntPtr">
            <summary>Sets the shim of AudioClient.SetEventHandle(IntPtr eventWaitHandle)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.Start">
            <summary>Sets the shim of AudioClient.Start()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.Stop">
            <summary>Sets the shim of AudioClient.Stop()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.StreamLatencyGet">
            <summary>Sets the shim of AudioClient.get_StreamLatency()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.AudioCaptureClientGet">
            <summary>Sets the shim of AudioClient.get_AudioCaptureClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.AudioClockClientGet">
            <summary>Sets the shim of AudioClient.get_AudioClockClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.AudioRenderClientGet">
            <summary>Sets the shim of AudioClient.get_AudioRenderClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.BufferSizeGet">
            <summary>Sets the shim of AudioClient.get_BufferSize()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.CurrentPaddingGet">
            <summary>Sets the shim of AudioClient.get_CurrentPadding()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.DefaultDevicePeriodGet">
            <summary>Sets the shim of AudioClient.get_DefaultDevicePeriod()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.Dispose">
            <summary>Sets the shim of AudioClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.InitializeAudioClientShareModeAudioClientStreamFlagsInt64Int64WaveFormatGuid">
            <summary>Sets the shim of AudioClient.Initialize(AudioClientShareMode shareMode, AudioClientStreamFlags streamFlags, Int64 bufferDuration, Int64 periodicity, WaveFormat waveFormat, Guid audioSessionGuid)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.IsFormatSupportedAudioClientShareModeWaveFormat">
            <summary>Sets the shim of AudioClient.IsFormatSupported(AudioClientShareMode shareMode, WaveFormat desiredFormat)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.IsFormatSupportedAudioClientShareModeWaveFormatWaveFormatExtensibleOut">
            <summary>Sets the shim of AudioClient.IsFormatSupported(AudioClientShareMode shareMode, WaveFormat desiredFormat, WaveFormatExtensible&amp; closestMatchFormat)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.MinimumDevicePeriodGet">
            <summary>Sets the shim of AudioClient.get_MinimumDevicePeriod()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.MixFormatGet">
            <summary>Sets the shim of AudioClient.get_MixFormat()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.Reset">
            <summary>Sets the shim of AudioClient.Reset()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.SetEventHandleIntPtr">
            <summary>Sets the shim of AudioClient.SetEventHandle(IntPtr eventWaitHandle)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.Start">
            <summary>Sets the shim of AudioClient.Start()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.Stop">
            <summary>Sets the shim of AudioClient.Stop()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClient.AllInstances.StreamLatencyGet">
            <summary>Sets the shim of AudioClient.get_StreamLatency()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient">
            <summary>Shim type of NAudio.CoreAudioApi.AudioClockClient</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.#ctor(NAudio.CoreAudioApi.AudioClockClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AdjustedPositionGet">
            <summary>Sets the shim of AudioClockClient.get_AdjustedPosition()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.CanAdjustPositionGet">
            <summary>Sets the shim of AudioClockClient.get_CanAdjustPosition()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.CharacteristicsGet">
            <summary>Sets the shim of AudioClockClient.get_Characteristics()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.Dispose">
            <summary>Sets the shim of AudioClockClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.FrequencyGet">
            <summary>Sets the shim of AudioClockClient.get_Frequency()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.GetPositionUInt64OutUInt64Out">
            <summary>Sets the shim of AudioClockClient.GetPosition(UInt64&amp; position, UInt64&amp; qpcPosition)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances.AdjustedPositionGet">
            <summary>Sets the shim of AudioClockClient.get_AdjustedPosition()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances.CanAdjustPositionGet">
            <summary>Sets the shim of AudioClockClient.get_CanAdjustPosition()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances.CharacteristicsGet">
            <summary>Sets the shim of AudioClockClient.get_Characteristics()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances.Dispose">
            <summary>Sets the shim of AudioClockClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances.FrequencyGet">
            <summary>Sets the shim of AudioClockClient.get_Frequency()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioClockClient.AllInstances.GetPositionUInt64OutUInt64Out">
            <summary>Sets the shim of AudioClockClient.GetPosition(UInt64&amp; position, UInt64&amp; qpcPosition)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume">
            <summary>Shim type of NAudio.CoreAudioApi.AudioEndpointVolume</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.#ctor(NAudio.CoreAudioApi.AudioEndpointVolume)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.ChannelsGet">
            <summary>Sets the shim of AudioEndpointVolume.get_Channels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.Dispose">
            <summary>Sets the shim of AudioEndpointVolume.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.FireNotificationAudioVolumeNotificationData">
            <summary>Sets the shim of AudioEndpointVolume.FireNotification(AudioVolumeNotificationData notificationData)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.HardwareSupportGet">
            <summary>Sets the shim of AudioEndpointVolume.get_HardwareSupport()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.MasterVolumeLevelGet">
            <summary>Sets the shim of AudioEndpointVolume.get_MasterVolumeLevel()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.MasterVolumeLevelScalarGet">
            <summary>Sets the shim of AudioEndpointVolume.get_MasterVolumeLevelScalar()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.MasterVolumeLevelScalarSetSingle">
            <summary>Sets the shim of AudioEndpointVolume.set_MasterVolumeLevelScalar(Single value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.MasterVolumeLevelSetSingle">
            <summary>Sets the shim of AudioEndpointVolume.set_MasterVolumeLevel(Single value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.MuteGet">
            <summary>Sets the shim of AudioEndpointVolume.get_Mute()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.MuteSetBoolean">
            <summary>Sets the shim of AudioEndpointVolume.set_Mute(Boolean value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.OnVolumeNotificationAddAudioEndpointVolumeNotificationDelegate">
            <summary>Sets the shim of AudioEndpointVolume.add_OnVolumeNotification(AudioEndpointVolumeNotificationDelegate value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.OnVolumeNotificationRemoveAudioEndpointVolumeNotificationDelegate">
            <summary>Sets the shim of AudioEndpointVolume.remove_OnVolumeNotification(AudioEndpointVolumeNotificationDelegate value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.StepInformationGet">
            <summary>Sets the shim of AudioEndpointVolume.get_StepInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.VolumeRangeGet">
            <summary>Sets the shim of AudioEndpointVolume.get_VolumeRange()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.VolumeStepDown">
            <summary>Sets the shim of AudioEndpointVolume.VolumeStepDown()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.VolumeStepUp">
            <summary>Sets the shim of AudioEndpointVolume.VolumeStepUp()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.ChannelsGet">
            <summary>Sets the shim of AudioEndpointVolume.get_Channels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.Dispose">
            <summary>Sets the shim of AudioEndpointVolume.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.FireNotificationAudioVolumeNotificationData">
            <summary>Sets the shim of AudioEndpointVolume.FireNotification(AudioVolumeNotificationData notificationData)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.HardwareSupportGet">
            <summary>Sets the shim of AudioEndpointVolume.get_HardwareSupport()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.MasterVolumeLevelGet">
            <summary>Sets the shim of AudioEndpointVolume.get_MasterVolumeLevel()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.MasterVolumeLevelScalarGet">
            <summary>Sets the shim of AudioEndpointVolume.get_MasterVolumeLevelScalar()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.MasterVolumeLevelScalarSetSingle">
            <summary>Sets the shim of AudioEndpointVolume.set_MasterVolumeLevelScalar(Single value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.MasterVolumeLevelSetSingle">
            <summary>Sets the shim of AudioEndpointVolume.set_MasterVolumeLevel(Single value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.MuteGet">
            <summary>Sets the shim of AudioEndpointVolume.get_Mute()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.MuteSetBoolean">
            <summary>Sets the shim of AudioEndpointVolume.set_Mute(Boolean value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.OnVolumeNotificationAddAudioEndpointVolumeNotificationDelegate">
            <summary>Sets the shim of AudioEndpointVolume.add_OnVolumeNotification(AudioEndpointVolumeNotificationDelegate value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.OnVolumeNotificationRemoveAudioEndpointVolumeNotificationDelegate">
            <summary>Sets the shim of AudioEndpointVolume.remove_OnVolumeNotification(AudioEndpointVolumeNotificationDelegate value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.StepInformationGet">
            <summary>Sets the shim of AudioEndpointVolume.get_StepInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.VolumeRangeGet">
            <summary>Sets the shim of AudioEndpointVolume.get_VolumeRange()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.VolumeStepDown">
            <summary>Sets the shim of AudioEndpointVolume.VolumeStepDown()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolume.AllInstances.VolumeStepUp">
            <summary>Sets the shim of AudioEndpointVolume.VolumeStepUp()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel">
            <summary>Shim type of NAudio.CoreAudioApi.AudioEndpointVolumeChannel</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.#ctor(NAudio.CoreAudioApi.AudioEndpointVolumeChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.VolumeLevelGet">
            <summary>Sets the shim of AudioEndpointVolumeChannel.get_VolumeLevel()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.VolumeLevelScalarGet">
            <summary>Sets the shim of AudioEndpointVolumeChannel.get_VolumeLevelScalar()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.VolumeLevelScalarSetSingle">
            <summary>Sets the shim of AudioEndpointVolumeChannel.set_VolumeLevelScalar(Single value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.VolumeLevelSetSingle">
            <summary>Sets the shim of AudioEndpointVolumeChannel.set_VolumeLevel(Single value)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.AllInstances.VolumeLevelGet">
            <summary>Sets the shim of AudioEndpointVolumeChannel.get_VolumeLevel()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.AllInstances.VolumeLevelScalarGet">
            <summary>Sets the shim of AudioEndpointVolumeChannel.get_VolumeLevelScalar()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.AllInstances.VolumeLevelScalarSetSingle">
            <summary>Sets the shim of AudioEndpointVolumeChannel.set_VolumeLevelScalar(Single value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannel.AllInstances.VolumeLevelSetSingle">
            <summary>Sets the shim of AudioEndpointVolumeChannel.set_VolumeLevel(Single value)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels">
            <summary>Shim type of NAudio.CoreAudioApi.AudioEndpointVolumeChannels</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.#ctor(NAudio.CoreAudioApi.AudioEndpointVolumeChannels)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.CountGet">
            <summary>Sets the shim of AudioEndpointVolumeChannels.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.ItemGetInt32">
            <summary>Sets the shim of AudioEndpointVolumeChannels.get_Item(Int32 index)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.AllInstances.CountGet">
            <summary>Sets the shim of AudioEndpointVolumeChannels.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeChannels.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AudioEndpointVolumeChannels.get_Item(Int32 index)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation">
            <summary>Shim type of NAudio.CoreAudioApi.AudioEndpointVolumeStepInformation</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.#ctor(NAudio.CoreAudioApi.AudioEndpointVolumeStepInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.StepCountGet">
            <summary>Sets the shim of AudioEndpointVolumeStepInformation.get_StepCount()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.StepGet">
            <summary>Sets the shim of AudioEndpointVolumeStepInformation.get_Step()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.AllInstances.StepCountGet">
            <summary>Sets the shim of AudioEndpointVolumeStepInformation.get_StepCount()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeStepInformation.AllInstances.StepGet">
            <summary>Sets the shim of AudioEndpointVolumeStepInformation.get_Step()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange">
            <summary>Shim type of NAudio.CoreAudioApi.AudioEndpointVolumeVolumeRange</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.#ctor(NAudio.CoreAudioApi.AudioEndpointVolumeVolumeRange)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.IncrementDecibelsGet">
            <summary>Sets the shim of AudioEndpointVolumeVolumeRange.get_IncrementDecibels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.MaxDecibelsGet">
            <summary>Sets the shim of AudioEndpointVolumeVolumeRange.get_MaxDecibels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.MinDecibelsGet">
            <summary>Sets the shim of AudioEndpointVolumeVolumeRange.get_MinDecibels()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.AllInstances.IncrementDecibelsGet">
            <summary>Sets the shim of AudioEndpointVolumeVolumeRange.get_IncrementDecibels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.AllInstances.MaxDecibelsGet">
            <summary>Sets the shim of AudioEndpointVolumeVolumeRange.get_MaxDecibels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioEndpointVolumeVolumeRange.AllInstances.MinDecibelsGet">
            <summary>Sets the shim of AudioEndpointVolumeVolumeRange.get_MinDecibels()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation">
            <summary>Shim type of NAudio.CoreAudioApi.AudioMeterInformation</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.#ctor(NAudio.CoreAudioApi.AudioMeterInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.HardwareSupportGet">
            <summary>Sets the shim of AudioMeterInformation.get_HardwareSupport()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.MasterPeakValueGet">
            <summary>Sets the shim of AudioMeterInformation.get_MasterPeakValue()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.PeakValuesGet">
            <summary>Sets the shim of AudioMeterInformation.get_PeakValues()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.AllInstances.HardwareSupportGet">
            <summary>Sets the shim of AudioMeterInformation.get_HardwareSupport()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.AllInstances.MasterPeakValueGet">
            <summary>Sets the shim of AudioMeterInformation.get_MasterPeakValue()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformation.AllInstances.PeakValuesGet">
            <summary>Sets the shim of AudioMeterInformation.get_PeakValues()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels">
            <summary>Shim type of NAudio.CoreAudioApi.AudioMeterInformationChannels</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.#ctor(NAudio.CoreAudioApi.AudioMeterInformationChannels)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.CountGet">
            <summary>Sets the shim of AudioMeterInformationChannels.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.ItemGetInt32">
            <summary>Sets the shim of AudioMeterInformationChannels.get_Item(Int32 index)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.AllInstances.CountGet">
            <summary>Sets the shim of AudioMeterInformationChannels.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioMeterInformationChannels.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AudioMeterInformationChannels.get_Item(Int32 index)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient">
            <summary>Shim type of NAudio.CoreAudioApi.AudioRenderClient</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.#ctor(NAudio.CoreAudioApi.AudioRenderClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.Dispose">
            <summary>Sets the shim of AudioRenderClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.GetBufferInt32">
            <summary>Sets the shim of AudioRenderClient.GetBuffer(Int32 numFramesRequested)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.ReleaseBufferInt32AudioClientBufferFlags">
            <summary>Sets the shim of AudioRenderClient.ReleaseBuffer(Int32 numFramesWritten, AudioClientBufferFlags bufferFlags)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.AllInstances.Dispose">
            <summary>Sets the shim of AudioRenderClient.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.AllInstances.GetBufferInt32">
            <summary>Sets the shim of AudioRenderClient.GetBuffer(Int32 numFramesRequested)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioRenderClient.AllInstances.ReleaseBufferInt32AudioClientBufferFlags">
            <summary>Sets the shim of AudioRenderClient.ReleaseBuffer(Int32 numFramesWritten, AudioClientBufferFlags bufferFlags)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData">
            <summary>Shim type of NAudio.CoreAudioApi.AudioVolumeNotificationData</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.#ctor(NAudio.CoreAudioApi.AudioVolumeNotificationData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.ChannelVolumeGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_ChannelVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.ChannelsGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_Channels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.ConstructorGuidBooleanSingleSingleArray">
            <summary>Sets the shim of AudioVolumeNotificationData.AudioVolumeNotificationData(Guid eventContext, Boolean muted, Single masterVolume, Single[] channelVolume)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.EventContextGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_EventContext()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.MasterVolumeGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_MasterVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.MutedGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_Muted()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.AllInstances.ChannelVolumeGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_ChannelVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.AllInstances.ChannelsGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_Channels()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.AllInstances.EventContextGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_EventContext()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.AllInstances.MasterVolumeGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_MasterVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimAudioVolumeNotificationData.AllInstances.MutedGet">
            <summary>Sets the shim of AudioVolumeNotificationData.get_Muted()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimMMDevice">
            <summary>Shim type of NAudio.CoreAudioApi.MMDevice</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDevice.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDevice.#ctor(NAudio.CoreAudioApi.MMDevice)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDevice.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDevice.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AudioClientGet">
            <summary>Sets the shim of MMDevice.get_AudioClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AudioEndpointVolumeGet">
            <summary>Sets the shim of MMDevice.get_AudioEndpointVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AudioMeterInformationGet">
            <summary>Sets the shim of MMDevice.get_AudioMeterInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.DataFlowGet">
            <summary>Sets the shim of MMDevice.get_DataFlow()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.DeviceFriendlyNameGet">
            <summary>Sets the shim of MMDevice.get_DeviceFriendlyName()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.FriendlyNameGet">
            <summary>Sets the shim of MMDevice.get_FriendlyName()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.GetAudioClient">
            <summary>Sets the shim of MMDevice.GetAudioClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.GetAudioEndpointVolume">
            <summary>Sets the shim of MMDevice.GetAudioEndpointVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.GetAudioMeterInformation">
            <summary>Sets the shim of MMDevice.GetAudioMeterInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.GetPropertyInformation">
            <summary>Sets the shim of MMDevice.GetPropertyInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.IDGet">
            <summary>Sets the shim of MMDevice.get_ID()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.PropertiesGet">
            <summary>Sets the shim of MMDevice.get_Properties()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.StateGet">
            <summary>Sets the shim of MMDevice.get_State()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.StaticConstructor">
            <summary>Sets the shim of MMDevice.MMDevice()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.ToString">
            <summary>Sets the shim of MMDevice.ToString()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.AudioClientGet">
            <summary>Sets the shim of MMDevice.get_AudioClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.AudioEndpointVolumeGet">
            <summary>Sets the shim of MMDevice.get_AudioEndpointVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.AudioMeterInformationGet">
            <summary>Sets the shim of MMDevice.get_AudioMeterInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.DataFlowGet">
            <summary>Sets the shim of MMDevice.get_DataFlow()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.DeviceFriendlyNameGet">
            <summary>Sets the shim of MMDevice.get_DeviceFriendlyName()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.FriendlyNameGet">
            <summary>Sets the shim of MMDevice.get_FriendlyName()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.GetAudioClient">
            <summary>Sets the shim of MMDevice.GetAudioClient()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.GetAudioEndpointVolume">
            <summary>Sets the shim of MMDevice.GetAudioEndpointVolume()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.GetAudioMeterInformation">
            <summary>Sets the shim of MMDevice.GetAudioMeterInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.GetPropertyInformation">
            <summary>Sets the shim of MMDevice.GetPropertyInformation()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.IDGet">
            <summary>Sets the shim of MMDevice.get_ID()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.PropertiesGet">
            <summary>Sets the shim of MMDevice.get_Properties()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.StateGet">
            <summary>Sets the shim of MMDevice.get_State()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDevice.AllInstances.ToString01">
            <summary>Sets the shim of MMDevice.ToString()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection">
            <summary>Shim type of NAudio.CoreAudioApi.MMDeviceCollection</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.#ctor(NAudio.CoreAudioApi.MMDeviceCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.Bind(System.Collections.Generic.IEnumerable{NAudio.CoreAudioApi.MMDevice})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.CountGet">
            <summary>Sets the shim of MMDeviceCollection.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.GetEnumerator">
            <summary>Sets the shim of MMDeviceCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.ItemGetInt32">
            <summary>Sets the shim of MMDeviceCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MMDeviceCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.AllInstances.CountGet">
            <summary>Sets the shim of MMDeviceCollection.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of MMDeviceCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of MMDeviceCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MMDeviceCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator">
            <summary>Shim type of NAudio.CoreAudioApi.MMDeviceEnumerator</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.#ctor(NAudio.CoreAudioApi.MMDeviceEnumerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.Constructor">
            <summary>Sets the shim of MMDeviceEnumerator.MMDeviceEnumerator()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.EnumerateAudioEndPointsDataFlowDeviceState">
            <summary>Sets the shim of MMDeviceEnumerator.EnumerateAudioEndPoints(DataFlow dataFlow, DeviceState dwStateMask)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.GetDefaultAudioEndpointDataFlowRole">
            <summary>Sets the shim of MMDeviceEnumerator.GetDefaultAudioEndpoint(DataFlow dataFlow, Role role)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.GetDeviceString">
            <summary>Sets the shim of MMDeviceEnumerator.GetDevice(String ID)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.AllInstances.EnumerateAudioEndPointsDataFlowDeviceState">
            <summary>Sets the shim of MMDeviceEnumerator.EnumerateAudioEndPoints(DataFlow dataFlow, DeviceState dwStateMask)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.AllInstances.GetDefaultAudioEndpointDataFlowRole">
            <summary>Sets the shim of MMDeviceEnumerator.GetDefaultAudioEndpoint(DataFlow dataFlow, Role role)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimMMDeviceEnumerator.AllInstances.GetDeviceString">
            <summary>Sets the shim of MMDeviceEnumerator.GetDevice(String ID)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyKey">
            <summary>Shim type of NAudio.CoreAudioApi.PropertyKey</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyKeys">
            <summary>Shim type of NAudio.CoreAudioApi.PropertyKeys</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyKeys.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyKeys.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyKeys.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyKeys.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyKeys.StaticConstructor">
            <summary>Sets the shim of PropertyKeys.PropertyKeys()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyStore">
            <summary>Shim type of NAudio.CoreAudioApi.PropertyStore</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.#ctor(NAudio.CoreAudioApi.PropertyStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.ContainsPropertyKey">
            <summary>Sets the shim of PropertyStore.Contains(PropertyKey key)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.CountGet">
            <summary>Sets the shim of PropertyStore.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.GetInt32">
            <summary>Sets the shim of PropertyStore.Get(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.GetValueInt32">
            <summary>Sets the shim of PropertyStore.GetValue(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.ItemGetInt32">
            <summary>Sets the shim of PropertyStore.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.ItemGetPropertyKey">
            <summary>Sets the shim of PropertyStore.get_Item(PropertyKey key)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances.ContainsPropertyKey">
            <summary>Sets the shim of PropertyStore.Contains(PropertyKey key)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances.CountGet">
            <summary>Sets the shim of PropertyStore.get_Count()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances.GetInt32">
            <summary>Sets the shim of PropertyStore.Get(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances.GetValueInt32">
            <summary>Sets the shim of PropertyStore.GetValue(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances.ItemGetInt32">
            <summary>Sets the shim of PropertyStore.get_Item(Int32 index)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStore.AllInstances.ItemGetPropertyKey">
            <summary>Sets the shim of PropertyStore.get_Item(PropertyKey key)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty">
            <summary>Shim type of NAudio.CoreAudioApi.PropertyStoreProperty</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.#ctor(NAudio.CoreAudioApi.PropertyStoreProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.ConstructorPropertyKeyPropVariant">
            <summary>Sets the shim of PropertyStoreProperty.PropertyStoreProperty(PropertyKey key, PropVariant value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.KeyGet">
            <summary>Sets the shim of PropertyStoreProperty.get_Key()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.ValueGet">
            <summary>Sets the shim of PropertyStoreProperty.get_Value()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.AllInstances.KeyGet">
            <summary>Sets the shim of PropertyStoreProperty.get_Key()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimPropertyStoreProperty.AllInstances.ValueGet">
            <summary>Sets the shim of PropertyStoreProperty.get_Value()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture">
            <summary>Shim type of NAudio.CoreAudioApi.WasapiCapture</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.#ctor(NAudio.CoreAudioApi.WasapiCapture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.Bind(NAudio.Wave.IWaveIn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.CaptureThreadAudioClient">
            <summary>Sets the shim of WasapiCapture.CaptureThread(AudioClient client)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.Constructor">
            <summary>Sets the shim of WasapiCapture.WasapiCapture()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.ConstructorMMDevice">
            <summary>Sets the shim of WasapiCapture.WasapiCapture(MMDevice captureDevice)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.DataAvailableAddEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WasapiCapture.add_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.DataAvailableRemoveEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WasapiCapture.remove_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.Dispose">
            <summary>Sets the shim of WasapiCapture.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.DoRecordingAudioClient">
            <summary>Sets the shim of WasapiCapture.DoRecording(AudioClient client)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.GetAudioClientStreamFlags">
            <summary>Sets the shim of WasapiCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.GetDefaultCaptureDevice">
            <summary>Sets the shim of WasapiCapture.GetDefaultCaptureDevice()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.InitializeCaptureDevice">
            <summary>Sets the shim of WasapiCapture.InitializeCaptureDevice()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.RaiseRecordingStoppedException">
            <summary>Sets the shim of WasapiCapture.RaiseRecordingStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.ReadNextPacketAudioCaptureClient">
            <summary>Sets the shim of WasapiCapture.ReadNextPacket(AudioCaptureClient capture)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.RecordingStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiCapture.add_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.RecordingStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiCapture.remove_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.ShareModeGet">
            <summary>Sets the shim of WasapiCapture.get_ShareMode()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.ShareModeSetAudioClientShareMode">
            <summary>Sets the shim of WasapiCapture.set_ShareMode(AudioClientShareMode value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.StartRecording">
            <summary>Sets the shim of WasapiCapture.StartRecording()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.StopRecording">
            <summary>Sets the shim of WasapiCapture.StopRecording()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.WaveFormatGet">
            <summary>Sets the shim of WasapiCapture.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WasapiCapture.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture._StartRecordingb__0">
            <summary>Sets the shim of WasapiCapture.&lt;StartRecording&gt;b__0()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.CaptureThreadAudioClient">
            <summary>Sets the shim of WasapiCapture.CaptureThread(AudioClient client)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.DataAvailableAddEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WasapiCapture.add_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.DataAvailableRemoveEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WasapiCapture.remove_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.Dispose">
            <summary>Sets the shim of WasapiCapture.Dispose()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.DoRecordingAudioClient">
            <summary>Sets the shim of WasapiCapture.DoRecording(AudioClient client)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.GetAudioClientStreamFlags">
            <summary>Sets the shim of WasapiCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.InitializeCaptureDevice">
            <summary>Sets the shim of WasapiCapture.InitializeCaptureDevice()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.RaiseRecordingStoppedException">
            <summary>Sets the shim of WasapiCapture.RaiseRecordingStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.ReadNextPacketAudioCaptureClient">
            <summary>Sets the shim of WasapiCapture.ReadNextPacket(AudioCaptureClient capture)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.RecordingStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiCapture.add_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.RecordingStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiCapture.remove_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.ShareModeGet">
            <summary>Sets the shim of WasapiCapture.get_ShareMode()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.ShareModeSetAudioClientShareMode">
            <summary>Sets the shim of WasapiCapture.set_ShareMode(AudioClientShareMode value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.StartRecording">
            <summary>Sets the shim of WasapiCapture.StartRecording()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.StopRecording">
            <summary>Sets the shim of WasapiCapture.StopRecording()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WasapiCapture.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WasapiCapture.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.ShimWasapiCapture.AllInstances._StartRecordingb__0">
            <summary>Sets the shim of WasapiCapture.&lt;StartRecording&gt;b__0()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.StubAudioVolumeNotificationData">
            <summary>Stub type of NAudio.CoreAudioApi.AudioVolumeNotificationData</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubAudioVolumeNotificationData.#ctor(System.Guid,System.Boolean,System.Single,System.Single[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubAudioVolumeNotificationData.InitializeStub">
            <summary>Initializes a new instance of type StubAudioVolumeNotificationData</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubAudioVolumeNotificationData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubAudioVolumeNotificationData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubAudioVolumeNotificationData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.StubMMDeviceEnumerator">
            <summary>Stub type of NAudio.CoreAudioApi.MMDeviceEnumerator</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubMMDeviceEnumerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubMMDeviceEnumerator.InitializeStub">
            <summary>Initializes a new instance of type StubMMDeviceEnumerator</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubMMDeviceEnumerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubMMDeviceEnumerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubMMDeviceEnumerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Fakes.StubWasapiCapture">
            <summary>Stub type of NAudio.CoreAudioApi.WasapiCapture</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.#ctor(NAudio.CoreAudioApi.MMDevice)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.AttachBackingFieldToWaveFormat">
            <summary>Attaches delegates to emulate StubWasapiCapture.WaveFormat as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.GetAudioClientStreamFlags">
            <summary>Sets the stub of WasapiCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.GetAudioClientStreamFlags01">
            <summary>Sets the stub of WasapiCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.InitializeStub">
            <summary>Initializes a new instance of type StubWasapiCapture</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.WaveFormatGet">
            <summary>Sets the stub of WasapiCapture.get_WaveFormat()</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.WaveFormatSetWaveFormat">
            <summary>Sets the stub of WasapiCapture.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Fakes.StubWasapiCapture.WaveFormat">
            <summary>Sets the stub of WasapiCapture.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant">
            <summary>Shim type of NAudio.CoreAudioApi.Interfaces.PropVariant</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant.FromLongInt64">
            <summary>Sets the shim of PropVariant.FromLong(Int64 value)</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Interfaces.Fakes.ShimPropVariant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient">
            <summary>Stub type of NAudio.CoreAudioApi.Interfaces.IMMNotificationClient</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.#ctor">
            <summary>Initializes a new instance of type StubIMMNotificationClient</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.na::NAudio#CoreAudioApi#Interfaces#IMMNotificationClient#OnDefaultDeviceChanged(NAudio.CoreAudioApi.DataFlow,NAudio.CoreAudioApi.Role,System.String)">
            <summary>Sets the stub of IMMNotificationClient.OnDefaultDeviceChanged(DataFlow flow, Role role, String defaultDeviceId)</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.na::NAudio#CoreAudioApi#Interfaces#IMMNotificationClient#OnDeviceAdded(System.String)">
            <summary>Sets the stub of IMMNotificationClient.OnDeviceAdded(String pwstrDeviceId)</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.na::NAudio#CoreAudioApi#Interfaces#IMMNotificationClient#OnDeviceRemoved(System.String)">
            <summary>Sets the stub of IMMNotificationClient.OnDeviceRemoved(String deviceId)</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.na::NAudio#CoreAudioApi#Interfaces#IMMNotificationClient#OnDeviceStateChanged(System.String,NAudio.CoreAudioApi.DeviceState)">
            <summary>Sets the stub of IMMNotificationClient.OnDeviceStateChanged(String deviceId, DeviceState newState)</summary>
        </member>
        <member name="M:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.na::NAudio#CoreAudioApi#Interfaces#IMMNotificationClient#OnPropertyValueChanged(System.String,NAudio.CoreAudioApi.PropertyKey)">
            <summary>Sets the stub of IMMNotificationClient.OnPropertyValueChanged(String pwstrDeviceId, PropertyKey key)</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.OnDefaultDeviceChangedDataFlowRoleString">
            <summary>Sets the stub of IMMNotificationClient.OnDefaultDeviceChanged(DataFlow flow, Role role, String defaultDeviceId)</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.OnDeviceAddedString">
            <summary>Sets the stub of IMMNotificationClient.OnDeviceAdded(String pwstrDeviceId)</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.OnDeviceRemovedString">
            <summary>Sets the stub of IMMNotificationClient.OnDeviceRemoved(String deviceId)</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.OnDeviceStateChangedStringDeviceState">
            <summary>Sets the stub of IMMNotificationClient.OnDeviceStateChanged(String deviceId, DeviceState newState)</summary>
        </member>
        <member name="F:NAudio.CoreAudioApi.Interfaces.Fakes.StubIMMNotificationClient.OnPropertyValueChangedStringPropertyKey">
            <summary>Sets the stub of IMMNotificationClient.OnPropertyValueChanged(String pwstrDeviceId, PropertyKey key)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoDescriptor">
            <summary>Shim type of NAudio.Dmo.DmoDescriptor</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoDescriptor.#ctor(NAudio.Dmo.DmoDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.ClsidGet">
            <summary>Sets the shim of DmoDescriptor.get_Clsid()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.ClsidSetGuid">
            <summary>Sets the shim of DmoDescriptor.set_Clsid(Guid value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.ConstructorStringGuid">
            <summary>Sets the shim of DmoDescriptor.DmoDescriptor(String name, Guid clsid)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.NameGet">
            <summary>Sets the shim of DmoDescriptor.get_Name()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.NameSetString">
            <summary>Sets the shim of DmoDescriptor.set_Name(String value)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.AllInstances.ClsidGet">
            <summary>Sets the shim of DmoDescriptor.get_Clsid()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.AllInstances.ClsidSetGuid">
            <summary>Sets the shim of DmoDescriptor.set_Clsid(Guid value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.AllInstances.NameGet">
            <summary>Sets the shim of DmoDescriptor.get_Name()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoDescriptor.AllInstances.NameSetString">
            <summary>Sets the shim of DmoDescriptor.set_Name(String value)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoEnumerator">
            <summary>Shim type of NAudio.Dmo.DmoEnumerator</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoEnumerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoEnumerator.#ctor(NAudio.Dmo.DmoEnumerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoEnumerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoEnumerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoEnumerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoEnumerator.Constructor">
            <summary>Sets the shim of DmoEnumerator.DmoEnumerator()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoEnumerator.GetAudioDecoderNames">
            <summary>Sets the shim of DmoEnumerator.GetAudioDecoderNames()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoEnumerator.GetAudioEffectNames">
            <summary>Sets the shim of DmoEnumerator.GetAudioEffectNames()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoEnumerator.GetAudioEncoderNames">
            <summary>Sets the shim of DmoEnumerator.GetAudioEncoderNames()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoEnumerator.GetDmosGuid">
            <summary>Sets the shim of DmoEnumerator.GetDmos(Guid category)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoEnumerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoMediaType">
            <summary>Shim type of NAudio.Dmo.DmoMediaType</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoMediaType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoMediaType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoMediaType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoMediaType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoMediaType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoOutputDataBuffer">
            <summary>Shim type of NAudio.Dmo.DmoOutputDataBuffer</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoOutputDataBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoOutputDataBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimDmoOutputDataBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimDmoOutputDataBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimDmoOutputDataBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimMediaBuffer">
            <summary>Shim type of NAudio.Dmo.MediaBuffer</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaBuffer.#ctor(NAudio.Dmo.MediaBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaBuffer.Bind(NAudio.Dmo.IMediaBuffer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaBuffer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.ConstructorInt32">
            <summary>Sets the shim of MediaBuffer.MediaBuffer(Int32 maxLength)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.Dispose">
            <summary>Sets the shim of MediaBuffer.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.LengthGet">
            <summary>Sets the shim of MediaBuffer.get_Length()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.LengthSetInt32">
            <summary>Sets the shim of MediaBuffer.set_Length(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.LoadDataByteArrayInt32">
            <summary>Sets the shim of MediaBuffer.LoadData(Byte[] data, Int32 bytes)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.NAudioDmoIMediaBufferGetBufferAndLengthIntPtrIntPtr">
            <summary>Sets the shim of MediaBuffer.NAudio.Dmo.IMediaBuffer.GetBufferAndLength(IntPtr bufferPointerPointer, IntPtr validDataLengthPointer)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.NAudioDmoIMediaBufferGetMaxLengthInt32Out">
            <summary>Sets the shim of MediaBuffer.NAudio.Dmo.IMediaBuffer.GetMaxLength(Int32&amp; maxLength)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.NAudioDmoIMediaBufferSetLengthInt32">
            <summary>Sets the shim of MediaBuffer.NAudio.Dmo.IMediaBuffer.SetLength(Int32 length)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.RetrieveDataByteArrayInt32">
            <summary>Sets the shim of MediaBuffer.RetrieveData(Byte[] data, Int32 offset)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.Dispose">
            <summary>Sets the shim of MediaBuffer.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.LengthGet">
            <summary>Sets the shim of MediaBuffer.get_Length()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.LengthSetInt32">
            <summary>Sets the shim of MediaBuffer.set_Length(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.LoadDataByteArrayInt32">
            <summary>Sets the shim of MediaBuffer.LoadData(Byte[] data, Int32 bytes)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.NAudioDmoIMediaBufferGetBufferAndLengthIntPtrIntPtr">
            <summary>Sets the shim of MediaBuffer.NAudio.Dmo.IMediaBuffer.GetBufferAndLength(IntPtr bufferPointerPointer, IntPtr validDataLengthPointer)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.NAudioDmoIMediaBufferGetMaxLengthInt32Out">
            <summary>Sets the shim of MediaBuffer.NAudio.Dmo.IMediaBuffer.GetMaxLength(Int32&amp; maxLength)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.NAudioDmoIMediaBufferSetLengthInt32">
            <summary>Sets the shim of MediaBuffer.NAudio.Dmo.IMediaBuffer.SetLength(Int32 length)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaBuffer.AllInstances.RetrieveDataByteArrayInt32">
            <summary>Sets the shim of MediaBuffer.RetrieveData(Byte[] data, Int32 offset)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimMediaObject">
            <summary>Shim type of NAudio.Dmo.MediaObject</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObject.#ctor(NAudio.Dmo.MediaObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllocateStreamingResources">
            <summary>Sets the shim of MediaObject.AllocateStreamingResources()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.CreateDmoMediaTypeForWaveFormatWaveFormat">
            <summary>Sets the shim of MediaObject.CreateDmoMediaTypeForWaveFormat(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.DiscontinuityInt32">
            <summary>Sets the shim of MediaObject.Discontinuity(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.Dispose">
            <summary>Sets the shim of MediaObject.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.Flush">
            <summary>Sets the shim of MediaObject.Flush()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.FreeStreamingResources">
            <summary>Sets the shim of MediaObject.FreeStreamingResources()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetInputMaxLatencyInt32">
            <summary>Sets the shim of MediaObject.GetInputMaxLatency(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetInputSizeInfoInt32">
            <summary>Sets the shim of MediaObject.GetInputSizeInfo(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetInputTypeInt32Int32">
            <summary>Sets the shim of MediaObject.GetInputType(Int32 inputStream, Int32 inputTypeIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetInputTypesInt32">
            <summary>Sets the shim of MediaObject.GetInputTypes(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetOutputCurrentTypeInt32">
            <summary>Sets the shim of MediaObject.GetOutputCurrentType(Int32 outputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetOutputSizeInfoInt32">
            <summary>Sets the shim of MediaObject.GetOutputSizeInfo(Int32 outputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetOutputTypeInt32Int32">
            <summary>Sets the shim of MediaObject.GetOutputType(Int32 outputStream, Int32 outputTypeIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.GetOutputTypesInt32">
            <summary>Sets the shim of MediaObject.GetOutputTypes(Int32 outputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.InputStreamCountGet">
            <summary>Sets the shim of MediaObject.get_InputStreamCount()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.IsAcceptingDataInt32">
            <summary>Sets the shim of MediaObject.IsAcceptingData(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.OutputStreamCountGet">
            <summary>Sets the shim of MediaObject.get_OutputStreamCount()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.ProcessInputInt32IMediaBufferDmoInputDataBufferFlagsInt64Int64">
            <summary>Sets the shim of MediaObject.ProcessInput(Int32 inputStreamIndex, IMediaBuffer mediaBuffer, DmoInputDataBufferFlags flags, Int64 timestamp, Int64 duration)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.ProcessOutputDmoProcessOutputFlagsInt32DmoOutputDataBufferArray">
            <summary>Sets the shim of MediaObject.ProcessOutput(DmoProcessOutputFlags flags, Int32 outputBufferCount, DmoOutputDataBuffer[] outputBuffers)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SetInputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SetInputType(Int32 inputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SetInputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SetInputWaveFormat(Int32 inputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SetOutputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SetOutputType(Int32 outputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SetOutputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SetOutputWaveFormat(Int32 outputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SupportsInputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SupportsInputType(Int32 inputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SupportsInputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SupportsInputWaveFormat(Int32 inputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SupportsOutputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SupportsOutputType(Int32 outputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.SupportsOutputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SupportsOutputWaveFormat(Int32 outputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.AllocateStreamingResources">
            <summary>Sets the shim of MediaObject.AllocateStreamingResources()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.CreateDmoMediaTypeForWaveFormatWaveFormat">
            <summary>Sets the shim of MediaObject.CreateDmoMediaTypeForWaveFormat(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.DiscontinuityInt32">
            <summary>Sets the shim of MediaObject.Discontinuity(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.Dispose">
            <summary>Sets the shim of MediaObject.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.Flush">
            <summary>Sets the shim of MediaObject.Flush()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.FreeStreamingResources">
            <summary>Sets the shim of MediaObject.FreeStreamingResources()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetInputMaxLatencyInt32">
            <summary>Sets the shim of MediaObject.GetInputMaxLatency(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetInputSizeInfoInt32">
            <summary>Sets the shim of MediaObject.GetInputSizeInfo(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetInputTypeInt32Int32">
            <summary>Sets the shim of MediaObject.GetInputType(Int32 inputStream, Int32 inputTypeIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetInputTypesInt32">
            <summary>Sets the shim of MediaObject.GetInputTypes(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetOutputCurrentTypeInt32">
            <summary>Sets the shim of MediaObject.GetOutputCurrentType(Int32 outputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetOutputSizeInfoInt32">
            <summary>Sets the shim of MediaObject.GetOutputSizeInfo(Int32 outputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetOutputTypeInt32Int32">
            <summary>Sets the shim of MediaObject.GetOutputType(Int32 outputStream, Int32 outputTypeIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.GetOutputTypesInt32">
            <summary>Sets the shim of MediaObject.GetOutputTypes(Int32 outputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.InputStreamCountGet">
            <summary>Sets the shim of MediaObject.get_InputStreamCount()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.IsAcceptingDataInt32">
            <summary>Sets the shim of MediaObject.IsAcceptingData(Int32 inputStreamIndex)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.OutputStreamCountGet">
            <summary>Sets the shim of MediaObject.get_OutputStreamCount()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.ProcessInputInt32IMediaBufferDmoInputDataBufferFlagsInt64Int64">
            <summary>Sets the shim of MediaObject.ProcessInput(Int32 inputStreamIndex, IMediaBuffer mediaBuffer, DmoInputDataBufferFlags flags, Int64 timestamp, Int64 duration)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.ProcessOutputDmoProcessOutputFlagsInt32DmoOutputDataBufferArray">
            <summary>Sets the shim of MediaObject.ProcessOutput(DmoProcessOutputFlags flags, Int32 outputBufferCount, DmoOutputDataBuffer[] outputBuffers)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SetInputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SetInputType(Int32 inputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SetInputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SetInputWaveFormat(Int32 inputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SetOutputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SetOutputType(Int32 outputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SetOutputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SetOutputWaveFormat(Int32 outputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SupportsInputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SupportsInputType(Int32 inputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SupportsInputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SupportsInputWaveFormat(Int32 inputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SupportsOutputTypeInt32DmoMediaType">
            <summary>Sets the shim of MediaObject.SupportsOutputType(Int32 outputStreamIndex, DmoMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObject.AllInstances.SupportsOutputWaveFormatInt32WaveFormat">
            <summary>Sets the shim of MediaObject.SupportsOutputWaveFormat(Int32 outputStreamIndex, WaveFormat waveFormat)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo">
            <summary>Shim type of NAudio.Dmo.MediaObjectSizeInfo</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.#ctor(NAudio.Dmo.MediaObjectSizeInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AlignmentGet">
            <summary>Sets the shim of MediaObjectSizeInfo.get_Alignment()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AlignmentSetInt32">
            <summary>Sets the shim of MediaObjectSizeInfo.set_Alignment(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.ConstructorInt32Int32Int32">
            <summary>Sets the shim of MediaObjectSizeInfo.MediaObjectSizeInfo(Int32 size, Int32 maxLookahead, Int32 alignment)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.MaxLookaheadGet">
            <summary>Sets the shim of MediaObjectSizeInfo.get_MaxLookahead()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.MaxLookaheadSetInt32">
            <summary>Sets the shim of MediaObjectSizeInfo.set_MaxLookahead(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.SizeGet">
            <summary>Sets the shim of MediaObjectSizeInfo.get_Size()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.SizeSetInt32">
            <summary>Sets the shim of MediaObjectSizeInfo.set_Size(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.ToString">
            <summary>Sets the shim of MediaObjectSizeInfo.ToString()</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.AlignmentGet">
            <summary>Sets the shim of MediaObjectSizeInfo.get_Alignment()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.AlignmentSetInt32">
            <summary>Sets the shim of MediaObjectSizeInfo.set_Alignment(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.MaxLookaheadGet">
            <summary>Sets the shim of MediaObjectSizeInfo.get_MaxLookahead()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.MaxLookaheadSetInt32">
            <summary>Sets the shim of MediaObjectSizeInfo.set_MaxLookahead(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.SizeGet">
            <summary>Sets the shim of MediaObjectSizeInfo.get_Size()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.SizeSetInt32">
            <summary>Sets the shim of MediaObjectSizeInfo.set_Size(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimMediaObjectSizeInfo.AllInstances.ToString01">
            <summary>Sets the shim of MediaObjectSizeInfo.ToString()</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimResampler">
            <summary>Shim type of NAudio.Dmo.Resampler</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimResampler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimResampler.#ctor(NAudio.Dmo.Resampler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimResampler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimResampler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimResampler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimResampler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimResampler.Constructor">
            <summary>Sets the shim of Resampler.Resampler()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimResampler.Dispose">
            <summary>Sets the shim of Resampler.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimResampler.MediaObjectGet">
            <summary>Sets the shim of Resampler.get_MediaObject()</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimResampler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimResampler.AllInstances.Dispose">
            <summary>Sets the shim of Resampler.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimResampler.AllInstances.MediaObjectGet">
            <summary>Sets the shim of Resampler.get_MediaObject()</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder">
            <summary>Shim type of NAudio.Dmo.WindowsMediaMp3Decoder</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.#ctor(NAudio.Dmo.WindowsMediaMp3Decoder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.Constructor">
            <summary>Sets the shim of WindowsMediaMp3Decoder.WindowsMediaMp3Decoder()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.Dispose">
            <summary>Sets the shim of WindowsMediaMp3Decoder.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.MediaObjectGet">
            <summary>Sets the shim of WindowsMediaMp3Decoder.get_MediaObject()</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.AllInstances.Dispose">
            <summary>Sets the shim of WindowsMediaMp3Decoder.Dispose()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.ShimWindowsMediaMp3Decoder.AllInstances.MediaObjectGet">
            <summary>Sets the shim of WindowsMediaMp3Decoder.get_MediaObject()</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubDmoDescriptor">
            <summary>Stub type of NAudio.Dmo.DmoDescriptor</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubDmoDescriptor.#ctor(System.String,System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubDmoDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubDmoDescriptor</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubDmoDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubDmoDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubDmoDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubDmoEnumerator">
            <summary>Stub type of NAudio.Dmo.DmoEnumerator</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubDmoEnumerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubDmoEnumerator.InitializeStub">
            <summary>Initializes a new instance of type StubDmoEnumerator</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubDmoEnumerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubDmoEnumerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubDmoEnumerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubIMediaBuffer">
            <summary>Stub type of NAudio.Dmo.IMediaBuffer</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubIMediaBuffer.#ctor">
            <summary>Initializes a new instance of type StubIMediaBuffer</summary>
        </member>
        <member name="F:NAudio.Dmo.Fakes.StubIMediaBuffer.GetBufferAndLengthIntPtrIntPtr">
            <summary>Sets the stub of IMediaBuffer.GetBufferAndLength(IntPtr bufferPointerPointer, IntPtr validDataLengthPointer)</summary>
        </member>
        <member name="F:NAudio.Dmo.Fakes.StubIMediaBuffer.GetMaxLengthInt32Out">
            <summary>Sets the stub of IMediaBuffer.GetMaxLength(Int32&amp; maxLength)</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubIMediaBuffer.na::NAudio#Dmo#IMediaBuffer#GetBufferAndLength(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of IMediaBuffer.GetBufferAndLength(IntPtr bufferPointerPointer, IntPtr validDataLengthPointer)</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubIMediaBuffer.na::NAudio#Dmo#IMediaBuffer#GetMaxLength(System.Int32@)">
            <summary>Sets the stub of IMediaBuffer.GetMaxLength(Int32&amp; maxLength)</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubIMediaBuffer.na::NAudio#Dmo#IMediaBuffer#SetLength(System.Int32)">
            <summary>Sets the stub of IMediaBuffer.SetLength(Int32 length)</summary>
        </member>
        <member name="F:NAudio.Dmo.Fakes.StubIMediaBuffer.SetLengthInt32">
            <summary>Sets the stub of IMediaBuffer.SetLength(Int32 length)</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubMediaBuffer">
            <summary>Stub type of NAudio.Dmo.MediaBuffer</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubMediaBuffer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubMediaBuffer.InitializeStub">
            <summary>Initializes a new instance of type StubMediaBuffer</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubMediaBuffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubMediaBuffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubMediaBuffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo">
            <summary>Stub type of NAudio.Dmo.MediaObjectSizeInfo</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.InitializeStub">
            <summary>Initializes a new instance of type StubMediaObjectSizeInfo</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.ToString">
            <summary>Sets the stub of MediaObjectSizeInfo.ToString()</summary>
        </member>
        <member name="F:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.ToString01">
            <summary>Sets the stub of MediaObjectSizeInfo.ToString()</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubMediaObjectSizeInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubResampler">
            <summary>Stub type of NAudio.Dmo.Resampler</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubResampler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubResampler.InitializeStub">
            <summary>Initializes a new instance of type StubResampler</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubResampler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubResampler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubResampler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dmo.Fakes.StubWindowsMediaMp3Decoder">
            <summary>Stub type of NAudio.Dmo.WindowsMediaMp3Decoder</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubWindowsMediaMp3Decoder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dmo.Fakes.StubWindowsMediaMp3Decoder.InitializeStub">
            <summary>Initializes a new instance of type StubWindowsMediaMp3Decoder</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubWindowsMediaMp3Decoder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubWindowsMediaMp3Decoder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dmo.Fakes.StubWindowsMediaMp3Decoder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimBiQuadFilter">
            <summary>Shim type of NAudio.Dsp.BiQuadFilter</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimBiQuadFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimBiQuadFilter.#ctor(NAudio.Dsp.BiQuadFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimBiQuadFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimBiQuadFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.AllPassFilterSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.AllPassFilter(Single sampleRate, Single centreFrequency, Single q)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.BandPassFilterConstantPeakGainSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.BandPassFilterConstantPeakGain(Single sampleRate, Single centreFrequency, Single q)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.BandPassFilterConstantSkirtGainSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.BandPassFilterConstantSkirtGain(Single sampleRate, Single centreFrequency, Single q)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.ConstructorDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the shim of BiQuadFilter.BiQuadFilter(Double a0, Double a1, Double a2, Double b0, Double b1, Double b2)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.HighPassFilterSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.HighPassFilter(Single sampleRate, Single cutoffFrequency, Single q)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.HighShelfSingleSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.HighShelf(Single sampleRate, Single cutoffFrequency, Single shelfSlope, Single dbGain)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.LowPassFilterSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.LowPassFilter(Single sampleRate, Single cutoffFrequency, Single q)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.LowShelfSingleSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.LowShelf(Single sampleRate, Single cutoffFrequency, Single shelfSlope, Single dbGain)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.NotchFilterSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.NotchFilter(Single sampleRate, Single centreFrequency, Single q)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.PeakingEQSingleSingleSingleSingle">
            <summary>Sets the shim of BiQuadFilter.PeakingEQ(Single sampleRate, Single centreFrequency, Single q, Single dbGain)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.TransformSingle">
            <summary>Sets the shim of BiQuadFilter.Transform(Single inSample)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimBiQuadFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimBiQuadFilter.AllInstances.TransformSingle">
            <summary>Sets the shim of BiQuadFilter.Transform(Single inSample)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimComplex">
            <summary>Shim type of NAudio.Dsp.Complex</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimComplex.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimComplex.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimComplex.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimComplex.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimComplex.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimEnvelopeGenerator">
            <summary>Shim type of NAudio.Dsp.EnvelopeGenerator</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.#ctor(NAudio.Dsp.EnvelopeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AttackRateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_AttackRate()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AttackRateSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_AttackRate(Single value)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.CalcCoefSingleSingle">
            <summary>Sets the shim of EnvelopeGenerator.CalcCoef(Single rate, Single targetRatio)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.Constructor">
            <summary>Sets the shim of EnvelopeGenerator.EnvelopeGenerator()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.DecayRateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_DecayRate()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.DecayRateSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_DecayRate(Single value)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.GateBoolean">
            <summary>Sets the shim of EnvelopeGenerator.Gate(Boolean gate)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.GetOutput">
            <summary>Sets the shim of EnvelopeGenerator.GetOutput()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.Process">
            <summary>Sets the shim of EnvelopeGenerator.Process()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.ReleaseRateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_ReleaseRate()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.ReleaseRateSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_ReleaseRate(Single value)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.Reset">
            <summary>Sets the shim of EnvelopeGenerator.Reset()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.SetTargetRatioASingle">
            <summary>Sets the shim of EnvelopeGenerator.SetTargetRatioA(Single targetRatio)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.SetTargetRatioDRSingle">
            <summary>Sets the shim of EnvelopeGenerator.SetTargetRatioDR(Single targetRatio)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.StateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_State()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.SustainLevelGet">
            <summary>Sets the shim of EnvelopeGenerator.get_SustainLevel()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.SustainLevelSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_SustainLevel(Single value)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.AttackRateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_AttackRate()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.AttackRateSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_AttackRate(Single value)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.DecayRateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_DecayRate()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.DecayRateSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_DecayRate(Single value)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.GateBoolean">
            <summary>Sets the shim of EnvelopeGenerator.Gate(Boolean gate)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.GetOutput">
            <summary>Sets the shim of EnvelopeGenerator.GetOutput()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.Process">
            <summary>Sets the shim of EnvelopeGenerator.Process()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.ReleaseRateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_ReleaseRate()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.ReleaseRateSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_ReleaseRate(Single value)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.Reset">
            <summary>Sets the shim of EnvelopeGenerator.Reset()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.SetTargetRatioASingle">
            <summary>Sets the shim of EnvelopeGenerator.SetTargetRatioA(Single targetRatio)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.SetTargetRatioDRSingle">
            <summary>Sets the shim of EnvelopeGenerator.SetTargetRatioDR(Single targetRatio)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.StateGet">
            <summary>Sets the shim of EnvelopeGenerator.get_State()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.SustainLevelGet">
            <summary>Sets the shim of EnvelopeGenerator.get_SustainLevel()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimEnvelopeGenerator.AllInstances.SustainLevelSetSingle">
            <summary>Sets the shim of EnvelopeGenerator.set_SustainLevel(Single value)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimFastFourierTransform">
            <summary>Shim type of NAudio.Dsp.FastFourierTransform</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimFastFourierTransform.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimFastFourierTransform.#ctor(NAudio.Dsp.FastFourierTransform)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimFastFourierTransform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimFastFourierTransform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimFastFourierTransform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimFastFourierTransform.BlackmannHarrisWindowInt32Int32">
            <summary>Sets the shim of FastFourierTransform.BlackmannHarrisWindow(Int32 n, Int32 frameSize)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimFastFourierTransform.Constructor">
            <summary>Sets the shim of FastFourierTransform.FastFourierTransform()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimFastFourierTransform.FFTBooleanInt32ComplexArray">
            <summary>Sets the shim of FastFourierTransform.FFT(Boolean forward, Int32 m, Complex[] data)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimFastFourierTransform.HammingWindowInt32Int32">
            <summary>Sets the shim of FastFourierTransform.HammingWindow(Int32 n, Int32 frameSize)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimFastFourierTransform.HannWindowInt32Int32">
            <summary>Sets the shim of FastFourierTransform.HannWindow(Int32 n, Int32 frameSize)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimFastFourierTransform.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution">
            <summary>Shim type of NAudio.Dsp.ImpulseResponseConvolution</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.#ctor(NAudio.Dsp.ImpulseResponseConvolution)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.Constructor">
            <summary>Sets the shim of ImpulseResponseConvolution.ImpulseResponseConvolution()</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.ConvolveSingleArraySingleArray">
            <summary>Sets the shim of ImpulseResponseConvolution.Convolve(Single[] input, Single[] impulseResponse)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.NormalizeSingleArray">
            <summary>Sets the shim of ImpulseResponseConvolution.Normalize(Single[] data)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.AllInstances.ConvolveSingleArraySingleArray">
            <summary>Sets the shim of ImpulseResponseConvolution.Convolve(Single[] input, Single[] impulseResponse)</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.ShimImpulseResponseConvolution.AllInstances.NormalizeSingleArray">
            <summary>Sets the shim of ImpulseResponseConvolution.Normalize(Single[] data)</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.StubEnvelopeGenerator">
            <summary>Stub type of NAudio.Dsp.EnvelopeGenerator</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.StubEnvelopeGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.StubEnvelopeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubEnvelopeGenerator</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubEnvelopeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubEnvelopeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubEnvelopeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.StubFastFourierTransform">
            <summary>Stub type of NAudio.Dsp.FastFourierTransform</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.StubFastFourierTransform.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.StubFastFourierTransform.InitializeStub">
            <summary>Initializes a new instance of type StubFastFourierTransform</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubFastFourierTransform.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubFastFourierTransform.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubFastFourierTransform.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Dsp.Fakes.StubImpulseResponseConvolution">
            <summary>Stub type of NAudio.Dsp.ImpulseResponseConvolution</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.StubImpulseResponseConvolution.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Dsp.Fakes.StubImpulseResponseConvolution.InitializeStub">
            <summary>Initializes a new instance of type StubImpulseResponseConvolution</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubImpulseResponseConvolution.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubImpulseResponseConvolution.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Dsp.Fakes.StubImpulseResponseConvolution.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Fakes.ShimMmException">
            <summary>Shim type of NAudio.MmException</summary>
        </member>
        <member name="M:NAudio.Fakes.ShimMmException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Fakes.ShimMmException.#ctor(NAudio.MmException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Fakes.ShimMmException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Fakes.ShimMmException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Fakes.ShimMmException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Fakes.ShimMmException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Fakes.ShimMmException.ConstructorMmResultString">
            <summary>Sets the shim of MmException.MmException(MmResult result, String function)</summary>
        </member>
        <member name="P:NAudio.Fakes.ShimMmException.ErrorMessageMmResultString">
            <summary>Sets the shim of MmException.ErrorMessage(MmResult result, String function)</summary>
        </member>
        <member name="P:NAudio.Fakes.ShimMmException.ResultGet">
            <summary>Sets the shim of MmException.get_Result()</summary>
        </member>
        <member name="P:NAudio.Fakes.ShimMmException.TryMmResultString">
            <summary>Sets the shim of MmException.Try(MmResult result, String function)</summary>
        </member>
        <member name="T:NAudio.Fakes.ShimMmException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Fakes.ShimMmException.AllInstances.ResultGet">
            <summary>Sets the shim of MmException.get_Result()</summary>
        </member>
        <member name="T:NAudio.Fakes.StubMmException">
            <summary>Stub type of NAudio.MmException</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.#ctor(NAudio.MmResult,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMmException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMmException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.InitializeStub">
            <summary>Initializes a new instance of type StubMmException</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NAudio.Fakes.StubMmException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NAudio.Fakes.StubMmException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NAudio.Fakes.StubMmException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping">
            <summary>Shim type of NAudio.FileFormats.Map.CakewalkDrumMapping</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.#ctor(NAudio.FileFormats.Map.CakewalkDrumMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.ChannelGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_Channel()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.ChannelSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.Constructor">
            <summary>Sets the shim of CakewalkDrumMapping.CakewalkDrumMapping()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.InNoteGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_InNote()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.InNoteSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_InNote(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.NoteNameGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_NoteName()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.NoteNameSetString">
            <summary>Sets the shim of CakewalkDrumMapping.set_NoteName(String value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.OutNoteGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_OutNote()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.OutNoteSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_OutNote(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.OutPortGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_OutPort()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.OutPortSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_OutPort(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.ToString">
            <summary>Sets the shim of CakewalkDrumMapping.ToString()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.VelocityAdjustGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_VelocityAdjust()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.VelocityAdjustSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_VelocityAdjust(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.VelocityScaleGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_VelocityScale()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.VelocityScaleSetSingle">
            <summary>Sets the shim of CakewalkDrumMapping.set_VelocityScale(Single value)</summary>
        </member>
        <member name="T:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.ChannelGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_Channel()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.ChannelSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.InNoteGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_InNote()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.InNoteSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_InNote(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.NoteNameGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_NoteName()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.NoteNameSetString">
            <summary>Sets the shim of CakewalkDrumMapping.set_NoteName(String value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.OutNoteGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_OutNote()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.OutNoteSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_OutNote(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.OutPortGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_OutPort()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.OutPortSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_OutPort(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.ToString01">
            <summary>Sets the shim of CakewalkDrumMapping.ToString()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.VelocityAdjustGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_VelocityAdjust()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.VelocityAdjustSetInt32">
            <summary>Sets the shim of CakewalkDrumMapping.set_VelocityAdjust(Int32 value)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.VelocityScaleGet">
            <summary>Sets the shim of CakewalkDrumMapping.get_VelocityScale()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkDrumMapping.AllInstances.VelocityScaleSetSingle">
            <summary>Sets the shim of CakewalkDrumMapping.set_VelocityScale(Single value)</summary>
        </member>
        <member name="T:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile">
            <summary>Shim type of NAudio.FileFormats.Map.CakewalkMapFile</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.#ctor(NAudio.FileFormats.Map.CakewalkMapFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ConstructorString">
            <summary>Sets the shim of CakewalkMapFile.CakewalkMapFile(String filename)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.DrumMappingsGet">
            <summary>Sets the shim of CakewalkMapFile.get_DrumMappings()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ReadMapEntryBinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadMapEntry(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ReadMapHeaderBinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadMapHeader(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ReadMapNameBinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadMapName(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ReadOutputsSection1BinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadOutputsSection1(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ReadOutputsSection2BinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadOutputsSection2(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ReadOutputsSection3BinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadOutputsSection3(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.ToString">
            <summary>Sets the shim of CakewalkMapFile.ToString()</summary>
        </member>
        <member name="T:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.DrumMappingsGet">
            <summary>Sets the shim of CakewalkMapFile.get_DrumMappings()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ReadMapEntryBinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadMapEntry(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ReadMapHeaderBinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadMapHeader(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ReadMapNameBinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadMapName(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ReadOutputsSection1BinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadOutputsSection1(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ReadOutputsSection2BinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadOutputsSection2(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ReadOutputsSection3BinaryReader">
            <summary>Sets the shim of CakewalkMapFile.ReadOutputsSection3(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.ShimCakewalkMapFile.AllInstances.ToString01">
            <summary>Sets the shim of CakewalkMapFile.ToString()</summary>
        </member>
        <member name="T:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping">
            <summary>Stub type of NAudio.FileFormats.Map.CakewalkDrumMapping</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.InitializeStub">
            <summary>Initializes a new instance of type StubCakewalkDrumMapping</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.ToString">
            <summary>Sets the stub of CakewalkDrumMapping.ToString()</summary>
        </member>
        <member name="F:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.ToString01">
            <summary>Sets the stub of CakewalkDrumMapping.ToString()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.StubCakewalkDrumMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile">
            <summary>Stub type of NAudio.FileFormats.Map.CakewalkMapFile</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.InitializeStub">
            <summary>Initializes a new instance of type StubCakewalkMapFile</summary>
        </member>
        <member name="M:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.ToString">
            <summary>Sets the stub of CakewalkMapFile.ToString()</summary>
        </member>
        <member name="F:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.ToString01">
            <summary>Sets the stub of CakewalkMapFile.ToString()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.FileFormats.Map.Fakes.StubCakewalkMapFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor">
            <summary>Shim type of NAudio.FileFormats.Mp3.DmoMp3FrameDecompressor</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.#ctor(NAudio.FileFormats.Mp3.DmoMp3FrameDecompressor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.Bind(NAudio.Wave.IMp3FrameDecompressor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.ConstructorWaveFormat">
            <summary>Sets the shim of DmoMp3FrameDecompressor.DmoMp3FrameDecompressor(WaveFormat sourceFormat)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.DecompressFrameMp3FrameByteArrayInt32">
            <summary>Sets the shim of DmoMp3FrameDecompressor.DecompressFrame(Mp3Frame frame, Byte[] dest, Int32 destOffset)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.Dispose">
            <summary>Sets the shim of DmoMp3FrameDecompressor.Dispose()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.OutputFormatGet">
            <summary>Sets the shim of DmoMp3FrameDecompressor.get_OutputFormat()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.Reset">
            <summary>Sets the shim of DmoMp3FrameDecompressor.Reset()</summary>
        </member>
        <member name="T:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.AllInstances.DecompressFrameMp3FrameByteArrayInt32">
            <summary>Sets the shim of DmoMp3FrameDecompressor.DecompressFrame(Mp3Frame frame, Byte[] dest, Int32 destOffset)</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.AllInstances.Dispose">
            <summary>Sets the shim of DmoMp3FrameDecompressor.Dispose()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.AllInstances.OutputFormatGet">
            <summary>Sets the shim of DmoMp3FrameDecompressor.get_OutputFormat()</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.ShimDmoMp3FrameDecompressor.AllInstances.Reset">
            <summary>Sets the shim of DmoMp3FrameDecompressor.Reset()</summary>
        </member>
        <member name="T:NAudio.FileFormats.Mp3.Fakes.StubDmoMp3FrameDecompressor">
            <summary>Stub type of NAudio.FileFormats.Mp3.DmoMp3FrameDecompressor</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.StubDmoMp3FrameDecompressor.#ctor(NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.FileFormats.Mp3.Fakes.StubDmoMp3FrameDecompressor.InitializeStub">
            <summary>Initializes a new instance of type StubDmoMp3FrameDecompressor</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.StubDmoMp3FrameDecompressor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.StubDmoMp3FrameDecompressor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.FileFormats.Mp3.Fakes.StubDmoMp3FrameDecompressor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimFader">
            <summary>Shim type of NAudio.Gui.Fader</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.#ctor(NAudio.Gui.Fader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimFader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.Constructor">
            <summary>Sets the shim of Fader.Fader()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.DisposeBoolean">
            <summary>Sets the shim of Fader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.DrawSliderGraphics">
            <summary>Sets the shim of Fader.DrawSlider(Graphics g)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.InitializeComponent">
            <summary>Sets the shim of Fader.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.MaximumGet">
            <summary>Sets the shim of Fader.get_Maximum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.MaximumSetInt32">
            <summary>Sets the shim of Fader.set_Maximum(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.MinimumGet">
            <summary>Sets the shim of Fader.get_Minimum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.MinimumSetInt32">
            <summary>Sets the shim of Fader.set_Minimum(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of Fader.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of Fader.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.OnMouseUpMouseEventArgs">
            <summary>Sets the shim of Fader.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.OnPaintPaintEventArgs">
            <summary>Sets the shim of Fader.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.OrientationGet">
            <summary>Sets the shim of Fader.get_Orientation()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.OrientationSetOrientation">
            <summary>Sets the shim of Fader.set_Orientation(Orientation value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.ValueGet">
            <summary>Sets the shim of Fader.get_Value()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.ValueSetInt32">
            <summary>Sets the shim of Fader.set_Value(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimFader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Fader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.DrawSliderGraphics">
            <summary>Sets the shim of Fader.DrawSlider(Graphics g)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.InitializeComponent">
            <summary>Sets the shim of Fader.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.MaximumGet">
            <summary>Sets the shim of Fader.get_Maximum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.MaximumSetInt32">
            <summary>Sets the shim of Fader.set_Maximum(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.MinimumGet">
            <summary>Sets the shim of Fader.get_Minimum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.MinimumSetInt32">
            <summary>Sets the shim of Fader.set_Minimum(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of Fader.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of Fader.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.OnMouseUpMouseEventArgs">
            <summary>Sets the shim of Fader.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of Fader.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.OrientationGet">
            <summary>Sets the shim of Fader.get_Orientation()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.OrientationSetOrientation">
            <summary>Sets the shim of Fader.set_Orientation(Orientation value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.ValueGet">
            <summary>Sets the shim of Fader.get_Value()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimFader.AllInstances.ValueSetInt32">
            <summary>Sets the shim of Fader.set_Value(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimPanSlider">
            <summary>Shim type of NAudio.Gui.PanSlider</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.#ctor(NAudio.Gui.PanSlider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.Windows.Forms.IContainerControl)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPanSlider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.Constructor">
            <summary>Sets the shim of PanSlider.PanSlider()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.DisposeBoolean">
            <summary>Sets the shim of PanSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.InitializeComponent">
            <summary>Sets the shim of PanSlider.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of PanSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of PanSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.OnPaintPaintEventArgs">
            <summary>Sets the shim of PanSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.PanChangedAddEventHandler">
            <summary>Sets the shim of PanSlider.add_PanChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.PanChangedRemoveEventHandler">
            <summary>Sets the shim of PanSlider.remove_PanChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.PanGet">
            <summary>Sets the shim of PanSlider.get_Pan()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.PanSetSingle">
            <summary>Sets the shim of PanSlider.set_Pan(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.SetPanFromMouseInt32">
            <summary>Sets the shim of PanSlider.SetPanFromMouse(Int32 x)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimPanSlider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PanSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.InitializeComponent">
            <summary>Sets the shim of PanSlider.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of PanSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of PanSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of PanSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.PanChangedAddEventHandler">
            <summary>Sets the shim of PanSlider.add_PanChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.PanChangedRemoveEventHandler">
            <summary>Sets the shim of PanSlider.remove_PanChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.PanGet">
            <summary>Sets the shim of PanSlider.get_Pan()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.PanSetSingle">
            <summary>Sets the shim of PanSlider.set_Pan(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPanSlider.AllInstances.SetPanFromMouseInt32">
            <summary>Sets the shim of PanSlider.SetPanFromMouse(Int32 x)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimPot">
            <summary>Shim type of NAudio.Gui.Pot</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.#ctor(NAudio.Gui.Pot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.Windows.Forms.IContainerControl)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimPot.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.Constructor">
            <summary>Sets the shim of Pot.Pot()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.DisposeBoolean">
            <summary>Sets the shim of Pot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.InitializeComponent">
            <summary>Sets the shim of Pot.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.MaximumGet">
            <summary>Sets the shim of Pot.get_Maximum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.MaximumSetDouble">
            <summary>Sets the shim of Pot.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.MinimumGet">
            <summary>Sets the shim of Pot.get_Minimum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.MinimumSetDouble">
            <summary>Sets the shim of Pot.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of Pot.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of Pot.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.OnMouseUpMouseEventArgs">
            <summary>Sets the shim of Pot.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.OnPaintPaintEventArgs">
            <summary>Sets the shim of Pot.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.SetValueDoubleBoolean">
            <summary>Sets the shim of Pot.SetValue(Double newValue, Boolean raiseEvents)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.ValueChangedAddEventHandler">
            <summary>Sets the shim of Pot.add_ValueChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.ValueChangedRemoveEventHandler">
            <summary>Sets the shim of Pot.remove_ValueChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.ValueGet">
            <summary>Sets the shim of Pot.get_Value()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.ValueSetDouble">
            <summary>Sets the shim of Pot.set_Value(Double value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimPot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Pot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.InitializeComponent">
            <summary>Sets the shim of Pot.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.MaximumGet">
            <summary>Sets the shim of Pot.get_Maximum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.MaximumSetDouble">
            <summary>Sets the shim of Pot.set_Maximum(Double value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.MinimumGet">
            <summary>Sets the shim of Pot.get_Minimum()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.MinimumSetDouble">
            <summary>Sets the shim of Pot.set_Minimum(Double value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of Pot.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of Pot.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.OnMouseUpMouseEventArgs">
            <summary>Sets the shim of Pot.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of Pot.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.SetValueDoubleBoolean">
            <summary>Sets the shim of Pot.SetValue(Double newValue, Boolean raiseEvents)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.ValueChangedAddEventHandler">
            <summary>Sets the shim of Pot.add_ValueChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.ValueChangedRemoveEventHandler">
            <summary>Sets the shim of Pot.remove_ValueChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.ValueGet">
            <summary>Sets the shim of Pot.get_Value()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimPot.AllInstances.ValueSetDouble">
            <summary>Sets the shim of Pot.set_Value(Double value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimVolumeMeter">
            <summary>Shim type of NAudio.Gui.VolumeMeter</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.#ctor(NAudio.Gui.VolumeMeter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeMeter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AmplitudeGet">
            <summary>Sets the shim of VolumeMeter.get_Amplitude()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AmplitudeSetSingle">
            <summary>Sets the shim of VolumeMeter.set_Amplitude(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.Constructor">
            <summary>Sets the shim of VolumeMeter.VolumeMeter()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.DisposeBoolean">
            <summary>Sets the shim of VolumeMeter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.InitializeComponent">
            <summary>Sets the shim of VolumeMeter.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.MaxDbGet">
            <summary>Sets the shim of VolumeMeter.get_MaxDb()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.MaxDbSetSingle">
            <summary>Sets the shim of VolumeMeter.set_MaxDb(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.MinDbGet">
            <summary>Sets the shim of VolumeMeter.get_MinDb()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.MinDbSetSingle">
            <summary>Sets the shim of VolumeMeter.set_MinDb(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.OnForeColorChangedEventArgs">
            <summary>Sets the shim of VolumeMeter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.OnPaintPaintEventArgs">
            <summary>Sets the shim of VolumeMeter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.OrientationGet">
            <summary>Sets the shim of VolumeMeter.get_Orientation()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.OrientationSetOrientation">
            <summary>Sets the shim of VolumeMeter.set_Orientation(Orientation value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.AmplitudeGet">
            <summary>Sets the shim of VolumeMeter.get_Amplitude()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.AmplitudeSetSingle">
            <summary>Sets the shim of VolumeMeter.set_Amplitude(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of VolumeMeter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.InitializeComponent">
            <summary>Sets the shim of VolumeMeter.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.MaxDbGet">
            <summary>Sets the shim of VolumeMeter.get_MaxDb()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.MaxDbSetSingle">
            <summary>Sets the shim of VolumeMeter.set_MaxDb(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.MinDbGet">
            <summary>Sets the shim of VolumeMeter.get_MinDb()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.MinDbSetSingle">
            <summary>Sets the shim of VolumeMeter.set_MinDb(Single value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.OnForeColorChangedEventArgs">
            <summary>Sets the shim of VolumeMeter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of VolumeMeter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.OrientationGet">
            <summary>Sets the shim of VolumeMeter.get_Orientation()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeMeter.AllInstances.OrientationSetOrientation">
            <summary>Sets the shim of VolumeMeter.set_Orientation(Orientation value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimVolumeSlider">
            <summary>Shim type of NAudio.Gui.VolumeSlider</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.#ctor(NAudio.Gui.VolumeSlider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.Windows.Forms.IContainerControl)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimVolumeSlider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.Constructor">
            <summary>Sets the shim of VolumeSlider.VolumeSlider()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.DisposeBoolean">
            <summary>Sets the shim of VolumeSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.InitializeComponent">
            <summary>Sets the shim of VolumeSlider.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of VolumeSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of VolumeSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.OnPaintPaintEventArgs">
            <summary>Sets the shim of VolumeSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.SetVolumeFromMouseInt32">
            <summary>Sets the shim of VolumeSlider.SetVolumeFromMouse(Int32 x)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.VolumeChangedAddEventHandler">
            <summary>Sets the shim of VolumeSlider.add_VolumeChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.VolumeChangedRemoveEventHandler">
            <summary>Sets the shim of VolumeSlider.remove_VolumeChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.VolumeGet">
            <summary>Sets the shim of VolumeSlider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.VolumeSetSingle">
            <summary>Sets the shim of VolumeSlider.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of VolumeSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.InitializeComponent">
            <summary>Sets the shim of VolumeSlider.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.OnMouseDownMouseEventArgs">
            <summary>Sets the shim of VolumeSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.OnMouseMoveMouseEventArgs">
            <summary>Sets the shim of VolumeSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of VolumeSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.SetVolumeFromMouseInt32">
            <summary>Sets the shim of VolumeSlider.SetVolumeFromMouse(Int32 x)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.VolumeChangedAddEventHandler">
            <summary>Sets the shim of VolumeSlider.add_VolumeChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.VolumeChangedRemoveEventHandler">
            <summary>Sets the shim of VolumeSlider.remove_VolumeChanged(EventHandler value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.VolumeGet">
            <summary>Sets the shim of VolumeSlider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimVolumeSlider.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of VolumeSlider.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimWaveViewer">
            <summary>Shim type of NAudio.Gui.WaveViewer</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.#ctor(NAudio.Gui.WaveViewer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.Windows.Forms.IContainerControl)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveViewer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.Constructor">
            <summary>Sets the shim of WaveViewer.WaveViewer()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.DisposeBoolean">
            <summary>Sets the shim of WaveViewer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.InitializeComponent">
            <summary>Sets the shim of WaveViewer.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.OnPaintPaintEventArgs">
            <summary>Sets the shim of WaveViewer.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.SamplesPerPixelGet">
            <summary>Sets the shim of WaveViewer.get_SamplesPerPixel()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.SamplesPerPixelSetInt32">
            <summary>Sets the shim of WaveViewer.set_SamplesPerPixel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.StartPositionGet">
            <summary>Sets the shim of WaveViewer.get_StartPosition()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.StartPositionSetInt64">
            <summary>Sets the shim of WaveViewer.set_StartPosition(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.WaveStreamGet">
            <summary>Sets the shim of WaveViewer.get_WaveStream()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.WaveStreamSetWaveStream">
            <summary>Sets the shim of WaveViewer.set_WaveStream(WaveStream value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveViewer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.InitializeComponent">
            <summary>Sets the shim of WaveViewer.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of WaveViewer.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.SamplesPerPixelGet">
            <summary>Sets the shim of WaveViewer.get_SamplesPerPixel()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.SamplesPerPixelSetInt32">
            <summary>Sets the shim of WaveViewer.set_SamplesPerPixel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.StartPositionGet">
            <summary>Sets the shim of WaveViewer.get_StartPosition()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.StartPositionSetInt64">
            <summary>Sets the shim of WaveViewer.set_StartPosition(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.WaveStreamGet">
            <summary>Sets the shim of WaveViewer.get_WaveStream()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveViewer.AllInstances.WaveStreamSetWaveStream">
            <summary>Sets the shim of WaveViewer.set_WaveStream(WaveStream value)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimWaveformPainter">
            <summary>Shim type of NAudio.Gui.WaveformPainter</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.#ctor(NAudio.Gui.WaveformPainter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.ShimWaveformPainter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AddMaxSingle">
            <summary>Sets the shim of WaveformPainter.AddMax(Single maxSample)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.Constructor">
            <summary>Sets the shim of WaveformPainter.WaveformPainter()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.DisposeBoolean">
            <summary>Sets the shim of WaveformPainter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.GetSampleInt32">
            <summary>Sets the shim of WaveformPainter.GetSample(Int32 index)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.InitializeComponent">
            <summary>Sets the shim of WaveformPainter.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.OnForeColorChangedEventArgs">
            <summary>Sets the shim of WaveformPainter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.OnPaintPaintEventArgs">
            <summary>Sets the shim of WaveformPainter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.OnResizeEventArgs">
            <summary>Sets the shim of WaveformPainter.OnResize(EventArgs e)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.AddMaxSingle">
            <summary>Sets the shim of WaveformPainter.AddMax(Single maxSample)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveformPainter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.GetSampleInt32">
            <summary>Sets the shim of WaveformPainter.GetSample(Int32 index)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.InitializeComponent">
            <summary>Sets the shim of WaveformPainter.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.OnForeColorChangedEventArgs">
            <summary>Sets the shim of WaveformPainter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.OnPaintPaintEventArgs">
            <summary>Sets the shim of WaveformPainter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.ShimWaveformPainter.AllInstances.OnResizeEventArgs">
            <summary>Sets the shim of WaveformPainter.OnResize(EventArgs e)</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubFader">
            <summary>Stub type of NAudio.Gui.Fader</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubFader.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubFader.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubFader.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubFader.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubFader.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubFader.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubFader.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubFader.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubFader.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubFader.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubFader.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubFader.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubFader.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubFader.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubFader.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubFader.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubFader.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubFader.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubFader.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubFader.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubFader.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AutoSizeGet">
            <summary>Sets the stub of Control.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.AutoSizeSetBoolean">
            <summary>Sets the stub of Control.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BindingContextGet">
            <summary>Sets the stub of Control.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.BindingContextSetBindingContext">
            <summary>Sets the stub of Control.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CanEnableImeGet">
            <summary>Sets the stub of Control.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CreateParamsGet">
            <summary>Sets the stub of Control.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DefaultSizeGet">
            <summary>Sets the stub of Control.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DisplayRectangleGet">
            <summary>Sets the stub of Control.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.Dispose(System.Boolean)">
            <summary>Sets the stub of Fader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DisposeBoolean">
            <summary>Sets the stub of Fader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.InitializeStub">
            <summary>Initializes a new instance of type StubFader</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnCreateControl">
            <summary>Sets the stub of Control.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnCreateControl01">
            <summary>Sets the stub of Control.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnFontChangedEventArgs">
            <summary>Sets the stub of Control.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of Control.OnLayout(LayoutEventArgs levent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of Control.OnLayout(LayoutEventArgs levent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Fader.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of Fader.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Fader.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of Fader.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Fader.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Fader.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnPaddingChangedEventArgs">
            <summary>Sets the stub of Control.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Fader.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPaintBackground(PaintEventArgs pevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of Control.OnPaintBackground(PaintEventArgs pevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnPaintPaintEventArgs">
            <summary>Sets the stub of Fader.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentChangedEventArgs">
            <summary>Sets the stub of Control.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnResize(System.EventArgs)">
            <summary>Sets the stub of Control.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnResizeEventArgs">
            <summary>Sets the stub of Control.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.OnVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of Control.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of Control.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessDialogCharChar">
            <summary>Sets the stub of Control.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessDialogKeyKeys">
            <summary>Sets the stub of Control.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of Control.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ProcessMnemonicChar">
            <summary>Sets the stub of Control.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of Control.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of Control.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ScaleCoreSingleSingle">
            <summary>Sets the stub of Control.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of Control.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SelectBooleanBoolean">
            <summary>Sets the stub of Control.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.TextGet">
            <summary>Sets the stub of Control.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.TextSetString">
            <summary>Sets the stub of Control.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubFader.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubFader.WndProcMessageRef">
            <summary>Sets the stub of Control.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.AutoSize">
            <summary>Sets the stub of Control.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.BindingContext">
            <summary>Sets the stub of Control.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.CanEnableIme">
            <summary>Sets the stub of Control.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.CreateParams">
            <summary>Sets the stub of Control.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DefaultSize">
            <summary>Sets the stub of Control.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DisplayRectangle">
            <summary>Sets the stub of Control.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubFader.Text">
            <summary>Sets the stub of Control.get_Text()</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubPanSlider">
            <summary>Stub type of NAudio.Gui.PanSlider</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AdjustFormScrollbars(System.Boolean)">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AdjustFormScrollbarsBoolean">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubPanSlider.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubPanSlider.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToAutoScroll">
            <summary>Attaches delegates to emulate StubPanSlider.AutoScroll as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubPanSlider.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubPanSlider.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToAutoValidate">
            <summary>Attaches delegates to emulate StubPanSlider.AutoValidate as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubPanSlider.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubPanSlider.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubPanSlider.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubPanSlider.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubPanSlider.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubPanSlider.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubPanSlider.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubPanSlider.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubPanSlider.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubPanSlider.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubPanSlider.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubPanSlider.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubPanSlider.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubPanSlider.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubPanSlider.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubPanSlider.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubPanSlider.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoScrollGet">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoScrollSetBoolean">
            <summary>Sets the stub of ScrollableControl.set_AutoScroll(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoSizeGet">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoSizeSetBoolean">
            <summary>Sets the stub of UserControl.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoValidateGet">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.AutoValidateSetAutoValidate">
            <summary>Sets the stub of UserControl.set_AutoValidate(AutoValidate value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BindingContextGet">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.BindingContextSetBindingContext">
            <summary>Sets the stub of ContainerControl.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CanEnableImeGet">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CreateParamsGet">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DefaultSizeGet">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DisplayRectangleGet">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.Dispose(System.Boolean)">
            <summary>Sets the stub of PanSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DisposeBoolean">
            <summary>Sets the stub of PanSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.InitializeStub">
            <summary>Initializes a new instance of type StubPanSlider</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnAutoValidateChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnAutoValidateChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnCreateControl">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnCreateControl01">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnFontChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnLoad(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnLoadEventArgs">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of PanSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of PanSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of PanSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of PanSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnPaddingChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of PanSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnPaintPaintEventArgs">
            <summary>Sets the stub of PanSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnResize(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnResizeEventArgs">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnScrollScrollEventArgs">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.OnVisibleChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessDialogCharChar">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessDialogKeyKeys">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessMnemonicChar">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ProcessTabKey(System.Boolean)">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ProcessTabKeyBoolean">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ScaleCoreSingleSingle">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ScrollToControl(System.Windows.Forms.Control)">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ScrollToControlControl">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SelectBooleanBoolean">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.TextGet">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.TextSetString">
            <summary>Sets the stub of UserControl.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.UpdateDefaultButton">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.UpdateDefaultButton01">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ValidateChildren">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ValidateChildren01">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.ValidateChildrenValidationConstraints">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPanSlider.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPanSlider.WndProcMessageRef">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.AutoScroll">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.AutoSize">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.AutoValidate">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.BindingContext">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.CanEnableIme">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.CreateParams">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DefaultSize">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DisplayRectangle">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPanSlider.Text">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubPot">
            <summary>Stub type of NAudio.Gui.Pot</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AdjustFormScrollbars(System.Boolean)">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AdjustFormScrollbarsBoolean">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubPot.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubPot.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToAutoScroll">
            <summary>Attaches delegates to emulate StubPot.AutoScroll as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubPot.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubPot.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToAutoValidate">
            <summary>Attaches delegates to emulate StubPot.AutoValidate as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubPot.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubPot.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubPot.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubPot.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubPot.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubPot.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubPot.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubPot.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubPot.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubPot.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubPot.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubPot.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubPot.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubPot.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubPot.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubPot.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubPot.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoScrollGet">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoScrollSetBoolean">
            <summary>Sets the stub of ScrollableControl.set_AutoScroll(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoSizeGet">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoSizeSetBoolean">
            <summary>Sets the stub of UserControl.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoValidateGet">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.AutoValidateSetAutoValidate">
            <summary>Sets the stub of UserControl.set_AutoValidate(AutoValidate value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BindingContextGet">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.BindingContextSetBindingContext">
            <summary>Sets the stub of ContainerControl.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CanEnableImeGet">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CreateParamsGet">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DefaultSizeGet">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DisplayRectangleGet">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.Dispose(System.Boolean)">
            <summary>Sets the stub of Pot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DisposeBoolean">
            <summary>Sets the stub of Pot.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.InitializeStub">
            <summary>Initializes a new instance of type StubPot</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnAutoValidateChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnAutoValidateChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnCreateControl">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnCreateControl01">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnFontChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnLoad(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnLoadEventArgs">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Pot.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of Pot.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Pot.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of Pot.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Pot.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Pot.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnPaddingChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Pot.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnPaintPaintEventArgs">
            <summary>Sets the stub of Pot.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnResize(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnResizeEventArgs">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnScrollScrollEventArgs">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.OnVisibleChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessDialogCharChar">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessDialogKeyKeys">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessMnemonicChar">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ProcessTabKey(System.Boolean)">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ProcessTabKeyBoolean">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ScaleCoreSingleSingle">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ScrollToControl(System.Windows.Forms.Control)">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ScrollToControlControl">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SelectBooleanBoolean">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.TextGet">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.TextSetString">
            <summary>Sets the stub of UserControl.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.UpdateDefaultButton">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.UpdateDefaultButton01">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ValidateChildren">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ValidateChildren01">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.ValidateChildrenValidationConstraints">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubPot.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubPot.WndProcMessageRef">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.AutoScroll">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.AutoSize">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.AutoValidate">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.BindingContext">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.CanEnableIme">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.CreateParams">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DefaultSize">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DisplayRectangle">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubPot.Text">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubVolumeMeter">
            <summary>Stub type of NAudio.Gui.VolumeMeter</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubVolumeMeter.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubVolumeMeter.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubVolumeMeter.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubVolumeMeter.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubVolumeMeter.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubVolumeMeter.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubVolumeMeter.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubVolumeMeter.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubVolumeMeter.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubVolumeMeter.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubVolumeMeter.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubVolumeMeter.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubVolumeMeter.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubVolumeMeter.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubVolumeMeter.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubVolumeMeter.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubVolumeMeter.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubVolumeMeter.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubVolumeMeter.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubVolumeMeter.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubVolumeMeter.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AutoSizeGet">
            <summary>Sets the stub of Control.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.AutoSizeSetBoolean">
            <summary>Sets the stub of Control.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BindingContextGet">
            <summary>Sets the stub of Control.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.BindingContextSetBindingContext">
            <summary>Sets the stub of Control.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CanEnableImeGet">
            <summary>Sets the stub of Control.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CreateParamsGet">
            <summary>Sets the stub of Control.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DefaultSizeGet">
            <summary>Sets the stub of Control.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DisplayRectangleGet">
            <summary>Sets the stub of Control.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.Dispose(System.Boolean)">
            <summary>Sets the stub of VolumeMeter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DisposeBoolean">
            <summary>Sets the stub of VolumeMeter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.InitializeStub">
            <summary>Initializes a new instance of type StubVolumeMeter</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnCreateControl">
            <summary>Sets the stub of Control.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnCreateControl01">
            <summary>Sets the stub of Control.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnFontChangedEventArgs">
            <summary>Sets the stub of Control.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of VolumeMeter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnForeColorChangedEventArgs">
            <summary>Sets the stub of VolumeMeter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of Control.OnLayout(LayoutEventArgs levent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of Control.OnLayout(LayoutEventArgs levent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnPaddingChangedEventArgs">
            <summary>Sets the stub of Control.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of VolumeMeter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPaintBackground(PaintEventArgs pevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of Control.OnPaintBackground(PaintEventArgs pevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnPaintPaintEventArgs">
            <summary>Sets the stub of VolumeMeter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentChangedEventArgs">
            <summary>Sets the stub of Control.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnResize(System.EventArgs)">
            <summary>Sets the stub of Control.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnResizeEventArgs">
            <summary>Sets the stub of Control.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.OnVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of Control.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of Control.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessDialogCharChar">
            <summary>Sets the stub of Control.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessDialogKeyKeys">
            <summary>Sets the stub of Control.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of Control.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ProcessMnemonicChar">
            <summary>Sets the stub of Control.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of Control.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of Control.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ScaleCoreSingleSingle">
            <summary>Sets the stub of Control.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of Control.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SelectBooleanBoolean">
            <summary>Sets the stub of Control.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.TextGet">
            <summary>Sets the stub of Control.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.TextSetString">
            <summary>Sets the stub of Control.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeMeter.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeMeter.WndProcMessageRef">
            <summary>Sets the stub of Control.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.AutoSize">
            <summary>Sets the stub of Control.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.BindingContext">
            <summary>Sets the stub of Control.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.CanEnableIme">
            <summary>Sets the stub of Control.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.CreateParams">
            <summary>Sets the stub of Control.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DefaultSize">
            <summary>Sets the stub of Control.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DisplayRectangle">
            <summary>Sets the stub of Control.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeMeter.Text">
            <summary>Sets the stub of Control.get_Text()</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubVolumeSlider">
            <summary>Stub type of NAudio.Gui.VolumeSlider</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AdjustFormScrollbars(System.Boolean)">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AdjustFormScrollbarsBoolean">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubVolumeSlider.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubVolumeSlider.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToAutoScroll">
            <summary>Attaches delegates to emulate StubVolumeSlider.AutoScroll as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubVolumeSlider.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubVolumeSlider.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToAutoValidate">
            <summary>Attaches delegates to emulate StubVolumeSlider.AutoValidate as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubVolumeSlider.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubVolumeSlider.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubVolumeSlider.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubVolumeSlider.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubVolumeSlider.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubVolumeSlider.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubVolumeSlider.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubVolumeSlider.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubVolumeSlider.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubVolumeSlider.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubVolumeSlider.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubVolumeSlider.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubVolumeSlider.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubVolumeSlider.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubVolumeSlider.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubVolumeSlider.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubVolumeSlider.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoScrollGet">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoScrollSetBoolean">
            <summary>Sets the stub of ScrollableControl.set_AutoScroll(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoSizeGet">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoSizeSetBoolean">
            <summary>Sets the stub of UserControl.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoValidateGet">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.AutoValidateSetAutoValidate">
            <summary>Sets the stub of UserControl.set_AutoValidate(AutoValidate value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BindingContextGet">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.BindingContextSetBindingContext">
            <summary>Sets the stub of ContainerControl.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CanEnableImeGet">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CreateParamsGet">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DefaultSizeGet">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DisplayRectangleGet">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.Dispose(System.Boolean)">
            <summary>Sets the stub of VolumeSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DisposeBoolean">
            <summary>Sets the stub of VolumeSlider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.InitializeStub">
            <summary>Initializes a new instance of type StubVolumeSlider</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnAutoValidateChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnAutoValidateChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnCreateControl">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnCreateControl01">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnFontChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnLoad(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnLoadEventArgs">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of VolumeSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of VolumeSlider.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of VolumeSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of VolumeSlider.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnPaddingChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of VolumeSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnPaintPaintEventArgs">
            <summary>Sets the stub of VolumeSlider.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnResize(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnResizeEventArgs">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnScrollScrollEventArgs">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.OnVisibleChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessDialogCharChar">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessDialogKeyKeys">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessMnemonicChar">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ProcessTabKey(System.Boolean)">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ProcessTabKeyBoolean">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ScaleCoreSingleSingle">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ScrollToControl(System.Windows.Forms.Control)">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ScrollToControlControl">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SelectBooleanBoolean">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.TextGet">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.TextSetString">
            <summary>Sets the stub of UserControl.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.UpdateDefaultButton">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.UpdateDefaultButton01">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ValidateChildren">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ValidateChildren01">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.ValidateChildrenValidationConstraints">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubVolumeSlider.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubVolumeSlider.WndProcMessageRef">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.AutoScroll">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.AutoSize">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.AutoValidate">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.BindingContext">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.CanEnableIme">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.CreateParams">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DefaultSize">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DisplayRectangle">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubVolumeSlider.Text">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubWaveViewer">
            <summary>Stub type of NAudio.Gui.WaveViewer</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AdjustFormScrollbars(System.Boolean)">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AdjustFormScrollbarsBoolean">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubWaveViewer.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubWaveViewer.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToAutoScroll">
            <summary>Attaches delegates to emulate StubWaveViewer.AutoScroll as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubWaveViewer.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubWaveViewer.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToAutoValidate">
            <summary>Attaches delegates to emulate StubWaveViewer.AutoValidate as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubWaveViewer.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubWaveViewer.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubWaveViewer.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubWaveViewer.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubWaveViewer.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubWaveViewer.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubWaveViewer.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubWaveViewer.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubWaveViewer.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubWaveViewer.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubWaveViewer.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubWaveViewer.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubWaveViewer.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubWaveViewer.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubWaveViewer.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubWaveViewer.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubWaveViewer.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoScrollGet">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoScrollSetBoolean">
            <summary>Sets the stub of ScrollableControl.set_AutoScroll(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoSizeGet">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoSizeSetBoolean">
            <summary>Sets the stub of UserControl.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoValidateGet">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.AutoValidateSetAutoValidate">
            <summary>Sets the stub of UserControl.set_AutoValidate(AutoValidate value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BindingContextGet">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.BindingContextSetBindingContext">
            <summary>Sets the stub of ContainerControl.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CanEnableImeGet">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CreateParamsGet">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DefaultSizeGet">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DisplayRectangleGet">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveViewer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DisposeBoolean">
            <summary>Sets the stub of WaveViewer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.InitializeStub">
            <summary>Initializes a new instance of type StubWaveViewer</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnAutoValidateChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnAutoValidateChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnCreateControl">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnCreateControl01">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnFontChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnLoad(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnLoadEventArgs">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of UserControl.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of UserControl.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnPaddingChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of WaveViewer.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnPaintPaintEventArgs">
            <summary>Sets the stub of WaveViewer.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnResize(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnResizeEventArgs">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnScrollScrollEventArgs">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.OnVisibleChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessDialogCharChar">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessDialogKeyKeys">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessMnemonicChar">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ProcessTabKey(System.Boolean)">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ProcessTabKeyBoolean">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ScaleCoreSingleSingle">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ScrollToControl(System.Windows.Forms.Control)">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ScrollToControlControl">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SelectBooleanBoolean">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.TextGet">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.TextSetString">
            <summary>Sets the stub of UserControl.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.UpdateDefaultButton">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.UpdateDefaultButton01">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ValidateChildren">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ValidateChildren01">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.ValidateChildrenValidationConstraints">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveViewer.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveViewer.WndProcMessageRef">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.AutoScroll">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.AutoSize">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.AutoValidate">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.BindingContext">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.CanEnableIme">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.CreateParams">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DefaultSize">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DisplayRectangle">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveViewer.Text">
            <summary>Sets the stub of UserControl.get_Text()</summary>
        </member>
        <member name="T:NAudio.Gui.Fakes.StubWaveformPainter">
            <summary>Stub type of NAudio.Gui.WaveformPainter</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubWaveformPainter.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubWaveformPainter.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubWaveformPainter.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubWaveformPainter.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubWaveformPainter.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubWaveformPainter.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubWaveformPainter.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubWaveformPainter.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubWaveformPainter.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubWaveformPainter.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubWaveformPainter.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubWaveformPainter.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubWaveformPainter.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubWaveformPainter.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubWaveformPainter.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubWaveformPainter.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubWaveformPainter.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubWaveformPainter.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubWaveformPainter.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubWaveformPainter.Site as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubWaveformPainter.Text as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AutoSizeGet">
            <summary>Sets the stub of Control.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.AutoSizeSetBoolean">
            <summary>Sets the stub of Control.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BindingContextGet">
            <summary>Sets the stub of Control.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.BindingContextSetBindingContext">
            <summary>Sets the stub of Control.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CanEnableImeGet">
            <summary>Sets the stub of Control.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CreateParamsGet">
            <summary>Sets the stub of Control.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DefaultSizeGet">
            <summary>Sets the stub of Control.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DisplayRectangleGet">
            <summary>Sets the stub of Control.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveformPainter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DisposeBoolean">
            <summary>Sets the stub of WaveformPainter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.InitializeStub">
            <summary>Initializes a new instance of type StubWaveformPainter</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnCreateControl">
            <summary>Sets the stub of Control.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnCreateControl01">
            <summary>Sets the stub of Control.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnFontChangedEventArgs">
            <summary>Sets the stub of Control.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of WaveformPainter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnForeColorChangedEventArgs">
            <summary>Sets the stub of WaveformPainter.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of Control.OnLayout(LayoutEventArgs levent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of Control.OnLayout(LayoutEventArgs levent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnPaddingChangedEventArgs">
            <summary>Sets the stub of Control.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of WaveformPainter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPaintBackground(PaintEventArgs pevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of Control.OnPaintBackground(PaintEventArgs pevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnPaintPaintEventArgs">
            <summary>Sets the stub of WaveformPainter.OnPaint(PaintEventArgs pe)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentChangedEventArgs">
            <summary>Sets the stub of Control.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnResize(System.EventArgs)">
            <summary>Sets the stub of WaveformPainter.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnResizeEventArgs">
            <summary>Sets the stub of WaveformPainter.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.OnVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of Control.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of Control.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessDialogCharChar">
            <summary>Sets the stub of Control.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessDialogKeyKeys">
            <summary>Sets the stub of Control.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of Control.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ProcessMnemonicChar">
            <summary>Sets the stub of Control.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of Control.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of Control.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ScaleCoreSingleSingle">
            <summary>Sets the stub of Control.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of Control.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SelectBooleanBoolean">
            <summary>Sets the stub of Control.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.TextGet">
            <summary>Sets the stub of Control.get_Text()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.TextSetString">
            <summary>Sets the stub of Control.set_Text(String value)</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Gui.Fakes.StubWaveformPainter.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Gui.Fakes.StubWaveformPainter.WndProcMessageRef">
            <summary>Sets the stub of Control.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.AutoSize">
            <summary>Sets the stub of Control.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.BindingContext">
            <summary>Sets the stub of Control.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.CanEnableIme">
            <summary>Sets the stub of Control.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.CreateParams">
            <summary>Sets the stub of Control.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DefaultSize">
            <summary>Sets the stub of Control.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DisplayRectangle">
            <summary>Sets the stub of Control.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="P:NAudio.Gui.Fakes.StubWaveformPainter.Text">
            <summary>Sets the stub of Control.get_Text()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimAudioSubtypes">
            <summary>Shim type of NAudio.MediaFoundation.AudioSubtypes</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimAudioSubtypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimAudioSubtypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimAudioSubtypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimAudioSubtypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimAudioSubtypes.StaticConstructor">
            <summary>Sets the shim of AudioSubtypes.AudioSubtypes()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory">
            <summary>Shim type of NAudio.MediaFoundation.MFReadWriteClassFactory</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory.#ctor(NAudio.MediaFoundation.MFReadWriteClassFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFReadWriteClassFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_INPUT_STREAM_INFO">
            <summary>Shim type of NAudio.MediaFoundation.MFT_INPUT_STREAM_INFO</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_INPUT_STREAM_INFO.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_INPUT_STREAM_INFO.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_INPUT_STREAM_INFO.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMFT_INPUT_STREAM_INFO.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_INPUT_STREAM_INFO.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_DATA_BUFFER">
            <summary>Shim type of NAudio.MediaFoundation.MFT_OUTPUT_DATA_BUFFER</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_DATA_BUFFER.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_DATA_BUFFER.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_DATA_BUFFER.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_DATA_BUFFER.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_DATA_BUFFER.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_STREAM_INFO">
            <summary>Shim type of NAudio.MediaFoundation.MFT_OUTPUT_STREAM_INFO</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_STREAM_INFO.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_STREAM_INFO.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_STREAM_INFO.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_STREAM_INFO.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_OUTPUT_STREAM_INFO.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO">
            <summary>Shim type of NAudio.MediaFoundation.MFT_REGISTER_TYPE_INFO</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.#ctor(NAudio.MediaFoundation.MFT_REGISTER_TYPE_INFO)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.Constructor">
            <summary>Sets the shim of MFT_REGISTER_TYPE_INFO.MFT_REGISTER_TYPE_INFO()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMFT_REGISTER_TYPE_INFO.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS">
            <summary>Shim type of NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.#ctor(NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.Constructor">
            <summary>Sets the shim of MF_SINK_WRITER_STATISTICS.MF_SINK_WRITER_STATISTICS()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMF_SINK_WRITER_STATISTICS.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi">
            <summary>Shim type of NAudio.MediaFoundation.MediaFoundationApi</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateAttributesInt32">
            <summary>Sets the shim of MediaFoundationApi.CreateAttributes(Int32 initialSize)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateByteStreamObject">
            <summary>Sets the shim of MediaFoundationApi.CreateByteStream(Object stream)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateMediaType">
            <summary>Sets the shim of MediaFoundationApi.CreateMediaType()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateMediaTypeFromWaveFormatWaveFormat">
            <summary>Sets the shim of MediaFoundationApi.CreateMediaTypeFromWaveFormat(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateMemoryBufferInt32">
            <summary>Sets the shim of MediaFoundationApi.CreateMemoryBuffer(Int32 bufferSize)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateSample">
            <summary>Sets the shim of MediaFoundationApi.CreateSample()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.CreateSourceReaderFromByteStreamIMFByteStream">
            <summary>Sets the shim of MediaFoundationApi.CreateSourceReaderFromByteStream(IMFByteStream byteStream)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.EnumerateTransformsGuid">
            <summary>Sets the shim of MediaFoundationApi.EnumerateTransforms(Guid category)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.Shutdown">
            <summary>Sets the shim of MediaFoundationApi.Shutdown()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationApi.Startup">
            <summary>Sets the shim of MediaFoundationApi.Startup()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationAttributes">
            <summary>Shim type of NAudio.MediaFoundation.MediaFoundationAttributes</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationAttributes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationAttributes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationAttributes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationAttributes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationAttributes.StaticConstructor">
            <summary>Sets the shim of MediaFoundationAttributes.MediaFoundationAttributes()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationErrors">
            <summary>Shim type of NAudio.MediaFoundation.MediaFoundationErrors</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationErrors.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationErrors.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationErrors.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationErrors.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationInterop">
            <summary>Shim type of NAudio.MediaFoundation.MediaFoundationInterop</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationInterop.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationInterop.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationInterop.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationInterop.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform">
            <summary>Shim type of NAudio.MediaFoundation.MediaFoundationTransform</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.#ctor(NAudio.MediaFoundation.MediaFoundationTransform)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.BytesToNsPositionInt32WaveFormat">
            <summary>Sets the shim of MediaFoundationTransform.BytesToNsPosition(Int32 bytes, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.ConstructorIWaveProviderWaveFormat">
            <summary>Sets the shim of MediaFoundationTransform.MediaFoundationTransform(IWaveProvider sourceProvider, WaveFormat outputFormat)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.Dispose">
            <summary>Sets the shim of MediaFoundationTransform.Dispose()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationTransform.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.EndStreamAndDrain">
            <summary>Sets the shim of MediaFoundationTransform.EndStreamAndDrain()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.InitializeTransformForStreaming">
            <summary>Sets the shim of MediaFoundationTransform.InitializeTransformForStreaming()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationTransform.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.ReadFromOutputBufferByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationTransform.ReadFromOutputBuffer(Byte[] buffer, Int32 offset, Int32 needed)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.ReadFromSource">
            <summary>Sets the shim of MediaFoundationTransform.ReadFromSource()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.ReadFromTransform">
            <summary>Sets the shim of MediaFoundationTransform.ReadFromTransform()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.Reposition">
            <summary>Sets the shim of MediaFoundationTransform.Reposition()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.WaveFormatGet">
            <summary>Sets the shim of MediaFoundationTransform.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.Dispose">
            <summary>Sets the shim of MediaFoundationTransform.Dispose()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationTransform.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.EndStreamAndDrain">
            <summary>Sets the shim of MediaFoundationTransform.EndStreamAndDrain()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.InitializeTransformForStreaming">
            <summary>Sets the shim of MediaFoundationTransform.InitializeTransformForStreaming()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationTransform.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.ReadFromOutputBufferByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationTransform.ReadFromOutputBuffer(Byte[] buffer, Int32 offset, Int32 needed)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.ReadFromSource">
            <summary>Sets the shim of MediaFoundationTransform.ReadFromSource()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.ReadFromTransform">
            <summary>Sets the shim of MediaFoundationTransform.ReadFromTransform()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.Reposition">
            <summary>Sets the shim of MediaFoundationTransform.Reposition()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransform.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MediaFoundationTransform.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransformCategories">
            <summary>Shim type of NAudio.MediaFoundation.MediaFoundationTransformCategories</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransformCategories.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransformCategories.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransformCategories.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransformCategories.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaFoundationTransformCategories.StaticConstructor">
            <summary>Sets the shim of MediaFoundationTransformCategories.MediaFoundationTransformCategories()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaType">
            <summary>Shim type of NAudio.MediaFoundation.MediaType</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaType.#ctor(NAudio.MediaFoundation.MediaType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AverageBytesPerSecondGet">
            <summary>Sets the shim of MediaType.get_AverageBytesPerSecond()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.BitsPerSampleGet">
            <summary>Sets the shim of MediaType.get_BitsPerSample()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.BitsPerSampleSetInt32">
            <summary>Sets the shim of MediaType.set_BitsPerSample(Int32 value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.ChannelCountGet">
            <summary>Sets the shim of MediaType.get_ChannelCount()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.ChannelCountSetInt32">
            <summary>Sets the shim of MediaType.set_ChannelCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.Constructor">
            <summary>Sets the shim of MediaType.MediaType()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.ConstructorIMFMediaType">
            <summary>Sets the shim of MediaType.MediaType(IMFMediaType mediaType)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.ConstructorWaveFormat">
            <summary>Sets the shim of MediaType.MediaType(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.GetGuidGuid">
            <summary>Sets the shim of MediaType.GetGuid(Guid key)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.GetUInt32Guid">
            <summary>Sets the shim of MediaType.GetUInt32(Guid key)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.MajorTypeGet">
            <summary>Sets the shim of MediaType.get_MajorType()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.MajorTypeSetGuid">
            <summary>Sets the shim of MediaType.set_MajorType(Guid value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.MediaFoundationObjectGet">
            <summary>Sets the shim of MediaType.get_MediaFoundationObject()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.SampleRateGet">
            <summary>Sets the shim of MediaType.get_SampleRate()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.SampleRateSetInt32">
            <summary>Sets the shim of MediaType.set_SampleRate(Int32 value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.SubTypeGet">
            <summary>Sets the shim of MediaType.get_SubType()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.SubTypeSetGuid">
            <summary>Sets the shim of MediaType.set_SubType(Guid value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.TryGetUInt32GuidInt32">
            <summary>Sets the shim of MediaType.TryGetUInt32(Guid key, Int32 defaultValue)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.AverageBytesPerSecondGet">
            <summary>Sets the shim of MediaType.get_AverageBytesPerSecond()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.BitsPerSampleGet">
            <summary>Sets the shim of MediaType.get_BitsPerSample()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.BitsPerSampleSetInt32">
            <summary>Sets the shim of MediaType.set_BitsPerSample(Int32 value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.ChannelCountGet">
            <summary>Sets the shim of MediaType.get_ChannelCount()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.ChannelCountSetInt32">
            <summary>Sets the shim of MediaType.set_ChannelCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.GetGuidGuid">
            <summary>Sets the shim of MediaType.GetGuid(Guid key)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.GetUInt32Guid">
            <summary>Sets the shim of MediaType.GetUInt32(Guid key)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.MajorTypeGet">
            <summary>Sets the shim of MediaType.get_MajorType()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.MajorTypeSetGuid">
            <summary>Sets the shim of MediaType.set_MajorType(Guid value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.MediaFoundationObjectGet">
            <summary>Sets the shim of MediaType.get_MediaFoundationObject()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.SampleRateGet">
            <summary>Sets the shim of MediaType.get_SampleRate()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.SampleRateSetInt32">
            <summary>Sets the shim of MediaType.set_SampleRate(Int32 value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.SubTypeGet">
            <summary>Sets the shim of MediaType.get_SubType()</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.SubTypeSetGuid">
            <summary>Sets the shim of MediaType.set_SubType(Guid value)</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaType.AllInstances.TryGetUInt32GuidInt32">
            <summary>Sets the shim of MediaType.TryGetUInt32(Guid key, Int32 defaultValue)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.ShimMediaTypes">
            <summary>Shim type of NAudio.MediaFoundation.MediaTypes</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.ShimMediaTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.ShimMediaTypes.StaticConstructor">
            <summary>Sets the shim of MediaTypes.MediaTypes()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFActivate">
            <summary>Stub type of NAudio.MediaFoundation.IMFActivate</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.#ctor">
            <summary>Initializes a new instance of type StubIMFActivate</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.ActivateObjectGuidObjectOut">
            <summary>Sets the stub of IMFActivate.ActivateObject(Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.CompareIMFAttributesInt32BooleanOut">
            <summary>Sets the stub of IMFActivate.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.CompareIMFAttributesInt32BooleanOut01">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.CompareItemGuidIntPtrBooleanOut">
            <summary>Sets the stub of IMFActivate.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.CompareItemGuidIntPtrBooleanOut01">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.CopyAllItemsIMFAttributes">
            <summary>Sets the stub of IMFActivate.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.CopyAllItemsIMFAttributes01">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.DeleteAllItems">
            <summary>Sets the stub of IMFActivate.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.DeleteAllItems01">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.DeleteItemGuid">
            <summary>Sets the stub of IMFActivate.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.DeleteItemGuid01">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.DetachObject">
            <summary>Sets the stub of IMFActivate.DetachObject()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetAllocatedBlobGuidIntPtrOutInt32Out">
            <summary>Sets the stub of IMFActivate.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetAllocatedBlobGuidIntPtrOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetAllocatedStringGuidStringOutInt32Out">
            <summary>Sets the stub of IMFActivate.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetAllocatedStringGuidStringOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetBlobGuidByteArrayInt32Int32Out">
            <summary>Sets the stub of IMFActivate.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetBlobGuidByteArrayInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetBlobSizeGuidInt32Out">
            <summary>Sets the stub of IMFActivate.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetBlobSizeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetCountInt32Out">
            <summary>Sets the stub of IMFActivate.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetCountInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetDoubleGuidDoubleOut">
            <summary>Sets the stub of IMFActivate.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetDoubleGuidDoubleOut01">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetGUIDGuidGuidOut">
            <summary>Sets the stub of IMFActivate.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetGUIDGuidGuidOut01">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetItemByIndexInt32GuidOutPropVariantRef">
            <summary>Sets the stub of IMFActivate.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetItemByIndexInt32GuidOutPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetItemGuidPropVariantRef">
            <summary>Sets the stub of IMFActivate.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetItemGuidPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetItemTypeGuidInt32Out">
            <summary>Sets the stub of IMFActivate.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetItemTypeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetStringGuidStringBuilderInt32Int32Out">
            <summary>Sets the stub of IMFActivate.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetStringGuidStringBuilderInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetStringLengthGuidInt32Out">
            <summary>Sets the stub of IMFActivate.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetStringLengthGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetUINT32GuidInt32Out">
            <summary>Sets the stub of IMFActivate.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetUINT32GuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetUINT64GuidInt64Out">
            <summary>Sets the stub of IMFActivate.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetUINT64GuidInt64Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetUnknownGuidGuidObjectOut">
            <summary>Sets the stub of IMFActivate.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.GetUnknownGuidGuidObjectOut01">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.LockStore">
            <summary>Sets the stub of IMFActivate.LockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.LockStore01">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#ActivateObject(System.Guid,System.Object@)">
            <summary>Sets the stub of IMFActivate.ActivateObject(Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFActivate.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFActivate.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFActivate.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#DeleteAllItems">
            <summary>Sets the stub of IMFActivate.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFActivate.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#DetachObject">
            <summary>Sets the stub of IMFActivate.DetachObject()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFActivate.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFActivate.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFActivate.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFActivate.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFActivate.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFActivate.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFActivate.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#LockStore">
            <summary>Sets the stub of IMFActivate.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFActivate.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFActivate.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFActivate.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFActivate.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFActivate.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFActivate.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFActivate.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFActivate.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#ShutdownObject">
            <summary>Sets the stub of IMFActivate.ShutdownObject()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFActivate#UnlockStore">
            <summary>Sets the stub of IMFActivate.UnlockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#DeleteAllItems">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#LockStore">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFActivate.na::NAudio#MediaFoundation#IMFAttributes#UnlockStore">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetBlobGuidByteArrayInt32">
            <summary>Sets the stub of IMFActivate.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetBlobGuidByteArrayInt3201">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetDoubleGuidDouble">
            <summary>Sets the stub of IMFActivate.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetDoubleGuidDouble01">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetGUIDGuidGuid">
            <summary>Sets the stub of IMFActivate.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetGUIDGuidGuid01">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetItemGuidIntPtr">
            <summary>Sets the stub of IMFActivate.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetItemGuidIntPtr01">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetStringGuidString">
            <summary>Sets the stub of IMFActivate.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetStringGuidString01">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetUINT32GuidInt32">
            <summary>Sets the stub of IMFActivate.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetUINT32GuidInt3201">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetUINT64GuidInt64">
            <summary>Sets the stub of IMFActivate.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetUINT64GuidInt6401">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetUnknownGuidObject">
            <summary>Sets the stub of IMFActivate.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.SetUnknownGuidObject01">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.ShutdownObject">
            <summary>Sets the stub of IMFActivate.ShutdownObject()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.UnlockStore">
            <summary>Sets the stub of IMFActivate.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFActivate.UnlockStore01">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFAttributes">
            <summary>Stub type of NAudio.MediaFoundation.IMFAttributes</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.#ctor">
            <summary>Initializes a new instance of type StubIMFAttributes</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.CompareIMFAttributesInt32BooleanOut">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.CompareItemGuidIntPtrBooleanOut">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.CopyAllItemsIMFAttributes">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.DeleteAllItems">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.DeleteItemGuid">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetAllocatedBlobGuidIntPtrOutInt32Out">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetAllocatedStringGuidStringOutInt32Out">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetBlobGuidByteArrayInt32Int32Out">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetBlobSizeGuidInt32Out">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetCountInt32Out">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetDoubleGuidDoubleOut">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetGUIDGuidGuidOut">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetItemByIndexInt32GuidOutPropVariantRef">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetItemGuidPropVariantRef">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetItemTypeGuidInt32Out">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetStringGuidStringBuilderInt32Int32Out">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetStringLengthGuidInt32Out">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetUINT32GuidInt32Out">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetUINT64GuidInt64Out">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.GetUnknownGuidGuidObjectOut">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.LockStore">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#DeleteAllItems">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#LockStore">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFAttributes.na::NAudio#MediaFoundation#IMFAttributes#UnlockStore">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetBlobGuidByteArrayInt32">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetDoubleGuidDouble">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetGUIDGuidGuid">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetItemGuidIntPtr">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetStringGuidString">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetUINT32GuidInt32">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetUINT64GuidInt64">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.SetUnknownGuidObject">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFAttributes.UnlockStore">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFByteStream">
            <summary>Stub type of NAudio.MediaFoundation.IMFByteStream</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.#ctor">
            <summary>Initializes a new instance of type StubIMFByteStream</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.BeginReadIntPtrInt32IntPtrIntPtr">
            <summary>Sets the stub of IMFByteStream.BeginRead(IntPtr pb, Int32 cb, IntPtr pCallback, IntPtr punkState)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.BeginWriteIntPtrInt32IntPtrIntPtr">
            <summary>Sets the stub of IMFByteStream.BeginWrite(IntPtr pb, Int32 cb, IntPtr pCallback, IntPtr punkState)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.Close">
            <summary>Sets the stub of IMFByteStream.Close()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.EndReadIntPtrInt32Ref">
            <summary>Sets the stub of IMFByteStream.EndRead(IntPtr pResult, Int32&amp; pcbRead)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.EndWriteIntPtrInt32Ref">
            <summary>Sets the stub of IMFByteStream.EndWrite(IntPtr pResult, Int32&amp; pcbWritten)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.Flush">
            <summary>Sets the stub of IMFByteStream.Flush()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.GetCapabilitiesInt32Ref">
            <summary>Sets the stub of IMFByteStream.GetCapabilities(Int32&amp; pdwCapabiities)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.GetCurrentPositionInt64Ref">
            <summary>Sets the stub of IMFByteStream.GetCurrentPosition(Int64&amp; pqwPosition)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.GetLengthInt64Ref">
            <summary>Sets the stub of IMFByteStream.GetLength(Int64&amp; pqwLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.IsEndOfStreamBooleanRef">
            <summary>Sets the stub of IMFByteStream.IsEndOfStream(Boolean&amp; pfEndOfStream)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#BeginRead(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of IMFByteStream.BeginRead(IntPtr pb, Int32 cb, IntPtr pCallback, IntPtr punkState)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#BeginWrite(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of IMFByteStream.BeginWrite(IntPtr pb, Int32 cb, IntPtr pCallback, IntPtr punkState)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#Close">
            <summary>Sets the stub of IMFByteStream.Close()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#EndRead(System.IntPtr,System.Int32@)">
            <summary>Sets the stub of IMFByteStream.EndRead(IntPtr pResult, Int32&amp; pcbRead)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#EndWrite(System.IntPtr,System.Int32@)">
            <summary>Sets the stub of IMFByteStream.EndWrite(IntPtr pResult, Int32&amp; pcbWritten)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#Flush">
            <summary>Sets the stub of IMFByteStream.Flush()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#GetCapabilities(System.Int32@)">
            <summary>Sets the stub of IMFByteStream.GetCapabilities(Int32&amp; pdwCapabiities)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#GetCurrentPosition(System.Int64@)">
            <summary>Sets the stub of IMFByteStream.GetCurrentPosition(Int64&amp; pqwPosition)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#GetLength(System.Int64@)">
            <summary>Sets the stub of IMFByteStream.GetLength(Int64&amp; pqwLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#IsEndOfStream(System.Boolean@)">
            <summary>Sets the stub of IMFByteStream.IsEndOfStream(Boolean&amp; pfEndOfStream)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#Read(System.IntPtr,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFByteStream.Read(IntPtr pb, Int32 cb, Int32&amp; pcbRead)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#Seek(System.Int32,System.Int64,System.Int32,System.Int64@)">
            <summary>Sets the stub of IMFByteStream.Seek(Int32 SeekOrigin, Int64 llSeekOffset, Int32 dwSeekFlags, Int64&amp; pqwCurrentPosition)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#SetCurrentPosition(System.Int64)">
            <summary>Sets the stub of IMFByteStream.SetCurrentPosition(Int64 qwPosition)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#SetLength(System.Int64)">
            <summary>Sets the stub of IMFByteStream.SetLength(Int64 qwLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFByteStream.na::NAudio#MediaFoundation#IMFByteStream#Write(System.IntPtr,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFByteStream.Write(IntPtr pb, Int32 cb, Int32&amp; pcbWritten)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.ReadIntPtrInt32Int32Ref">
            <summary>Sets the stub of IMFByteStream.Read(IntPtr pb, Int32 cb, Int32&amp; pcbRead)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.SeekInt32Int64Int32Int64Ref">
            <summary>Sets the stub of IMFByteStream.Seek(Int32 SeekOrigin, Int64 llSeekOffset, Int32 dwSeekFlags, Int64&amp; pqwCurrentPosition)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.SetCurrentPositionInt64">
            <summary>Sets the stub of IMFByteStream.SetCurrentPosition(Int64 qwPosition)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.SetLengthInt64">
            <summary>Sets the stub of IMFByteStream.SetLength(Int64 qwLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFByteStream.WriteIntPtrInt32Int32Ref">
            <summary>Sets the stub of IMFByteStream.Write(IntPtr pb, Int32 cb, Int32&amp; pcbWritten)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFCollection">
            <summary>Stub type of NAudio.MediaFoundation.IMFCollection</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.#ctor">
            <summary>Initializes a new instance of type StubIMFCollection</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFCollection.AddElementObject">
            <summary>Sets the stub of IMFCollection.AddElement(Object pUnkElement)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFCollection.GetElementCountInt32Out">
            <summary>Sets the stub of IMFCollection.GetElementCount(Int32&amp; pcElements)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFCollection.GetElementInt32ObjectOut">
            <summary>Sets the stub of IMFCollection.GetElement(Int32 dwElementIndex, Object&amp; ppUnkElement)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFCollection.InsertElementAtInt32Object">
            <summary>Sets the stub of IMFCollection.InsertElementAt(Int32 dwIndex, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.na::NAudio#MediaFoundation#IMFCollection#AddElement(System.Object)">
            <summary>Sets the stub of IMFCollection.AddElement(Object pUnkElement)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.na::NAudio#MediaFoundation#IMFCollection#GetElement(System.Int32,System.Object@)">
            <summary>Sets the stub of IMFCollection.GetElement(Int32 dwElementIndex, Object&amp; ppUnkElement)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.na::NAudio#MediaFoundation#IMFCollection#GetElementCount(System.Int32@)">
            <summary>Sets the stub of IMFCollection.GetElementCount(Int32&amp; pcElements)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.na::NAudio#MediaFoundation#IMFCollection#InsertElementAt(System.Int32,System.Object)">
            <summary>Sets the stub of IMFCollection.InsertElementAt(Int32 dwIndex, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.na::NAudio#MediaFoundation#IMFCollection#RemoveAllElements">
            <summary>Sets the stub of IMFCollection.RemoveAllElements()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFCollection.na::NAudio#MediaFoundation#IMFCollection#RemoveElement(System.Int32,System.Object@)">
            <summary>Sets the stub of IMFCollection.RemoveElement(Int32 dwElementIndex, Object&amp; ppUnkElement)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFCollection.RemoveAllElements">
            <summary>Sets the stub of IMFCollection.RemoveAllElements()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFCollection.RemoveElementInt32ObjectOut">
            <summary>Sets the stub of IMFCollection.RemoveElement(Int32 dwElementIndex, Object&amp; ppUnkElement)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer">
            <summary>Stub type of NAudio.MediaFoundation.IMFMediaBuffer</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.#ctor">
            <summary>Initializes a new instance of type StubIMFMediaBuffer</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.GetCurrentLengthInt32Out">
            <summary>Sets the stub of IMFMediaBuffer.GetCurrentLength(Int32&amp; pcbCurrentLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.GetMaxLengthInt32Out">
            <summary>Sets the stub of IMFMediaBuffer.GetMaxLength(Int32&amp; pcbMaxLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.LockIntPtrOutInt32OutInt32Out">
            <summary>Sets the stub of IMFMediaBuffer.Lock(IntPtr&amp; ppbBuffer, Int32&amp; pcbMaxLength, Int32&amp; pcbCurrentLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.na::NAudio#MediaFoundation#IMFMediaBuffer#GetCurrentLength(System.Int32@)">
            <summary>Sets the stub of IMFMediaBuffer.GetCurrentLength(Int32&amp; pcbCurrentLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.na::NAudio#MediaFoundation#IMFMediaBuffer#GetMaxLength(System.Int32@)">
            <summary>Sets the stub of IMFMediaBuffer.GetMaxLength(Int32&amp; pcbMaxLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.na::NAudio#MediaFoundation#IMFMediaBuffer#Lock(System.IntPtr@,System.Int32@,System.Int32@)">
            <summary>Sets the stub of IMFMediaBuffer.Lock(IntPtr&amp; ppbBuffer, Int32&amp; pcbMaxLength, Int32&amp; pcbCurrentLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.na::NAudio#MediaFoundation#IMFMediaBuffer#SetCurrentLength(System.Int32)">
            <summary>Sets the stub of IMFMediaBuffer.SetCurrentLength(Int32 cbCurrentLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.na::NAudio#MediaFoundation#IMFMediaBuffer#Unlock">
            <summary>Sets the stub of IMFMediaBuffer.Unlock()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.SetCurrentLengthInt32">
            <summary>Sets the stub of IMFMediaBuffer.SetCurrentLength(Int32 cbCurrentLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaBuffer.Unlock">
            <summary>Sets the stub of IMFMediaBuffer.Unlock()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent">
            <summary>Stub type of NAudio.MediaFoundation.IMFMediaEvent</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.#ctor">
            <summary>Initializes a new instance of type StubIMFMediaEvent</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.CompareIMFAttributesInt32BooleanOut">
            <summary>Sets the stub of IMFMediaEvent.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.CompareIMFAttributesInt32BooleanOut01">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.CompareItemGuidIntPtrBooleanOut">
            <summary>Sets the stub of IMFMediaEvent.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.CompareItemGuidIntPtrBooleanOut01">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.CopyAllItemsIMFAttributes">
            <summary>Sets the stub of IMFMediaEvent.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.CopyAllItemsIMFAttributes01">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.DeleteAllItems">
            <summary>Sets the stub of IMFMediaEvent.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.DeleteAllItems01">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.DeleteItemGuid">
            <summary>Sets the stub of IMFMediaEvent.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.DeleteItemGuid01">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetAllocatedBlobGuidIntPtrOutInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetAllocatedBlobGuidIntPtrOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetAllocatedStringGuidStringOutInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetAllocatedStringGuidStringOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetBlobGuidByteArrayInt32Int32Out">
            <summary>Sets the stub of IMFMediaEvent.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetBlobGuidByteArrayInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetBlobSizeGuidInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetBlobSizeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetCountInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetCountInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetDoubleGuidDoubleOut">
            <summary>Sets the stub of IMFMediaEvent.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetDoubleGuidDoubleOut01">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetExtendedTypeGuidOut">
            <summary>Sets the stub of IMFMediaEvent.GetExtendedType(Guid&amp; pguidExtendedType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetGUIDGuidGuidOut">
            <summary>Sets the stub of IMFMediaEvent.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetGUIDGuidGuidOut01">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetItemByIndexInt32GuidOutPropVariantRef">
            <summary>Sets the stub of IMFMediaEvent.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetItemByIndexInt32GuidOutPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetItemGuidPropVariantRef">
            <summary>Sets the stub of IMFMediaEvent.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetItemGuidPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetItemTypeGuidInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetItemTypeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetStatusInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetStatus(Int32&amp; phrStatus)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetStringGuidStringBuilderInt32Int32Out">
            <summary>Sets the stub of IMFMediaEvent.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetStringGuidStringBuilderInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetStringLengthGuidInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetStringLengthGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetTypeMediaEventTypeOut">
            <summary>Sets the stub of IMFMediaEvent.GetType(MediaEventType&amp; pmet)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetUINT32GuidInt32Out">
            <summary>Sets the stub of IMFMediaEvent.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetUINT32GuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetUINT64GuidInt64Out">
            <summary>Sets the stub of IMFMediaEvent.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetUINT64GuidInt64Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetUnknownGuidGuidObjectOut">
            <summary>Sets the stub of IMFMediaEvent.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetUnknownGuidGuidObjectOut01">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.GetValuePropVariantOut">
            <summary>Sets the stub of IMFMediaEvent.GetValue(PropVariant&amp; pvValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.LockStore">
            <summary>Sets the stub of IMFMediaEvent.LockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.LockStore01">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#DeleteAllItems">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#LockStore">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFAttributes#UnlockStore">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFMediaEvent.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFMediaEvent.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFMediaEvent.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#DeleteAllItems">
            <summary>Sets the stub of IMFMediaEvent.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFMediaEvent.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFMediaEvent.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetExtendedType(System.Guid@)">
            <summary>Sets the stub of IMFMediaEvent.GetExtendedType(Guid&amp; pguidExtendedType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFMediaEvent.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFMediaEvent.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFMediaEvent.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetStatus(System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetStatus(Int32&amp; phrStatus)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetType(NAudio.MediaFoundation.MediaEventType@)">
            <summary>Sets the stub of IMFMediaEvent.GetType(MediaEventType&amp; pmet)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaEvent.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFMediaEvent.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFMediaEvent.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#GetValue(NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFMediaEvent.GetValue(PropVariant&amp; pvValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#LockStore">
            <summary>Sets the stub of IMFMediaEvent.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFMediaEvent.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFMediaEvent.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFMediaEvent.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFMediaEvent.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFMediaEvent.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFMediaEvent.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFMediaEvent.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFMediaEvent.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.na::NAudio#MediaFoundation#IMFMediaEvent#UnlockStore">
            <summary>Sets the stub of IMFMediaEvent.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetBlobGuidByteArrayInt32">
            <summary>Sets the stub of IMFMediaEvent.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetBlobGuidByteArrayInt3201">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetDoubleGuidDouble">
            <summary>Sets the stub of IMFMediaEvent.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetDoubleGuidDouble01">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetGUIDGuidGuid">
            <summary>Sets the stub of IMFMediaEvent.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetGUIDGuidGuid01">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetItemGuidIntPtr">
            <summary>Sets the stub of IMFMediaEvent.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetItemGuidIntPtr01">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetStringGuidString">
            <summary>Sets the stub of IMFMediaEvent.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetStringGuidString01">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetUINT32GuidInt32">
            <summary>Sets the stub of IMFMediaEvent.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetUINT32GuidInt3201">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetUINT64GuidInt64">
            <summary>Sets the stub of IMFMediaEvent.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetUINT64GuidInt6401">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetUnknownGuidObject">
            <summary>Sets the stub of IMFMediaEvent.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.SetUnknownGuidObject01">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.UnlockStore">
            <summary>Sets the stub of IMFMediaEvent.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaEvent.UnlockStore01">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFMediaType">
            <summary>Stub type of NAudio.MediaFoundation.IMFMediaType</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.#ctor">
            <summary>Initializes a new instance of type StubIMFMediaType</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.CompareIMFAttributesInt32BooleanOut">
            <summary>Sets the stub of IMFMediaType.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.CompareIMFAttributesInt32BooleanOut01">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.CompareItemGuidIntPtrBooleanOut">
            <summary>Sets the stub of IMFMediaType.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.CompareItemGuidIntPtrBooleanOut01">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.CopyAllItemsIMFAttributes">
            <summary>Sets the stub of IMFMediaType.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.CopyAllItemsIMFAttributes01">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.DeleteAllItems">
            <summary>Sets the stub of IMFMediaType.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.DeleteAllItems01">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.DeleteItemGuid">
            <summary>Sets the stub of IMFMediaType.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.DeleteItemGuid01">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.FreeRepresentationGuidIntPtr">
            <summary>Sets the stub of IMFMediaType.FreeRepresentation(Guid guidRepresentation, IntPtr pvRepresentation)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetAllocatedBlobGuidIntPtrOutInt32Out">
            <summary>Sets the stub of IMFMediaType.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetAllocatedBlobGuidIntPtrOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetAllocatedStringGuidStringOutInt32Out">
            <summary>Sets the stub of IMFMediaType.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetAllocatedStringGuidStringOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetBlobGuidByteArrayInt32Int32Out">
            <summary>Sets the stub of IMFMediaType.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetBlobGuidByteArrayInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetBlobSizeGuidInt32Out">
            <summary>Sets the stub of IMFMediaType.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetBlobSizeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetCountInt32Out">
            <summary>Sets the stub of IMFMediaType.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetCountInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetDoubleGuidDoubleOut">
            <summary>Sets the stub of IMFMediaType.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetDoubleGuidDoubleOut01">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetGUIDGuidGuidOut">
            <summary>Sets the stub of IMFMediaType.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetGUIDGuidGuidOut01">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetItemByIndexInt32GuidOutPropVariantRef">
            <summary>Sets the stub of IMFMediaType.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetItemByIndexInt32GuidOutPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetItemGuidPropVariantRef">
            <summary>Sets the stub of IMFMediaType.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetItemGuidPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetItemTypeGuidInt32Out">
            <summary>Sets the stub of IMFMediaType.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetItemTypeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetMajorTypeGuidOut">
            <summary>Sets the stub of IMFMediaType.GetMajorType(Guid&amp; pguidMajorType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetRepresentationGuidIntPtrRef">
            <summary>Sets the stub of IMFMediaType.GetRepresentation(Guid guidRepresentation, IntPtr&amp; ppvRepresentation)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetStringGuidStringBuilderInt32Int32Out">
            <summary>Sets the stub of IMFMediaType.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetStringGuidStringBuilderInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetStringLengthGuidInt32Out">
            <summary>Sets the stub of IMFMediaType.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetStringLengthGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetUINT32GuidInt32Out">
            <summary>Sets the stub of IMFMediaType.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetUINT32GuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetUINT64GuidInt64Out">
            <summary>Sets the stub of IMFMediaType.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetUINT64GuidInt64Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetUnknownGuidGuidObjectOut">
            <summary>Sets the stub of IMFMediaType.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.GetUnknownGuidGuidObjectOut01">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.IsCompressedFormatBooleanOut">
            <summary>Sets the stub of IMFMediaType.IsCompressedFormat(Boolean&amp; pfCompressed)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.IsEqualIMFMediaTypeInt32Ref">
            <summary>Sets the stub of IMFMediaType.IsEqual(IMFMediaType pIMediaType, Int32&amp; pdwFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.LockStore">
            <summary>Sets the stub of IMFMediaType.LockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.LockStore01">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#DeleteAllItems">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#LockStore">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFAttributes#UnlockStore">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFMediaType.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFMediaType.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFMediaType.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#DeleteAllItems">
            <summary>Sets the stub of IMFMediaType.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFMediaType.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#FreeRepresentation(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFMediaType.FreeRepresentation(Guid guidRepresentation, IntPtr pvRepresentation)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFMediaType.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFMediaType.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFMediaType.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFMediaType.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetMajorType(System.Guid@)">
            <summary>Sets the stub of IMFMediaType.GetMajorType(Guid&amp; pguidMajorType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetRepresentation(System.Guid,System.IntPtr@)">
            <summary>Sets the stub of IMFMediaType.GetRepresentation(Guid guidRepresentation, IntPtr&amp; ppvRepresentation)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFMediaType.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFMediaType.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#IsCompressedFormat(System.Boolean@)">
            <summary>Sets the stub of IMFMediaType.IsCompressedFormat(Boolean&amp; pfCompressed)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#IsEqual(NAudio.MediaFoundation.IMFMediaType,System.Int32@)">
            <summary>Sets the stub of IMFMediaType.IsEqual(IMFMediaType pIMediaType, Int32&amp; pdwFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#LockStore">
            <summary>Sets the stub of IMFMediaType.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFMediaType.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFMediaType.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFMediaType.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFMediaType.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFMediaType.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFMediaType.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFMediaType.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFMediaType.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFMediaType.na::NAudio#MediaFoundation#IMFMediaType#UnlockStore">
            <summary>Sets the stub of IMFMediaType.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetBlobGuidByteArrayInt32">
            <summary>Sets the stub of IMFMediaType.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetBlobGuidByteArrayInt3201">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetDoubleGuidDouble">
            <summary>Sets the stub of IMFMediaType.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetDoubleGuidDouble01">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetGUIDGuidGuid">
            <summary>Sets the stub of IMFMediaType.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetGUIDGuidGuid01">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetItemGuidIntPtr">
            <summary>Sets the stub of IMFMediaType.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetItemGuidIntPtr01">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetStringGuidString">
            <summary>Sets the stub of IMFMediaType.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetStringGuidString01">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetUINT32GuidInt32">
            <summary>Sets the stub of IMFMediaType.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetUINT32GuidInt3201">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetUINT64GuidInt64">
            <summary>Sets the stub of IMFMediaType.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetUINT64GuidInt6401">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetUnknownGuidObject">
            <summary>Sets the stub of IMFMediaType.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.SetUnknownGuidObject01">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.UnlockStore">
            <summary>Sets the stub of IMFMediaType.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFMediaType.UnlockStore01">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFReadWriteClassFactory">
            <summary>Stub type of NAudio.MediaFoundation.IMFReadWriteClassFactory</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFReadWriteClassFactory.#ctor">
            <summary>Initializes a new instance of type StubIMFReadWriteClassFactory</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFReadWriteClassFactory.CreateInstanceFromObjectGuidObjectIMFAttributesGuidObjectOut">
            <summary>Sets the stub of IMFReadWriteClassFactory.CreateInstanceFromObject(Guid clsid, Object punkObject, IMFAttributes pAttributes, Guid riid, Object&amp; ppvObject)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFReadWriteClassFactory.CreateInstanceFromURLGuidStringIMFAttributesGuidObjectOut">
            <summary>Sets the stub of IMFReadWriteClassFactory.CreateInstanceFromURL(Guid clsid, String pwszURL, IMFAttributes pAttributes, Guid riid, Object&amp; ppvObject)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFReadWriteClassFactory.na::NAudio#MediaFoundation#IMFReadWriteClassFactory#CreateInstanceFromObject(System.Guid,System.Object,NAudio.MediaFoundation.IMFAttributes,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFReadWriteClassFactory.CreateInstanceFromObject(Guid clsid, Object punkObject, IMFAttributes pAttributes, Guid riid, Object&amp; ppvObject)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFReadWriteClassFactory.na::NAudio#MediaFoundation#IMFReadWriteClassFactory#CreateInstanceFromURL(System.Guid,System.String,NAudio.MediaFoundation.IMFAttributes,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFReadWriteClassFactory.CreateInstanceFromURL(Guid clsid, String pwszURL, IMFAttributes pAttributes, Guid riid, Object&amp; ppvObject)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFSample">
            <summary>Stub type of NAudio.MediaFoundation.IMFSample</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.#ctor">
            <summary>Initializes a new instance of type StubIMFSample</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.AddBufferIMFMediaBuffer">
            <summary>Sets the stub of IMFSample.AddBuffer(IMFMediaBuffer pBuffer)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CompareIMFAttributesInt32BooleanOut">
            <summary>Sets the stub of IMFSample.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CompareIMFAttributesInt32BooleanOut01">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CompareItemGuidIntPtrBooleanOut">
            <summary>Sets the stub of IMFSample.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CompareItemGuidIntPtrBooleanOut01">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.ConvertToContiguousBufferIMFMediaBufferOut">
            <summary>Sets the stub of IMFSample.ConvertToContiguousBuffer(IMFMediaBuffer&amp; ppBuffer)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CopyAllItemsIMFAttributes">
            <summary>Sets the stub of IMFSample.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CopyAllItemsIMFAttributes01">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.CopyToBufferIMFMediaBuffer">
            <summary>Sets the stub of IMFSample.CopyToBuffer(IMFMediaBuffer pBuffer)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.DeleteAllItems">
            <summary>Sets the stub of IMFSample.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.DeleteAllItems01">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.DeleteItemGuid">
            <summary>Sets the stub of IMFSample.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.DeleteItemGuid01">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetAllocatedBlobGuidIntPtrOutInt32Out">
            <summary>Sets the stub of IMFSample.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetAllocatedBlobGuidIntPtrOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetAllocatedStringGuidStringOutInt32Out">
            <summary>Sets the stub of IMFSample.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetAllocatedStringGuidStringOutInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetBlobGuidByteArrayInt32Int32Out">
            <summary>Sets the stub of IMFSample.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetBlobGuidByteArrayInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetBlobSizeGuidInt32Out">
            <summary>Sets the stub of IMFSample.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetBlobSizeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetBufferByIndexInt32IMFMediaBufferOut">
            <summary>Sets the stub of IMFSample.GetBufferByIndex(Int32 dwIndex, IMFMediaBuffer&amp; ppBuffer)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetBufferCountInt32Out">
            <summary>Sets the stub of IMFSample.GetBufferCount(Int32&amp; pdwBufferCount)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetCountInt32Out">
            <summary>Sets the stub of IMFSample.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetCountInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetDoubleGuidDoubleOut">
            <summary>Sets the stub of IMFSample.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetDoubleGuidDoubleOut01">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetGUIDGuidGuidOut">
            <summary>Sets the stub of IMFSample.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetGUIDGuidGuidOut01">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetItemByIndexInt32GuidOutPropVariantRef">
            <summary>Sets the stub of IMFSample.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetItemByIndexInt32GuidOutPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetItemGuidPropVariantRef">
            <summary>Sets the stub of IMFSample.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetItemGuidPropVariantRef01">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetItemTypeGuidInt32Out">
            <summary>Sets the stub of IMFSample.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetItemTypeGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetSampleDurationInt64Out">
            <summary>Sets the stub of IMFSample.GetSampleDuration(Int64&amp; phnsSampleDuration)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetSampleFlagsInt32Out">
            <summary>Sets the stub of IMFSample.GetSampleFlags(Int32&amp; pdwSampleFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetSampleTimeInt64Out">
            <summary>Sets the stub of IMFSample.GetSampleTime(Int64&amp; phnsSampletime)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetStringGuidStringBuilderInt32Int32Out">
            <summary>Sets the stub of IMFSample.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetStringGuidStringBuilderInt32Int32Out01">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetStringLengthGuidInt32Out">
            <summary>Sets the stub of IMFSample.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetStringLengthGuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetTotalLengthInt32Out">
            <summary>Sets the stub of IMFSample.GetTotalLength(Int32&amp; pcbTotalLength)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetUINT32GuidInt32Out">
            <summary>Sets the stub of IMFSample.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetUINT32GuidInt32Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetUINT64GuidInt64Out">
            <summary>Sets the stub of IMFSample.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetUINT64GuidInt64Out01">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetUnknownGuidGuidObjectOut">
            <summary>Sets the stub of IMFSample.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.GetUnknownGuidGuidObjectOut01">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.LockStore">
            <summary>Sets the stub of IMFSample.LockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.LockStore01">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFAttributes.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFAttributes.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#DeleteAllItems">
            <summary>Sets the stub of IMFAttributes.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFAttributes.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFAttributes.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFAttributes.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFAttributes.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFAttributes.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFAttributes.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFAttributes.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#LockStore">
            <summary>Sets the stub of IMFAttributes.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFAttributes#UnlockStore">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#AddBuffer(NAudio.MediaFoundation.IMFMediaBuffer)">
            <summary>Sets the stub of IMFSample.AddBuffer(IMFMediaBuffer pBuffer)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#Compare(NAudio.MediaFoundation.IMFAttributes,System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFSample.Compare(IMFAttributes pTheirs, Int32 MatchType, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#CompareItem(System.Guid,System.IntPtr,System.Boolean@)">
            <summary>Sets the stub of IMFSample.CompareItem(Guid guidKey, IntPtr Value, Boolean&amp; pbResult)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#ConvertToContiguousBuffer(NAudio.MediaFoundation.IMFMediaBuffer@)">
            <summary>Sets the stub of IMFSample.ConvertToContiguousBuffer(IMFMediaBuffer&amp; ppBuffer)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#CopyAllItems(NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFSample.CopyAllItems(IMFAttributes pDest)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#CopyToBuffer(NAudio.MediaFoundation.IMFMediaBuffer)">
            <summary>Sets the stub of IMFSample.CopyToBuffer(IMFMediaBuffer pBuffer)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#DeleteAllItems">
            <summary>Sets the stub of IMFSample.DeleteAllItems()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#DeleteItem(System.Guid)">
            <summary>Sets the stub of IMFSample.DeleteItem(Guid guidKey)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetAllocatedBlob(System.Guid,System.IntPtr@,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetAllocatedBlob(Guid guidKey, IntPtr&amp; ip, Int32&amp; pcbSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetAllocatedString(System.Guid,System.String@,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetAllocatedString(Guid guidKey, String&amp; ppwszValue, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetBlob(System.Guid,System.Byte[],System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetBlobSize(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetBlobSize(Guid guidKey, Int32&amp; pcbBlobSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetBufferByIndex(System.Int32,NAudio.MediaFoundation.IMFMediaBuffer@)">
            <summary>Sets the stub of IMFSample.GetBufferByIndex(Int32 dwIndex, IMFMediaBuffer&amp; ppBuffer)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetBufferCount(System.Int32@)">
            <summary>Sets the stub of IMFSample.GetBufferCount(Int32&amp; pdwBufferCount)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetCount(System.Int32@)">
            <summary>Sets the stub of IMFSample.GetCount(Int32&amp; pcItems)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetDouble(System.Guid,System.Double@)">
            <summary>Sets the stub of IMFSample.GetDouble(Guid guidKey, Double&amp; pfValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetGUID(System.Guid,System.Guid@)">
            <summary>Sets the stub of IMFSample.GetGUID(Guid guidKey, Guid&amp; pguidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetItem(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFSample.GetItem(Guid guidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetItemByIndex(System.Int32,System.Guid@,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFSample.GetItemByIndex(Int32 unIndex, Guid&amp; pGuidKey, PropVariant&amp; pValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetItemType(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetItemType(Guid guidKey, Int32&amp; pType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetSampleDuration(System.Int64@)">
            <summary>Sets the stub of IMFSample.GetSampleDuration(Int64&amp; phnsSampleDuration)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetSampleFlags(System.Int32@)">
            <summary>Sets the stub of IMFSample.GetSampleFlags(Int32&amp; pdwSampleFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetSampleTime(System.Int64@)">
            <summary>Sets the stub of IMFSample.GetSampleTime(Int64&amp; phnsSampletime)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetString(System.Guid,System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetString(Guid guidKey, StringBuilder pwszValue, Int32 cchBufSize, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetStringLength(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetStringLength(Guid guidKey, Int32&amp; pcchLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetTotalLength(System.Int32@)">
            <summary>Sets the stub of IMFSample.GetTotalLength(Int32&amp; pcbTotalLength)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetUINT32(System.Guid,System.Int32@)">
            <summary>Sets the stub of IMFSample.GetUINT32(Guid guidKey, Int32&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetUINT64(System.Guid,System.Int64@)">
            <summary>Sets the stub of IMFSample.GetUINT64(Guid guidKey, Int64&amp; punValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#GetUnknown(System.Guid,System.Guid,System.Object@)">
            <summary>Sets the stub of IMFSample.GetUnknown(Guid guidKey, Guid riid, Object&amp; ppv)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#LockStore">
            <summary>Sets the stub of IMFSample.LockStore()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#RemoveAllBuffers">
            <summary>Sets the stub of IMFSample.RemoveAllBuffers()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#RemoveBufferByIndex(System.Int32)">
            <summary>Sets the stub of IMFSample.RemoveBufferByIndex(Int32 dwIndex)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetBlob(System.Guid,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMFSample.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetDouble(System.Guid,System.Double)">
            <summary>Sets the stub of IMFSample.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetGUID(System.Guid,System.Guid)">
            <summary>Sets the stub of IMFSample.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetItem(System.Guid,System.IntPtr)">
            <summary>Sets the stub of IMFSample.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetSampleDuration(System.Int64)">
            <summary>Sets the stub of IMFSample.SetSampleDuration(Int64 hnsSampleDuration)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetSampleFlags(System.Int32)">
            <summary>Sets the stub of IMFSample.SetSampleFlags(Int32 dwSampleFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetSampleTime(System.Int64)">
            <summary>Sets the stub of IMFSample.SetSampleTime(Int64 hnsSampleTime)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetString(System.Guid,System.String)">
            <summary>Sets the stub of IMFSample.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetUINT32(System.Guid,System.Int32)">
            <summary>Sets the stub of IMFSample.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetUINT64(System.Guid,System.Int64)">
            <summary>Sets the stub of IMFSample.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#SetUnknown(System.Guid,System.Object)">
            <summary>Sets the stub of IMFSample.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSample.na::NAudio#MediaFoundation#IMFSample#UnlockStore">
            <summary>Sets the stub of IMFSample.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.RemoveAllBuffers">
            <summary>Sets the stub of IMFSample.RemoveAllBuffers()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.RemoveBufferByIndexInt32">
            <summary>Sets the stub of IMFSample.RemoveBufferByIndex(Int32 dwIndex)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetBlobGuidByteArrayInt32">
            <summary>Sets the stub of IMFSample.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetBlobGuidByteArrayInt3201">
            <summary>Sets the stub of IMFAttributes.SetBlob(Guid guidKey, Byte[] pBuf, Int32 cbBufSize)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetDoubleGuidDouble">
            <summary>Sets the stub of IMFSample.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetDoubleGuidDouble01">
            <summary>Sets the stub of IMFAttributes.SetDouble(Guid guidKey, Double fValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetGUIDGuidGuid">
            <summary>Sets the stub of IMFSample.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetGUIDGuidGuid01">
            <summary>Sets the stub of IMFAttributes.SetGUID(Guid guidKey, Guid guidValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetItemGuidIntPtr">
            <summary>Sets the stub of IMFSample.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetItemGuidIntPtr01">
            <summary>Sets the stub of IMFAttributes.SetItem(Guid guidKey, IntPtr Value)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetSampleDurationInt64">
            <summary>Sets the stub of IMFSample.SetSampleDuration(Int64 hnsSampleDuration)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetSampleFlagsInt32">
            <summary>Sets the stub of IMFSample.SetSampleFlags(Int32 dwSampleFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetSampleTimeInt64">
            <summary>Sets the stub of IMFSample.SetSampleTime(Int64 hnsSampleTime)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetStringGuidString">
            <summary>Sets the stub of IMFSample.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetStringGuidString01">
            <summary>Sets the stub of IMFAttributes.SetString(Guid guidKey, String wszValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetUINT32GuidInt32">
            <summary>Sets the stub of IMFSample.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetUINT32GuidInt3201">
            <summary>Sets the stub of IMFAttributes.SetUINT32(Guid guidKey, Int32 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetUINT64GuidInt64">
            <summary>Sets the stub of IMFSample.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetUINT64GuidInt6401">
            <summary>Sets the stub of IMFAttributes.SetUINT64(Guid guidKey, Int64 unValue)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetUnknownGuidObject">
            <summary>Sets the stub of IMFSample.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.SetUnknownGuidObject01">
            <summary>Sets the stub of IMFAttributes.SetUnknown(Guid guidKey, Object pUnknown)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.UnlockStore">
            <summary>Sets the stub of IMFSample.UnlockStore()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSample.UnlockStore01">
            <summary>Sets the stub of IMFAttributes.UnlockStore()</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter">
            <summary>Stub type of NAudio.MediaFoundation.IMFSinkWriter</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.#ctor">
            <summary>Initializes a new instance of type StubIMFSinkWriter</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.AddStreamIMFMediaTypeInt32Out">
            <summary>Sets the stub of IMFSinkWriter.AddStream(IMFMediaType pTargetMediaType, Int32&amp; pdwStreamIndex)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.BeginWriting">
            <summary>Sets the stub of IMFSinkWriter.BeginWriting()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.DoFinalize">
            <summary>Sets the stub of IMFSinkWriter.DoFinalize()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.FlushInt32">
            <summary>Sets the stub of IMFSinkWriter.Flush(Int32 dwStreamIndex)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.GetServiceForStreamInt32GuidRefGuidRefIntPtrOut">
            <summary>Sets the stub of IMFSinkWriter.GetServiceForStream(Int32 dwStreamIndex, Guid&amp; guidService, Guid&amp; riid, IntPtr&amp; ppvObject)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.GetStatisticsInt32MF_SINK_WRITER_STATISTICS">
            <summary>Sets the stub of IMFSinkWriter.GetStatistics(Int32 dwStreamIndex, MF_SINK_WRITER_STATISTICS pStats)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#AddStream(NAudio.MediaFoundation.IMFMediaType,System.Int32@)">
            <summary>Sets the stub of IMFSinkWriter.AddStream(IMFMediaType pTargetMediaType, Int32&amp; pdwStreamIndex)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#BeginWriting">
            <summary>Sets the stub of IMFSinkWriter.BeginWriting()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#DoFinalize">
            <summary>Sets the stub of IMFSinkWriter.DoFinalize()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#Flush(System.Int32)">
            <summary>Sets the stub of IMFSinkWriter.Flush(Int32 dwStreamIndex)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#GetServiceForStream(System.Int32,System.Guid@,System.Guid@,System.IntPtr@)">
            <summary>Sets the stub of IMFSinkWriter.GetServiceForStream(Int32 dwStreamIndex, Guid&amp; guidService, Guid&amp; riid, IntPtr&amp; ppvObject)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#GetStatistics(System.Int32,NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS)">
            <summary>Sets the stub of IMFSinkWriter.GetStatistics(Int32 dwStreamIndex, MF_SINK_WRITER_STATISTICS pStats)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#NotifyEndOfSegment(System.Int32)">
            <summary>Sets the stub of IMFSinkWriter.NotifyEndOfSegment(Int32 dwStreamIndex)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#PlaceMarker(System.Int32,System.IntPtr)">
            <summary>Sets the stub of IMFSinkWriter.PlaceMarker(Int32 dwStreamIndex, IntPtr pvContext)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#SendStreamTick(System.Int32,System.Int64)">
            <summary>Sets the stub of IMFSinkWriter.SendStreamTick(Int32 dwStreamIndex, Int64 llTimestamp)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#SetInputMediaType(System.Int32,NAudio.MediaFoundation.IMFMediaType,NAudio.MediaFoundation.IMFAttributes)">
            <summary>Sets the stub of IMFSinkWriter.SetInputMediaType(Int32 dwStreamIndex, IMFMediaType pInputMediaType, IMFAttributes pEncodingParameters)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.na::NAudio#MediaFoundation#IMFSinkWriter#WriteSample(System.Int32,NAudio.MediaFoundation.IMFSample)">
            <summary>Sets the stub of IMFSinkWriter.WriteSample(Int32 dwStreamIndex, IMFSample pSample)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.NotifyEndOfSegmentInt32">
            <summary>Sets the stub of IMFSinkWriter.NotifyEndOfSegment(Int32 dwStreamIndex)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.PlaceMarkerInt32IntPtr">
            <summary>Sets the stub of IMFSinkWriter.PlaceMarker(Int32 dwStreamIndex, IntPtr pvContext)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.SendStreamTickInt32Int64">
            <summary>Sets the stub of IMFSinkWriter.SendStreamTick(Int32 dwStreamIndex, Int64 llTimestamp)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.SetInputMediaTypeInt32IMFMediaTypeIMFAttributes">
            <summary>Sets the stub of IMFSinkWriter.SetInputMediaType(Int32 dwStreamIndex, IMFMediaType pInputMediaType, IMFAttributes pEncodingParameters)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSinkWriter.WriteSampleInt32IMFSample">
            <summary>Sets the stub of IMFSinkWriter.WriteSample(Int32 dwStreamIndex, IMFSample pSample)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFSourceReader">
            <summary>Stub type of NAudio.MediaFoundation.IMFSourceReader</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.#ctor">
            <summary>Initializes a new instance of type StubIMFSourceReader</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.FlushInt32">
            <summary>Sets the stub of IMFSourceReader.Flush(Int32 dwStreamIndex)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.GetCurrentMediaTypeInt32IMFMediaTypeOut">
            <summary>Sets the stub of IMFSourceReader.GetCurrentMediaType(Int32 dwStreamIndex, IMFMediaType&amp; ppMediaType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.GetNativeMediaTypeInt32Int32IMFMediaTypeOut">
            <summary>Sets the stub of IMFSourceReader.GetNativeMediaType(Int32 dwStreamIndex, Int32 dwMediaTypeIndex, IMFMediaType&amp; ppMediaType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.GetPresentationAttributeInt32GuidPropVariantOut">
            <summary>Sets the stub of IMFSourceReader.GetPresentationAttribute(Int32 dwStreamIndex, Guid guidAttribute, PropVariant&amp; pvarAttribute)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.GetServiceForStreamInt32GuidGuidIntPtrOut">
            <summary>Sets the stub of IMFSourceReader.GetServiceForStream(Int32 dwStreamIndex, Guid guidService, Guid riid, IntPtr&amp; ppvObject)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.GetStreamSelectionInt32BooleanOut">
            <summary>Sets the stub of IMFSourceReader.GetStreamSelection(Int32 dwStreamIndex, Boolean&amp; pSelected)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#Flush(System.Int32)">
            <summary>Sets the stub of IMFSourceReader.Flush(Int32 dwStreamIndex)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#GetCurrentMediaType(System.Int32,NAudio.MediaFoundation.IMFMediaType@)">
            <summary>Sets the stub of IMFSourceReader.GetCurrentMediaType(Int32 dwStreamIndex, IMFMediaType&amp; ppMediaType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#GetNativeMediaType(System.Int32,System.Int32,NAudio.MediaFoundation.IMFMediaType@)">
            <summary>Sets the stub of IMFSourceReader.GetNativeMediaType(Int32 dwStreamIndex, Int32 dwMediaTypeIndex, IMFMediaType&amp; ppMediaType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#GetPresentationAttribute(System.Int32,System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFSourceReader.GetPresentationAttribute(Int32 dwStreamIndex, Guid guidAttribute, PropVariant&amp; pvarAttribute)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#GetServiceForStream(System.Int32,System.Guid,System.Guid,System.IntPtr@)">
            <summary>Sets the stub of IMFSourceReader.GetServiceForStream(Int32 dwStreamIndex, Guid guidService, Guid riid, IntPtr&amp; ppvObject)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#GetStreamSelection(System.Int32,System.Boolean@)">
            <summary>Sets the stub of IMFSourceReader.GetStreamSelection(Int32 dwStreamIndex, Boolean&amp; pSelected)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#ReadSample(System.Int32,System.Int32,System.Int32@,System.Int32@,System.UInt64@,NAudio.MediaFoundation.IMFSample@)">
            <summary>Sets the stub of IMFSourceReader.ReadSample(Int32 dwStreamIndex, Int32 dwControlFlags, Int32&amp; pdwActualStreamIndex, Int32&amp; pdwStreamFlags, UInt64&amp; pllTimestamp, IMFSample&amp; ppSample)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#SetCurrentMediaType(System.Int32,System.IntPtr,NAudio.MediaFoundation.IMFMediaType)">
            <summary>Sets the stub of IMFSourceReader.SetCurrentMediaType(Int32 dwStreamIndex, IntPtr pdwReserved, IMFMediaType pMediaType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#SetCurrentPosition(System.Guid,NAudio.CoreAudioApi.Interfaces.PropVariant@)">
            <summary>Sets the stub of IMFSourceReader.SetCurrentPosition(Guid guidTimeFormat, PropVariant&amp; varPosition)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.na::NAudio#MediaFoundation#IMFSourceReader#SetStreamSelection(System.Int32,System.Boolean)">
            <summary>Sets the stub of IMFSourceReader.SetStreamSelection(Int32 dwStreamIndex, Boolean pSelected)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.ReadSampleInt32Int32Int32OutInt32OutUInt64OutIMFSampleOut">
            <summary>Sets the stub of IMFSourceReader.ReadSample(Int32 dwStreamIndex, Int32 dwControlFlags, Int32&amp; pdwActualStreamIndex, Int32&amp; pdwStreamFlags, UInt64&amp; pllTimestamp, IMFSample&amp; ppSample)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.SetCurrentMediaTypeInt32IntPtrIMFMediaType">
            <summary>Sets the stub of IMFSourceReader.SetCurrentMediaType(Int32 dwStreamIndex, IntPtr pdwReserved, IMFMediaType pMediaType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.SetCurrentPositionGuidPropVariantRef">
            <summary>Sets the stub of IMFSourceReader.SetCurrentPosition(Guid guidTimeFormat, PropVariant&amp; varPosition)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFSourceReader.SetStreamSelectionInt32Boolean">
            <summary>Sets the stub of IMFSourceReader.SetStreamSelection(Int32 dwStreamIndex, Boolean pSelected)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubIMFTransform">
            <summary>Stub type of NAudio.MediaFoundation.IMFTransform</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.#ctor">
            <summary>Initializes a new instance of type StubIMFTransform</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.AddInputStreamsInt32Int32Array">
            <summary>Sets the stub of IMFTransform.AddInputStreams(Int32 cStreams, Int32[] adwStreamIDs)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.DeleteInputStreamInt32">
            <summary>Sets the stub of IMFTransform.DeleteInputStream(Int32 dwOutputStreamID)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetAttributesIMFAttributesOut">
            <summary>Sets the stub of IMFTransform.GetAttributes(IMFAttributes&amp; pAttributes)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetInputAvailableTypeInt32Int32IMFMediaTypeOut">
            <summary>Sets the stub of IMFTransform.GetInputAvailableType(Int32 dwInputStreamID, Int32 dwTypeIndex, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetInputCurrentTypeInt32IMFMediaTypeOut">
            <summary>Sets the stub of IMFTransform.GetInputCurrentType(Int32 dwInputStreamID, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetInputStatusInt32_MFT_INPUT_STATUS_FLAGSOut">
            <summary>Sets the stub of IMFTransform.GetInputStatus(Int32 dwInputStreamID, _MFT_INPUT_STATUS_FLAGS&amp; pdwFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetInputStreamAttributesInt32IMFAttributesOut">
            <summary>Sets the stub of IMFTransform.GetInputStreamAttributes(Int32 dwInputStreamID, IMFAttributes&amp; pAttributes)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetInputStreamInfoInt32MFT_INPUT_STREAM_INFOOut">
            <summary>Sets the stub of IMFTransform.GetInputStreamInfo(Int32 dwInputStreamID, MFT_INPUT_STREAM_INFO&amp; pStreamInfo)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetOutputAvailableTypeInt32Int32IMFMediaTypeOut">
            <summary>Sets the stub of IMFTransform.GetOutputAvailableType(Int32 dwOutputStreamID, Int32 dwTypeIndex, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetOutputCurrentTypeInt32IMFMediaTypeOut">
            <summary>Sets the stub of IMFTransform.GetOutputCurrentType(Int32 dwOutputStreamID, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetOutputStatusInt32_MFT_OUTPUT_STATUS_FLAGSOut">
            <summary>Sets the stub of IMFTransform.GetOutputStatus(Int32 dwInputStreamID, _MFT_OUTPUT_STATUS_FLAGS&amp; pdwFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetOutputStreamAttributesInt32IMFAttributesOut">
            <summary>Sets the stub of IMFTransform.GetOutputStreamAttributes(Int32 dwOutputStreamID, IMFAttributes&amp; pAttributes)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetOutputStreamInfoInt32MFT_OUTPUT_STREAM_INFOOut">
            <summary>Sets the stub of IMFTransform.GetOutputStreamInfo(Int32 dwOutputStreamID, MFT_OUTPUT_STREAM_INFO&amp; pStreamInfo)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetStreamCountInt32OutInt32Out">
            <summary>Sets the stub of IMFTransform.GetStreamCount(Int32&amp; pcInputStreams, Int32&amp; pcOutputStreams)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetStreamIdsInt32Int32ArrayInt32Int32Array">
            <summary>Sets the stub of IMFTransform.GetStreamIds(Int32 dwInputIDArraySize, Int32[] pdwInputIDs, Int32 dwOutputIDArraySize, Int32[] pdwOutputIDs)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.GetStreamLimitsInt32OutInt32OutInt32OutInt32Out">
            <summary>Sets the stub of IMFTransform.GetStreamLimits(Int32&amp; pdwInputMinimum, Int32&amp; pdwInputMaximum, Int32&amp; pdwOutputMinimum, Int32&amp; pdwOutputMaximum)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#AddInputStreams(System.Int32,System.Int32[])">
            <summary>Sets the stub of IMFTransform.AddInputStreams(Int32 cStreams, Int32[] adwStreamIDs)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#DeleteInputStream(System.Int32)">
            <summary>Sets the stub of IMFTransform.DeleteInputStream(Int32 dwOutputStreamID)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetAttributes(NAudio.MediaFoundation.IMFAttributes@)">
            <summary>Sets the stub of IMFTransform.GetAttributes(IMFAttributes&amp; pAttributes)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetInputAvailableType(System.Int32,System.Int32,NAudio.MediaFoundation.IMFMediaType@)">
            <summary>Sets the stub of IMFTransform.GetInputAvailableType(Int32 dwInputStreamID, Int32 dwTypeIndex, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetInputCurrentType(System.Int32,NAudio.MediaFoundation.IMFMediaType@)">
            <summary>Sets the stub of IMFTransform.GetInputCurrentType(Int32 dwInputStreamID, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetInputStatus(System.Int32,NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS@)">
            <summary>Sets the stub of IMFTransform.GetInputStatus(Int32 dwInputStreamID, _MFT_INPUT_STATUS_FLAGS&amp; pdwFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetInputStreamAttributes(System.Int32,NAudio.MediaFoundation.IMFAttributes@)">
            <summary>Sets the stub of IMFTransform.GetInputStreamAttributes(Int32 dwInputStreamID, IMFAttributes&amp; pAttributes)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetInputStreamInfo(System.Int32,NAudio.MediaFoundation.MFT_INPUT_STREAM_INFO@)">
            <summary>Sets the stub of IMFTransform.GetInputStreamInfo(Int32 dwInputStreamID, MFT_INPUT_STREAM_INFO&amp; pStreamInfo)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetOutputAvailableType(System.Int32,System.Int32,NAudio.MediaFoundation.IMFMediaType@)">
            <summary>Sets the stub of IMFTransform.GetOutputAvailableType(Int32 dwOutputStreamID, Int32 dwTypeIndex, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetOutputCurrentType(System.Int32,NAudio.MediaFoundation.IMFMediaType@)">
            <summary>Sets the stub of IMFTransform.GetOutputCurrentType(Int32 dwOutputStreamID, IMFMediaType&amp; ppType)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetOutputStatus(System.Int32,NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS@)">
            <summary>Sets the stub of IMFTransform.GetOutputStatus(Int32 dwInputStreamID, _MFT_OUTPUT_STATUS_FLAGS&amp; pdwFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetOutputStreamAttributes(System.Int32,NAudio.MediaFoundation.IMFAttributes@)">
            <summary>Sets the stub of IMFTransform.GetOutputStreamAttributes(Int32 dwOutputStreamID, IMFAttributes&amp; pAttributes)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetOutputStreamInfo(System.Int32,NAudio.MediaFoundation.MFT_OUTPUT_STREAM_INFO@)">
            <summary>Sets the stub of IMFTransform.GetOutputStreamInfo(Int32 dwOutputStreamID, MFT_OUTPUT_STREAM_INFO&amp; pStreamInfo)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetStreamCount(System.Int32@,System.Int32@)">
            <summary>Sets the stub of IMFTransform.GetStreamCount(Int32&amp; pcInputStreams, Int32&amp; pcOutputStreams)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetStreamIds(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            <summary>Sets the stub of IMFTransform.GetStreamIds(Int32 dwInputIDArraySize, Int32[] pdwInputIDs, Int32 dwOutputIDArraySize, Int32[] pdwOutputIDs)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#GetStreamLimits(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Sets the stub of IMFTransform.GetStreamLimits(Int32&amp; pdwInputMinimum, Int32&amp; pdwInputMaximum, Int32&amp; pdwOutputMinimum, Int32&amp; pdwOutputMaximum)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#ProcessEvent(System.Int32,NAudio.MediaFoundation.IMFMediaEvent)">
            <summary>Sets the stub of IMFTransform.ProcessEvent(Int32 dwInputStreamID, IMFMediaEvent pEvent)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#ProcessInput(System.Int32,NAudio.MediaFoundation.IMFSample,System.Int32)">
            <summary>Sets the stub of IMFTransform.ProcessInput(Int32 dwInputStreamID, IMFSample pSample, Int32 dwFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#ProcessMessage(NAudio.MediaFoundation.MFT_MESSAGE_TYPE,System.IntPtr)">
            <summary>Sets the stub of IMFTransform.ProcessMessage(MFT_MESSAGE_TYPE eMessage, IntPtr ulParam)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#ProcessOutput(NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS,System.Int32,NAudio.MediaFoundation.MFT_OUTPUT_DATA_BUFFER[],NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS@)">
            <summary>Sets the stub of IMFTransform.ProcessOutput(_MFT_PROCESS_OUTPUT_FLAGS dwFlags, Int32 cOutputBufferCount, MFT_OUTPUT_DATA_BUFFER[] pOutputSamples, _MFT_PROCESS_OUTPUT_STATUS&amp; pdwStatus)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#SetInputType(System.Int32,NAudio.MediaFoundation.IMFMediaType,NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS)">
            <summary>Sets the stub of IMFTransform.SetInputType(Int32 dwInputStreamID, IMFMediaType pType, _MFT_SET_TYPE_FLAGS dwFlags)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#SetOutputBounds(System.Int64,System.Int64)">
            <summary>Sets the stub of IMFTransform.SetOutputBounds(Int64 hnsLowerBound, Int64 hnsUpperBound)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubIMFTransform.na::NAudio#MediaFoundation#IMFTransform#SetOutputType(System.Int32,NAudio.MediaFoundation.IMFMediaType,NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS)">
            <summary>Sets the stub of IMFTransform.SetOutputType(Int32 dwOutputStreamID, IMFMediaType pType, _MFT_SET_TYPE_FLAGS dwFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.ProcessEventInt32IMFMediaEvent">
            <summary>Sets the stub of IMFTransform.ProcessEvent(Int32 dwInputStreamID, IMFMediaEvent pEvent)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.ProcessInputInt32IMFSampleInt32">
            <summary>Sets the stub of IMFTransform.ProcessInput(Int32 dwInputStreamID, IMFSample pSample, Int32 dwFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.ProcessMessageMFT_MESSAGE_TYPEIntPtr">
            <summary>Sets the stub of IMFTransform.ProcessMessage(MFT_MESSAGE_TYPE eMessage, IntPtr ulParam)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.ProcessOutput_MFT_PROCESS_OUTPUT_FLAGSInt32MFT_OUTPUT_DATA_BUFFERArray_MFT_PROCESS_OUTPUT_STATUSOut">
            <summary>Sets the stub of IMFTransform.ProcessOutput(_MFT_PROCESS_OUTPUT_FLAGS dwFlags, Int32 cOutputBufferCount, MFT_OUTPUT_DATA_BUFFER[] pOutputSamples, _MFT_PROCESS_OUTPUT_STATUS&amp; pdwStatus)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.SetInputTypeInt32IMFMediaType_MFT_SET_TYPE_FLAGS">
            <summary>Sets the stub of IMFTransform.SetInputType(Int32 dwInputStreamID, IMFMediaType pType, _MFT_SET_TYPE_FLAGS dwFlags)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.SetOutputBoundsInt64Int64">
            <summary>Sets the stub of IMFTransform.SetOutputBounds(Int64 hnsLowerBound, Int64 hnsUpperBound)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubIMFTransform.SetOutputTypeInt32IMFMediaType_MFT_SET_TYPE_FLAGS">
            <summary>Sets the stub of IMFTransform.SetOutputType(Int32 dwOutputStreamID, IMFMediaType pType, _MFT_SET_TYPE_FLAGS dwFlags)</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubMFReadWriteClassFactory">
            <summary>Stub type of NAudio.MediaFoundation.MFReadWriteClassFactory</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMFReadWriteClassFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMFReadWriteClassFactory.InitializeStub">
            <summary>Initializes a new instance of type StubMFReadWriteClassFactory</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMFReadWriteClassFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMFReadWriteClassFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMFReadWriteClassFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubMFT_REGISTER_TYPE_INFO">
            <summary>Stub type of NAudio.MediaFoundation.MFT_REGISTER_TYPE_INFO</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMFT_REGISTER_TYPE_INFO.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMFT_REGISTER_TYPE_INFO.InitializeStub">
            <summary>Initializes a new instance of type StubMFT_REGISTER_TYPE_INFO</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMFT_REGISTER_TYPE_INFO.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMFT_REGISTER_TYPE_INFO.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMFT_REGISTER_TYPE_INFO.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubMF_SINK_WRITER_STATISTICS">
            <summary>Stub type of NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMF_SINK_WRITER_STATISTICS.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMF_SINK_WRITER_STATISTICS.InitializeStub">
            <summary>Initializes a new instance of type StubMF_SINK_WRITER_STATISTICS</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMF_SINK_WRITER_STATISTICS.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMF_SINK_WRITER_STATISTICS.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMF_SINK_WRITER_STATISTICS.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform">
            <summary>Stub type of NAudio.MediaFoundation.MediaFoundationTransform</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.#ctor(NAudio.Wave.IWaveProvider,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.CreateTransform">
            <summary>Sets the stub of MediaFoundationTransform.CreateTransform()</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.CreateTransform01">
            <summary>Sets the stub of MediaFoundationTransform.CreateTransform()</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.Dispose(System.Boolean)">
            <summary>Sets the stub of MediaFoundationTransform.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.DisposeBoolean">
            <summary>Sets the stub of MediaFoundationTransform.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.InitializeStub">
            <summary>Initializes a new instance of type StubMediaFoundationTransform</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMediaFoundationTransform.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.MediaFoundation.Fakes.StubMediaType">
            <summary>Stub type of NAudio.MediaFoundation.MediaType</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaType.#ctor(NAudio.MediaFoundation.IMFMediaType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaType.#ctor(NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.MediaFoundation.Fakes.StubMediaType.InitializeStub">
            <summary>Initializes a new instance of type StubMediaType</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMediaType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMediaType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.MediaFoundation.Fakes.StubMediaType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent">
            <summary>Shim type of NAudio.Midi.ChannelAfterTouchEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.#ctor(NAudio.Midi.ChannelAfterTouchEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.AfterTouchPressureGet">
            <summary>Sets the shim of ChannelAfterTouchEvent.get_AfterTouchPressure()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.AfterTouchPressureSetInt32">
            <summary>Sets the shim of ChannelAfterTouchEvent.set_AfterTouchPressure(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.ConstructorBinaryReader">
            <summary>Sets the shim of ChannelAfterTouchEvent.ChannelAfterTouchEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.ConstructorInt64Int32Int32">
            <summary>Sets the shim of ChannelAfterTouchEvent.ChannelAfterTouchEvent(Int64 absoluteTime, Int32 channel, Int32 afterTouchPressure)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.AllInstances.AfterTouchPressureGet">
            <summary>Sets the shim of ChannelAfterTouchEvent.get_AfterTouchPressure()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimChannelAfterTouchEvent.AllInstances.AfterTouchPressureSetInt32">
            <summary>Sets the shim of ChannelAfterTouchEvent.set_AfterTouchPressure(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimControlChangeEvent">
            <summary>Shim type of NAudio.Midi.ControlChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimControlChangeEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimControlChangeEvent.#ctor(NAudio.Midi.ControlChangeEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimControlChangeEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimControlChangeEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ConstructorBinaryReader">
            <summary>Sets the shim of ControlChangeEvent.ControlChangeEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ConstructorInt64Int32MidiControllerInt32">
            <summary>Sets the shim of ControlChangeEvent.ControlChangeEvent(Int64 absoluteTime, Int32 channel, MidiController controller, Int32 controllerValue)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ControllerGet">
            <summary>Sets the shim of ControlChangeEvent.get_Controller()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ControllerSetMidiController">
            <summary>Sets the shim of ControlChangeEvent.set_Controller(MidiController value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ControllerValueGet">
            <summary>Sets the shim of ControlChangeEvent.get_ControllerValue()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ControllerValueSetInt32">
            <summary>Sets the shim of ControlChangeEvent.set_ControllerValue(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.GetAsShortMessage">
            <summary>Sets the shim of ControlChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.ToString">
            <summary>Sets the shim of ControlChangeEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances.ControllerGet">
            <summary>Sets the shim of ControlChangeEvent.get_Controller()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances.ControllerSetMidiController">
            <summary>Sets the shim of ControlChangeEvent.set_Controller(MidiController value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances.ControllerValueGet">
            <summary>Sets the shim of ControlChangeEvent.get_ControllerValue()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances.ControllerValueSetInt32">
            <summary>Sets the shim of ControlChangeEvent.set_ControllerValue(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances.GetAsShortMessage">
            <summary>Sets the shim of ControlChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimControlChangeEvent.AllInstances.ToString01">
            <summary>Sets the shim of ControlChangeEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimKeySignatureEvent">
            <summary>Shim type of NAudio.Midi.KeySignatureEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimKeySignatureEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimKeySignatureEvent.#ctor(NAudio.Midi.KeySignatureEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimKeySignatureEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimKeySignatureEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.ConstructorBinaryReaderInt32">
            <summary>Sets the shim of KeySignatureEvent.KeySignatureEvent(BinaryReader br, Int32 length)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.ConstructorInt32Int32Int64">
            <summary>Sets the shim of KeySignatureEvent.KeySignatureEvent(Int32 sharpsFlats, Int32 majorMinor, Int64 absoluteTime)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.MajorMinorGet">
            <summary>Sets the shim of KeySignatureEvent.get_MajorMinor()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.SharpsFlatsGet">
            <summary>Sets the shim of KeySignatureEvent.get_SharpsFlats()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.ToString">
            <summary>Sets the shim of KeySignatureEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimKeySignatureEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.AllInstances.MajorMinorGet">
            <summary>Sets the shim of KeySignatureEvent.get_MajorMinor()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.AllInstances.SharpsFlatsGet">
            <summary>Sets the shim of KeySignatureEvent.get_SharpsFlats()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimKeySignatureEvent.AllInstances.ToString01">
            <summary>Sets the shim of KeySignatureEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMetaEvent">
            <summary>Shim type of NAudio.Midi.MetaEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMetaEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMetaEvent.#ctor(NAudio.Midi.MetaEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMetaEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMetaEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.Constructor">
            <summary>Sets the shim of MetaEvent.MetaEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.ConstructorMetaEventTypeInt32Int64">
            <summary>Sets the shim of MetaEvent.MetaEvent(MetaEventType metaEventType, Int32 metaDataLength, Int64 absoluteTime)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.MetaEventTypeGet">
            <summary>Sets the shim of MetaEvent.get_MetaEventType()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.ReadMetaEventBinaryReader">
            <summary>Sets the shim of MetaEvent.ReadMetaEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.ToString">
            <summary>Sets the shim of MetaEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMetaEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.AllInstances.MetaEventTypeGet">
            <summary>Sets the shim of MetaEvent.get_MetaEventType()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMetaEvent.AllInstances.ToString01">
            <summary>Sets the shim of MetaEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiEvent">
            <summary>Shim type of NAudio.Midi.MidiEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEvent.#ctor(NAudio.Midi.MidiEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AbsoluteTimeGet">
            <summary>Sets the shim of MidiEvent.get_AbsoluteTime()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AbsoluteTimeSetInt64">
            <summary>Sets the shim of MidiEvent.set_AbsoluteTime(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.ChannelGet">
            <summary>Sets the shim of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.ChannelSetInt32">
            <summary>Sets the shim of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.CommandCodeGet">
            <summary>Sets the shim of MidiEvent.get_CommandCode()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.Constructor">
            <summary>Sets the shim of MidiEvent.MidiEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.ConstructorInt64Int32MidiCommandCode">
            <summary>Sets the shim of MidiEvent.MidiEvent(Int64 absoluteTime, Int32 channel, MidiCommandCode commandCode)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.DeltaTimeGet">
            <summary>Sets the shim of MidiEvent.get_DeltaTime()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.FromRawMessageInt32">
            <summary>Sets the shim of MidiEvent.FromRawMessage(Int32 rawMessage)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.GetAsShortMessage">
            <summary>Sets the shim of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.IsEndTrackMidiEvent">
            <summary>Sets the shim of MidiEvent.IsEndTrack(MidiEvent midiEvent)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.IsNoteOffMidiEvent">
            <summary>Sets the shim of MidiEvent.IsNoteOff(MidiEvent midiEvent)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.IsNoteOnMidiEvent">
            <summary>Sets the shim of MidiEvent.IsNoteOn(MidiEvent midiEvent)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.ReadNextEventBinaryReaderMidiEvent">
            <summary>Sets the shim of MidiEvent.ReadNextEvent(BinaryReader br, MidiEvent previous)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.ReadVarIntBinaryReader">
            <summary>Sets the shim of MidiEvent.ReadVarInt(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.ToString">
            <summary>Sets the shim of MidiEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.WriteVarIntBinaryWriterInt32">
            <summary>Sets the shim of MidiEvent.WriteVarInt(BinaryWriter writer, Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.AbsoluteTimeGet">
            <summary>Sets the shim of MidiEvent.get_AbsoluteTime()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.AbsoluteTimeSetInt64">
            <summary>Sets the shim of MidiEvent.set_AbsoluteTime(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.ChannelGet">
            <summary>Sets the shim of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.ChannelSetInt32">
            <summary>Sets the shim of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.CommandCodeGet">
            <summary>Sets the shim of MidiEvent.get_CommandCode()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.DeltaTimeGet">
            <summary>Sets the shim of MidiEvent.get_DeltaTime()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.GetAsShortMessage">
            <summary>Sets the shim of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEvent.AllInstances.ToString01">
            <summary>Sets the shim of MidiEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiEventCollection">
            <summary>Shim type of NAudio.Midi.MidiEventCollection</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventCollection.#ctor(NAudio.Midi.MidiEventCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventCollection.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.IList{NAudio.Midi.MidiEvent}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AddEventMidiEventInt32">
            <summary>Sets the shim of MidiEventCollection.AddEvent(MidiEvent midiEvent, Int32 originalTrack)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AddTrack">
            <summary>Sets the shim of MidiEventCollection.AddTrack()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AddTrackIListOfMidiEvent">
            <summary>Sets the shim of MidiEventCollection.AddTrack(IList`1&lt;MidiEvent&gt; initialEvents)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.Clear">
            <summary>Sets the shim of MidiEventCollection.Clear()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.ConstructorInt32Int32">
            <summary>Sets the shim of MidiEventCollection.MidiEventCollection(Int32 midiFileType, Int32 deltaTicksPerQuarterNote)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.DeltaTicksPerQuarterNoteGet">
            <summary>Sets the shim of MidiEventCollection.get_DeltaTicksPerQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.EnsureTracksInt32">
            <summary>Sets the shim of MidiEventCollection.EnsureTracks(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.ExplodeToManyTracks">
            <summary>Sets the shim of MidiEventCollection.ExplodeToManyTracks()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.FlattenToOneTrack">
            <summary>Sets the shim of MidiEventCollection.FlattenToOneTrack()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.GetEnumerator">
            <summary>Sets the shim of MidiEventCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.GetTrackEventsInt32">
            <summary>Sets the shim of MidiEventCollection.GetTrackEvents(Int32 trackNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.ItemGetInt32">
            <summary>Sets the shim of MidiEventCollection.get_Item(Int32 trackNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.MidiFileTypeGet">
            <summary>Sets the shim of MidiEventCollection.get_MidiFileType()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.MidiFileTypeSetInt32">
            <summary>Sets the shim of MidiEventCollection.set_MidiFileType(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.PrepareForExport">
            <summary>Sets the shim of MidiEventCollection.PrepareForExport()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.RemoveTrackInt32">
            <summary>Sets the shim of MidiEventCollection.RemoveTrack(Int32 track)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.StartAbsoluteTimeGet">
            <summary>Sets the shim of MidiEventCollection.get_StartAbsoluteTime()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.StartAbsoluteTimeSetInt64">
            <summary>Sets the shim of MidiEventCollection.set_StartAbsoluteTime(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MidiEventCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.TracksGet">
            <summary>Sets the shim of MidiEventCollection.get_Tracks()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.AddEventMidiEventInt32">
            <summary>Sets the shim of MidiEventCollection.AddEvent(MidiEvent midiEvent, Int32 originalTrack)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.AddTrack">
            <summary>Sets the shim of MidiEventCollection.AddTrack()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.AddTrackIListOfMidiEvent">
            <summary>Sets the shim of MidiEventCollection.AddTrack(IList`1&lt;MidiEvent&gt; initialEvents)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.Clear">
            <summary>Sets the shim of MidiEventCollection.Clear()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.DeltaTicksPerQuarterNoteGet">
            <summary>Sets the shim of MidiEventCollection.get_DeltaTicksPerQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.EnsureTracksInt32">
            <summary>Sets the shim of MidiEventCollection.EnsureTracks(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.ExplodeToManyTracks">
            <summary>Sets the shim of MidiEventCollection.ExplodeToManyTracks()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.FlattenToOneTrack">
            <summary>Sets the shim of MidiEventCollection.FlattenToOneTrack()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of MidiEventCollection.GetEnumerator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.GetTrackEventsInt32">
            <summary>Sets the shim of MidiEventCollection.GetTrackEvents(Int32 trackNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of MidiEventCollection.get_Item(Int32 trackNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.MidiFileTypeGet">
            <summary>Sets the shim of MidiEventCollection.get_MidiFileType()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.MidiFileTypeSetInt32">
            <summary>Sets the shim of MidiEventCollection.set_MidiFileType(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.PrepareForExport">
            <summary>Sets the shim of MidiEventCollection.PrepareForExport()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.RemoveTrackInt32">
            <summary>Sets the shim of MidiEventCollection.RemoveTrack(Int32 track)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.StartAbsoluteTimeGet">
            <summary>Sets the shim of MidiEventCollection.get_StartAbsoluteTime()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.StartAbsoluteTimeSetInt64">
            <summary>Sets the shim of MidiEventCollection.set_StartAbsoluteTime(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MidiEventCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventCollection.AllInstances.TracksGet">
            <summary>Sets the shim of MidiEventCollection.get_Tracks()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiEventComparer">
            <summary>Shim type of NAudio.Midi.MidiEventComparer</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventComparer.#ctor(NAudio.Midi.MidiEventComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiEventComparer.Bind(System.Collections.Generic.IComparer{NAudio.Midi.MidiEvent})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventComparer.CompareMidiEventMidiEvent">
            <summary>Sets the shim of MidiEventComparer.Compare(MidiEvent x, MidiEvent y)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventComparer.Constructor">
            <summary>Sets the shim of MidiEventComparer.MidiEventComparer()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiEventComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiEventComparer.AllInstances.CompareMidiEventMidiEvent">
            <summary>Sets the shim of MidiEventComparer.Compare(MidiEvent x, MidiEvent y)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiFile">
            <summary>Shim type of NAudio.Midi.MidiFile</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiFile.#ctor(NAudio.Midi.MidiFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.ConstructorString">
            <summary>Sets the shim of MidiFile.MidiFile(String filename)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.ConstructorStringBoolean">
            <summary>Sets the shim of MidiFile.MidiFile(String filename, Boolean strictChecking)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.DeltaTicksPerQuarterNoteGet">
            <summary>Sets the shim of MidiFile.get_DeltaTicksPerQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.EventsGet">
            <summary>Sets the shim of MidiFile.get_Events()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.ExportStringMidiEventCollection">
            <summary>Sets the shim of MidiFile.Export(String filename, MidiEventCollection events)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.FileFormatGet">
            <summary>Sets the shim of MidiFile.get_FileFormat()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.FindNoteOnNoteEventListOfNoteOnEvent">
            <summary>Sets the shim of MidiFile.FindNoteOn(NoteEvent offEvent, List`1&lt;NoteOnEvent&gt; outstandingNoteOns)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.SwapUInt16UInt16">
            <summary>Sets the shim of MidiFile.SwapUInt16(UInt16 i)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.SwapUInt32UInt32">
            <summary>Sets the shim of MidiFile.SwapUInt32(UInt32 i)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.ToString">
            <summary>Sets the shim of MidiFile.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.TracksGet">
            <summary>Sets the shim of MidiFile.get_Tracks()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.AllInstances.DeltaTicksPerQuarterNoteGet">
            <summary>Sets the shim of MidiFile.get_DeltaTicksPerQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.AllInstances.EventsGet">
            <summary>Sets the shim of MidiFile.get_Events()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.AllInstances.FileFormatGet">
            <summary>Sets the shim of MidiFile.get_FileFormat()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.AllInstances.FindNoteOnNoteEventListOfNoteOnEvent">
            <summary>Sets the shim of MidiFile.FindNoteOn(NoteEvent offEvent, List`1&lt;NoteOnEvent&gt; outstandingNoteOns)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.AllInstances.ToString01">
            <summary>Sets the shim of MidiFile.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiFile.AllInstances.TracksGet">
            <summary>Sets the shim of MidiFile.get_Tracks()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiIn">
            <summary>Shim type of NAudio.Midi.MidiIn</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiIn.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiIn.#ctor(NAudio.Midi.MidiIn)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiIn.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiIn.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiIn.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.Close">
            <summary>Sets the shim of MidiIn.Close()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.ConstructorInt32">
            <summary>Sets the shim of MidiIn.MidiIn(Int32 deviceNo)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.DeviceInfoInt32">
            <summary>Sets the shim of MidiIn.DeviceInfo(Int32 midiInDeviceNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.Dispose">
            <summary>Sets the shim of MidiIn.Dispose()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.DisposeBoolean">
            <summary>Sets the shim of MidiIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.ErrorReceivedAddEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.add_ErrorReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.ErrorReceivedRemoveEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.remove_ErrorReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.MessageReceivedAddEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.add_MessageReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.MessageReceivedRemoveEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.remove_MessageReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.NumberOfDevicesGet">
            <summary>Sets the shim of MidiIn.get_NumberOfDevices()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.Reset">
            <summary>Sets the shim of MidiIn.Reset()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.Start">
            <summary>Sets the shim of MidiIn.Start()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.Stop">
            <summary>Sets the shim of MidiIn.Stop()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiIn.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.Close">
            <summary>Sets the shim of MidiIn.Close()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.Dispose">
            <summary>Sets the shim of MidiIn.Dispose()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MidiIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.ErrorReceivedAddEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.add_ErrorReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.ErrorReceivedRemoveEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.remove_ErrorReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.MessageReceivedAddEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.add_MessageReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.MessageReceivedRemoveEventHandlerOfMidiInMessageEventArgs">
            <summary>Sets the shim of MidiIn.remove_MessageReceived(EventHandler`1&lt;MidiInMessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.Reset">
            <summary>Sets the shim of MidiIn.Reset()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.Start">
            <summary>Sets the shim of MidiIn.Start()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiIn.AllInstances.Stop">
            <summary>Sets the shim of MidiIn.Stop()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiInCapabilities">
            <summary>Shim type of NAudio.Midi.MidiInCapabilities</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInCapabilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInCapabilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInCapabilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInCapabilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiInCapabilities.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs">
            <summary>Shim type of NAudio.Midi.MidiInMessageEventArgs</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.#ctor(NAudio.Midi.MidiInMessageEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.ConstructorInt32Int32">
            <summary>Sets the shim of MidiInMessageEventArgs.MidiInMessageEventArgs(Int32 message, Int32 timestamp)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.MidiEventGet">
            <summary>Sets the shim of MidiInMessageEventArgs.get_MidiEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.MidiEventSetMidiEvent">
            <summary>Sets the shim of MidiInMessageEventArgs.set_MidiEvent(MidiEvent value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.RawMessageGet">
            <summary>Sets the shim of MidiInMessageEventArgs.get_RawMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.RawMessageSetInt32">
            <summary>Sets the shim of MidiInMessageEventArgs.set_RawMessage(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.TimestampGet">
            <summary>Sets the shim of MidiInMessageEventArgs.get_Timestamp()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.TimestampSetInt32">
            <summary>Sets the shim of MidiInMessageEventArgs.set_Timestamp(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances.MidiEventGet">
            <summary>Sets the shim of MidiInMessageEventArgs.get_MidiEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances.MidiEventSetMidiEvent">
            <summary>Sets the shim of MidiInMessageEventArgs.set_MidiEvent(MidiEvent value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances.RawMessageGet">
            <summary>Sets the shim of MidiInMessageEventArgs.get_RawMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances.RawMessageSetInt32">
            <summary>Sets the shim of MidiInMessageEventArgs.set_RawMessage(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances.TimestampGet">
            <summary>Sets the shim of MidiInMessageEventArgs.get_Timestamp()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiInMessageEventArgs.AllInstances.TimestampSetInt32">
            <summary>Sets the shim of MidiInMessageEventArgs.set_Timestamp(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiMessage">
            <summary>Shim type of NAudio.Midi.MidiMessage</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiMessage.#ctor(NAudio.Midi.MidiMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.ChangeControlInt32Int32Int32">
            <summary>Sets the shim of MidiMessage.ChangeControl(Int32 controller, Int32 value, Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.ChangePatchInt32Int32">
            <summary>Sets the shim of MidiMessage.ChangePatch(Int32 patch, Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.ConstructorInt32">
            <summary>Sets the shim of MidiMessage.MidiMessage(Int32 rawData)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.ConstructorInt32Int32Int32">
            <summary>Sets the shim of MidiMessage.MidiMessage(Int32 status, Int32 data1, Int32 data2)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.RawDataGet">
            <summary>Sets the shim of MidiMessage.get_RawData()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.StartNoteInt32Int32Int32">
            <summary>Sets the shim of MidiMessage.StartNote(Int32 note, Int32 volume, Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.StopNoteInt32Int32Int32">
            <summary>Sets the shim of MidiMessage.StopNote(Int32 note, Int32 volume, Int32 channel)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiMessage.AllInstances.RawDataGet">
            <summary>Sets the shim of MidiMessage.get_RawData()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiOut">
            <summary>Shim type of NAudio.Midi.MidiOut</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOut.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOut.#ctor(NAudio.Midi.MidiOut)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOut.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOut.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOut.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.Close">
            <summary>Sets the shim of MidiOut.Close()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.ConstructorInt32">
            <summary>Sets the shim of MidiOut.MidiOut(Int32 deviceNo)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.DeviceInfoInt32">
            <summary>Sets the shim of MidiOut.DeviceInfo(Int32 midiOutDeviceNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.Dispose">
            <summary>Sets the shim of MidiOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.DisposeBoolean">
            <summary>Sets the shim of MidiOut.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.NumberOfDevicesGet">
            <summary>Sets the shim of MidiOut.get_NumberOfDevices()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.Reset">
            <summary>Sets the shim of MidiOut.Reset()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.SendBufferByteArray">
            <summary>Sets the shim of MidiOut.SendBuffer(Byte[] byteBuffer)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.SendDriverMessageInt32Int32Int32">
            <summary>Sets the shim of MidiOut.SendDriverMessage(Int32 message, Int32 param1, Int32 param2)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.SendInt32">
            <summary>Sets the shim of MidiOut.Send(Int32 message)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.VolumeGet">
            <summary>Sets the shim of MidiOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.VolumeSetInt32">
            <summary>Sets the shim of MidiOut.set_Volume(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiOut.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.Close">
            <summary>Sets the shim of MidiOut.Close()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.Dispose">
            <summary>Sets the shim of MidiOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MidiOut.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.Reset">
            <summary>Sets the shim of MidiOut.Reset()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.SendBufferByteArray">
            <summary>Sets the shim of MidiOut.SendBuffer(Byte[] byteBuffer)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.SendDriverMessageInt32Int32Int32">
            <summary>Sets the shim of MidiOut.SendDriverMessage(Int32 message, Int32 param1, Int32 param2)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.SendInt32">
            <summary>Sets the shim of MidiOut.Send(Int32 message)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.VolumeGet">
            <summary>Sets the shim of MidiOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOut.AllInstances.VolumeSetInt32">
            <summary>Sets the shim of MidiOut.set_Volume(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiOutCapabilities">
            <summary>Shim type of NAudio.Midi.MidiOutCapabilities</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOutCapabilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOutCapabilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimMidiOutCapabilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimMidiOutCapabilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimMidiOutCapabilities.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimNoteEvent">
            <summary>Shim type of NAudio.Midi.NoteEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteEvent.#ctor(NAudio.Midi.NoteEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.ConstructorBinaryReader">
            <summary>Sets the shim of NoteEvent.NoteEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.ConstructorInt64Int32MidiCommandCodeInt32Int32">
            <summary>Sets the shim of NoteEvent.NoteEvent(Int64 absoluteTime, Int32 channel, MidiCommandCode commandCode, Int32 noteNumber, Int32 velocity)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.GetAsShortMessage">
            <summary>Sets the shim of NoteEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.NoteNameGet">
            <summary>Sets the shim of NoteEvent.get_NoteName()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.NoteNumberGet">
            <summary>Sets the shim of NoteEvent.get_NoteNumber()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.NoteNumberSetInt32">
            <summary>Sets the shim of NoteEvent.set_NoteNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.StaticConstructor">
            <summary>Sets the shim of NoteEvent.NoteEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.ToString">
            <summary>Sets the shim of NoteEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.VelocityGet">
            <summary>Sets the shim of NoteEvent.get_Velocity()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.VelocitySetInt32">
            <summary>Sets the shim of NoteEvent.set_Velocity(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.GetAsShortMessage">
            <summary>Sets the shim of NoteEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.NoteNameGet">
            <summary>Sets the shim of NoteEvent.get_NoteName()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.NoteNumberGet">
            <summary>Sets the shim of NoteEvent.get_NoteNumber()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.NoteNumberSetInt32">
            <summary>Sets the shim of NoteEvent.set_NoteNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.ToString01">
            <summary>Sets the shim of NoteEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.VelocityGet">
            <summary>Sets the shim of NoteEvent.get_Velocity()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteEvent.AllInstances.VelocitySetInt32">
            <summary>Sets the shim of NoteEvent.set_Velocity(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimNoteOnEvent">
            <summary>Shim type of NAudio.Midi.NoteOnEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteOnEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteOnEvent.#ctor(NAudio.Midi.NoteOnEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteOnEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimNoteOnEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.ChannelGet">
            <summary>Sets the shim of NoteOnEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.ChannelSetInt32">
            <summary>Sets the shim of NoteOnEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.ConstructorBinaryReader">
            <summary>Sets the shim of NoteOnEvent.NoteOnEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.ConstructorInt64Int32Int32Int32Int32">
            <summary>Sets the shim of NoteOnEvent.NoteOnEvent(Int64 absoluteTime, Int32 channel, Int32 noteNumber, Int32 velocity, Int32 duration)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.NoteLengthGet">
            <summary>Sets the shim of NoteOnEvent.get_NoteLength()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.NoteLengthSetInt32">
            <summary>Sets the shim of NoteOnEvent.set_NoteLength(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.NoteNumberGet">
            <summary>Sets the shim of NoteOnEvent.get_NoteNumber()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.NoteNumberSetInt32">
            <summary>Sets the shim of NoteOnEvent.set_NoteNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.OffEventGet">
            <summary>Sets the shim of NoteOnEvent.get_OffEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.OffEventSetNoteEvent">
            <summary>Sets the shim of NoteOnEvent.set_OffEvent(NoteEvent value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.ToString">
            <summary>Sets the shim of NoteOnEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.ChannelGet">
            <summary>Sets the shim of NoteOnEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.ChannelSetInt32">
            <summary>Sets the shim of NoteOnEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.NoteLengthGet">
            <summary>Sets the shim of NoteOnEvent.get_NoteLength()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.NoteLengthSetInt32">
            <summary>Sets the shim of NoteOnEvent.set_NoteLength(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.NoteNumberGet">
            <summary>Sets the shim of NoteOnEvent.get_NoteNumber()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.NoteNumberSetInt32">
            <summary>Sets the shim of NoteOnEvent.set_NoteNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.OffEventGet">
            <summary>Sets the shim of NoteOnEvent.get_OffEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.OffEventSetNoteEvent">
            <summary>Sets the shim of NoteOnEvent.set_OffEvent(NoteEvent value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimNoteOnEvent.AllInstances.ToString01">
            <summary>Sets the shim of NoteOnEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimPatchChangeEvent">
            <summary>Shim type of NAudio.Midi.PatchChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPatchChangeEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPatchChangeEvent.#ctor(NAudio.Midi.PatchChangeEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPatchChangeEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPatchChangeEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.ConstructorBinaryReader">
            <summary>Sets the shim of PatchChangeEvent.PatchChangeEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.ConstructorInt64Int32Int32">
            <summary>Sets the shim of PatchChangeEvent.PatchChangeEvent(Int64 absoluteTime, Int32 channel, Int32 patchNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.GetAsShortMessage">
            <summary>Sets the shim of PatchChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.GetPatchNameInt32">
            <summary>Sets the shim of PatchChangeEvent.GetPatchName(Int32 patchNumber)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.PatchGet">
            <summary>Sets the shim of PatchChangeEvent.get_Patch()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.PatchSetInt32">
            <summary>Sets the shim of PatchChangeEvent.set_Patch(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.StaticConstructor">
            <summary>Sets the shim of PatchChangeEvent.PatchChangeEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.ToString">
            <summary>Sets the shim of PatchChangeEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimPatchChangeEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.AllInstances.GetAsShortMessage">
            <summary>Sets the shim of PatchChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.AllInstances.PatchGet">
            <summary>Sets the shim of PatchChangeEvent.get_Patch()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.AllInstances.PatchSetInt32">
            <summary>Sets the shim of PatchChangeEvent.set_Patch(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPatchChangeEvent.AllInstances.ToString01">
            <summary>Sets the shim of PatchChangeEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent">
            <summary>Shim type of NAudio.Midi.PitchWheelChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.#ctor(NAudio.Midi.PitchWheelChangeEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.ConstructorBinaryReader">
            <summary>Sets the shim of PitchWheelChangeEvent.PitchWheelChangeEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.ConstructorInt64Int32Int32">
            <summary>Sets the shim of PitchWheelChangeEvent.PitchWheelChangeEvent(Int64 absoluteTime, Int32 channel, Int32 pitchWheel)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.GetAsShortMessage">
            <summary>Sets the shim of PitchWheelChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.PitchGet">
            <summary>Sets the shim of PitchWheelChangeEvent.get_Pitch()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.PitchSetInt32">
            <summary>Sets the shim of PitchWheelChangeEvent.set_Pitch(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.ToString">
            <summary>Sets the shim of PitchWheelChangeEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.AllInstances.GetAsShortMessage">
            <summary>Sets the shim of PitchWheelChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.AllInstances.PitchGet">
            <summary>Sets the shim of PitchWheelChangeEvent.get_Pitch()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.AllInstances.PitchSetInt32">
            <summary>Sets the shim of PitchWheelChangeEvent.set_Pitch(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimPitchWheelChangeEvent.AllInstances.ToString01">
            <summary>Sets the shim of PitchWheelChangeEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimSequencerSpecificEvent">
            <summary>Shim type of NAudio.Midi.SequencerSpecificEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.#ctor(NAudio.Midi.SequencerSpecificEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.ConstructorBinaryReaderInt32">
            <summary>Sets the shim of SequencerSpecificEvent.SequencerSpecificEvent(BinaryReader br, Int32 length)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.ConstructorByteArrayInt64">
            <summary>Sets the shim of SequencerSpecificEvent.SequencerSpecificEvent(Byte[] data, Int64 absoluteTime)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.DataGet">
            <summary>Sets the shim of SequencerSpecificEvent.get_Data()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.DataSetByteArray">
            <summary>Sets the shim of SequencerSpecificEvent.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.ToString">
            <summary>Sets the shim of SequencerSpecificEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.AllInstances.DataGet">
            <summary>Sets the shim of SequencerSpecificEvent.get_Data()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.AllInstances.DataSetByteArray">
            <summary>Sets the shim of SequencerSpecificEvent.set_Data(Byte[] value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSequencerSpecificEvent.AllInstances.ToString01">
            <summary>Sets the shim of SequencerSpecificEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimSysexEvent">
            <summary>Shim type of NAudio.Midi.SysexEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSysexEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSysexEvent.#ctor(NAudio.Midi.SysexEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSysexEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimSysexEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSysexEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSysexEvent.Constructor">
            <summary>Sets the shim of SysexEvent.SysexEvent()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSysexEvent.ReadSysexEventBinaryReader">
            <summary>Sets the shim of SysexEvent.ReadSysexEvent(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSysexEvent.ToString">
            <summary>Sets the shim of SysexEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimSysexEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimSysexEvent.AllInstances.ToString01">
            <summary>Sets the shim of SysexEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTempoEvent">
            <summary>Shim type of NAudio.Midi.TempoEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTempoEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTempoEvent.#ctor(NAudio.Midi.TempoEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTempoEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTempoEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.ConstructorBinaryReaderInt32">
            <summary>Sets the shim of TempoEvent.TempoEvent(BinaryReader br, Int32 length)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.ConstructorInt32Int64">
            <summary>Sets the shim of TempoEvent.TempoEvent(Int32 microsecondsPerQuarterNote, Int64 absoluteTime)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.MicrosecondsPerQuarterNoteGet">
            <summary>Sets the shim of TempoEvent.get_MicrosecondsPerQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.TempoGet">
            <summary>Sets the shim of TempoEvent.get_Tempo()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.ToString">
            <summary>Sets the shim of TempoEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTempoEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.AllInstances.MicrosecondsPerQuarterNoteGet">
            <summary>Sets the shim of TempoEvent.get_MicrosecondsPerQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.AllInstances.TempoGet">
            <summary>Sets the shim of TempoEvent.get_Tempo()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTempoEvent.AllInstances.ToString01">
            <summary>Sets the shim of TempoEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTextEvent">
            <summary>Shim type of NAudio.Midi.TextEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTextEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTextEvent.#ctor(NAudio.Midi.TextEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTextEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTextEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.ConstructorBinaryReaderInt32">
            <summary>Sets the shim of TextEvent.TextEvent(BinaryReader br, Int32 length)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.ConstructorStringMetaEventTypeInt64">
            <summary>Sets the shim of TextEvent.TextEvent(String text, MetaEventType metaEventType, Int64 absoluteTime)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.TextGet">
            <summary>Sets the shim of TextEvent.get_Text()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.TextSetString">
            <summary>Sets the shim of TextEvent.set_Text(String value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.ToString">
            <summary>Sets the shim of TextEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTextEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.AllInstances.TextGet">
            <summary>Sets the shim of TextEvent.get_Text()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.AllInstances.TextSetString">
            <summary>Sets the shim of TextEvent.set_Text(String value)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTextEvent.AllInstances.ToString01">
            <summary>Sets the shim of TextEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTimeSignatureEvent">
            <summary>Shim type of NAudio.Midi.TimeSignatureEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTimeSignatureEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTimeSignatureEvent.#ctor(NAudio.Midi.TimeSignatureEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTimeSignatureEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTimeSignatureEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.ConstructorBinaryReaderInt32">
            <summary>Sets the shim of TimeSignatureEvent.TimeSignatureEvent(BinaryReader br, Int32 length)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.ConstructorInt32Int32Int32Int32Int64">
            <summary>Sets the shim of TimeSignatureEvent.TimeSignatureEvent(Int32 numerator, Int32 denominator, Int32 ticksInMetronomeClick, Int32 no32ndNotesInQuarterNote, Int64 absoluteTime)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.ConstructorInt64Int32Int32Int32Int32">
            <summary>Sets the shim of TimeSignatureEvent.TimeSignatureEvent(Int64 absoluteTime, Int32 numerator, Int32 denominator, Int32 ticksInMetronomeClick, Int32 no32ndNotesInQuarterNote)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.DenominatorGet">
            <summary>Sets the shim of TimeSignatureEvent.get_Denominator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.No32ndNotesInQuarterNoteGet">
            <summary>Sets the shim of TimeSignatureEvent.get_No32ndNotesInQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.NumeratorGet">
            <summary>Sets the shim of TimeSignatureEvent.get_Numerator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.TicksInMetronomeClickGet">
            <summary>Sets the shim of TimeSignatureEvent.get_TicksInMetronomeClick()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.TimeSignatureGet">
            <summary>Sets the shim of TimeSignatureEvent.get_TimeSignature()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.ToString">
            <summary>Sets the shim of TimeSignatureEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances.DenominatorGet">
            <summary>Sets the shim of TimeSignatureEvent.get_Denominator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances.No32ndNotesInQuarterNoteGet">
            <summary>Sets the shim of TimeSignatureEvent.get_No32ndNotesInQuarterNote()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances.NumeratorGet">
            <summary>Sets the shim of TimeSignatureEvent.get_Numerator()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances.TicksInMetronomeClickGet">
            <summary>Sets the shim of TimeSignatureEvent.get_TicksInMetronomeClick()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances.TimeSignatureGet">
            <summary>Sets the shim of TimeSignatureEvent.get_TimeSignature()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTimeSignatureEvent.AllInstances.ToString01">
            <summary>Sets the shim of TimeSignatureEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent">
            <summary>Shim type of NAudio.Midi.TrackSequenceNumberEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.#ctor(NAudio.Midi.TrackSequenceNumberEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.ConstructorBinaryReaderInt32">
            <summary>Sets the shim of TrackSequenceNumberEvent.TrackSequenceNumberEvent(BinaryReader br, Int32 length)</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.ToString">
            <summary>Sets the shim of TrackSequenceNumberEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.ShimTrackSequenceNumberEvent.AllInstances.ToString01">
            <summary>Sets the shim of TrackSequenceNumberEvent.ToString()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubChannelAfterTouchEvent">
            <summary>Stub type of NAudio.Midi.ChannelAfterTouchEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubChannelAfterTouchEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of ChannelAfterTouchEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of ChannelAfterTouchEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.InitializeStub">
            <summary>Initializes a new instance of type StubChannelAfterTouchEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.ToString">
            <summary>Sets the stub of MidiEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.ToString01">
            <summary>Sets the stub of MidiEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubChannelAfterTouchEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubControlChangeEvent">
            <summary>Stub type of NAudio.Midi.ControlChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.#ctor(System.Int64,System.Int32,NAudio.Midi.MidiController,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubControlChangeEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubControlChangeEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubControlChangeEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of ControlChangeEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubControlChangeEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of ControlChangeEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.GetAsShortMessage">
            <summary>Sets the stub of ControlChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubControlChangeEvent.GetAsShortMessage01">
            <summary>Sets the stub of ControlChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.InitializeStub">
            <summary>Initializes a new instance of type StubControlChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubControlChangeEvent.ToString">
            <summary>Sets the stub of ControlChangeEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubControlChangeEvent.ToString01">
            <summary>Sets the stub of ControlChangeEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubControlChangeEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubControlChangeEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubControlChangeEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubControlChangeEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubKeySignatureEvent">
            <summary>Stub type of NAudio.Midi.KeySignatureEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.#ctor(System.IO.BinaryReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.#ctor(System.Int32,System.Int32,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubKeySignatureEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubKeySignatureEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubKeySignatureEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of KeySignatureEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubKeySignatureEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of KeySignatureEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubKeySignatureEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.InitializeStub">
            <summary>Initializes a new instance of type StubKeySignatureEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubKeySignatureEvent.ToString">
            <summary>Sets the stub of KeySignatureEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubKeySignatureEvent.ToString01">
            <summary>Sets the stub of KeySignatureEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubKeySignatureEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubKeySignatureEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubKeySignatureEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubKeySignatureEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMetaEvent">
            <summary>Stub type of NAudio.Midi.MetaEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.#ctor(NAudio.Midi.MetaEventType,System.Int32,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubMetaEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMetaEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMetaEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of MetaEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMetaEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of MetaEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMetaEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.InitializeStub">
            <summary>Initializes a new instance of type StubMetaEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMetaEvent.ToString">
            <summary>Sets the stub of MetaEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMetaEvent.ToString01">
            <summary>Sets the stub of MetaEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMetaEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMetaEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMetaEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMetaEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiEvent">
            <summary>Stub type of NAudio.Midi.MidiEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.#ctor(System.Int64,System.Int32,NAudio.Midi.MidiCommandCode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubMidiEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of MidiEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of MidiEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.InitializeStub">
            <summary>Initializes a new instance of type StubMidiEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEvent.ToString">
            <summary>Sets the stub of MidiEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiEvent.ToString01">
            <summary>Sets the stub of MidiEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiEventCollection">
            <summary>Stub type of NAudio.Midi.MidiEventCollection</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEventCollection.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEventCollection.InitializeStub">
            <summary>Initializes a new instance of type StubMidiEventCollection</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEventCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEventCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEventCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiEventComparer">
            <summary>Stub type of NAudio.Midi.MidiEventComparer</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEventComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiEventComparer.InitializeStub">
            <summary>Initializes a new instance of type StubMidiEventComparer</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEventComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEventComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiEventComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiFile">
            <summary>Stub type of NAudio.Midi.MidiFile</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiFile.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiFile.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiFile.InitializeStub">
            <summary>Initializes a new instance of type StubMidiFile</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiFile.ToString">
            <summary>Sets the stub of MidiFile.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiFile.ToString01">
            <summary>Sets the stub of MidiFile.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiIn">
            <summary>Stub type of NAudio.Midi.MidiIn</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiIn.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiIn.Dispose(System.Boolean)">
            <summary>Sets the stub of MidiIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiIn.DisposeBoolean">
            <summary>Sets the stub of MidiIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiIn.InitializeStub">
            <summary>Initializes a new instance of type StubMidiIn</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiIn.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiIn.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiIn.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiInMessageEventArgs">
            <summary>Stub type of NAudio.Midi.MidiInMessageEventArgs</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiInMessageEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiInMessageEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubMidiInMessageEventArgs</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiInMessageEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiInMessageEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiInMessageEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiMessage">
            <summary>Stub type of NAudio.Midi.MidiMessage</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiMessage.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiMessage.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiMessage.InitializeStub">
            <summary>Initializes a new instance of type StubMidiMessage</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubMidiOut">
            <summary>Stub type of NAudio.Midi.MidiOut</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiOut.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiOut.Dispose(System.Boolean)">
            <summary>Sets the stub of MidiOut.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubMidiOut.DisposeBoolean">
            <summary>Sets the stub of MidiOut.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubMidiOut.InitializeStub">
            <summary>Initializes a new instance of type StubMidiOut</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiOut.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiOut.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubMidiOut.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubNoteEvent">
            <summary>Stub type of NAudio.Midi.NoteEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.#ctor(System.Int64,System.Int32,NAudio.Midi.MidiCommandCode,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubNoteEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.AttachBackingFieldToNoteNumber">
            <summary>Attaches delegates to emulate StubNoteEvent.NoteNumber as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of NoteEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of NoteEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.GetAsShortMessage">
            <summary>Sets the stub of NoteEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.GetAsShortMessage01">
            <summary>Sets the stub of NoteEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.InitializeStub">
            <summary>Initializes a new instance of type StubNoteEvent</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.NoteNumberGet">
            <summary>Sets the stub of NoteEvent.get_NoteNumber()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.NoteNumberSetInt32">
            <summary>Sets the stub of NoteEvent.set_NoteNumber(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteEvent.ToString">
            <summary>Sets the stub of NoteEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteEvent.ToString01">
            <summary>Sets the stub of NoteEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteEvent.NoteNumber">
            <summary>Sets the stub of NoteEvent.get_NoteNumber()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubNoteOnEvent">
            <summary>Stub type of NAudio.Midi.NoteOnEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubNoteOnEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.AttachBackingFieldToNoteNumber">
            <summary>Attaches delegates to emulate StubNoteOnEvent.NoteNumber as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.ChannelGet">
            <summary>Sets the stub of NoteOnEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.ChannelSetInt32">
            <summary>Sets the stub of NoteOnEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of NoteEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of NoteEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.GetAsShortMessage">
            <summary>Sets the stub of NoteEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.GetAsShortMessage01">
            <summary>Sets the stub of NoteEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.InitializeStub">
            <summary>Initializes a new instance of type StubNoteOnEvent</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.NoteNumberGet">
            <summary>Sets the stub of NoteOnEvent.get_NoteNumber()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.NoteNumberSetInt32">
            <summary>Sets the stub of NoteOnEvent.set_NoteNumber(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubNoteOnEvent.ToString">
            <summary>Sets the stub of NoteOnEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubNoteOnEvent.ToString01">
            <summary>Sets the stub of NoteOnEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteOnEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteOnEvent.Channel">
            <summary>Sets the stub of NoteOnEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteOnEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteOnEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubNoteOnEvent.NoteNumber">
            <summary>Sets the stub of NoteOnEvent.get_NoteNumber()</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubPatchChangeEvent">
            <summary>Stub type of NAudio.Midi.PatchChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubPatchChangeEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPatchChangeEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPatchChangeEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of PatchChangeEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPatchChangeEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of PatchChangeEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.GetAsShortMessage">
            <summary>Sets the stub of PatchChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPatchChangeEvent.GetAsShortMessage01">
            <summary>Sets the stub of PatchChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.InitializeStub">
            <summary>Initializes a new instance of type StubPatchChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPatchChangeEvent.ToString">
            <summary>Sets the stub of PatchChangeEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPatchChangeEvent.ToString01">
            <summary>Sets the stub of PatchChangeEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPatchChangeEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPatchChangeEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPatchChangeEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPatchChangeEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubPitchWheelChangeEvent">
            <summary>Stub type of NAudio.Midi.PitchWheelChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubPitchWheelChangeEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of PitchWheelChangeEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of PitchWheelChangeEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.GetAsShortMessage">
            <summary>Sets the stub of PitchWheelChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.GetAsShortMessage01">
            <summary>Sets the stub of PitchWheelChangeEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.InitializeStub">
            <summary>Initializes a new instance of type StubPitchWheelChangeEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.ToString">
            <summary>Sets the stub of PitchWheelChangeEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.ToString01">
            <summary>Sets the stub of PitchWheelChangeEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubPitchWheelChangeEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubSequencerSpecificEvent">
            <summary>Stub type of NAudio.Midi.SequencerSpecificEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.#ctor(System.Byte[],System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.#ctor(System.IO.BinaryReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubSequencerSpecificEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSequencerSpecificEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSequencerSpecificEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of SequencerSpecificEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSequencerSpecificEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of SequencerSpecificEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSequencerSpecificEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.InitializeStub">
            <summary>Initializes a new instance of type StubSequencerSpecificEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSequencerSpecificEvent.ToString">
            <summary>Sets the stub of SequencerSpecificEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSequencerSpecificEvent.ToString01">
            <summary>Sets the stub of SequencerSpecificEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSequencerSpecificEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSequencerSpecificEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSequencerSpecificEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSequencerSpecificEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubSysexEvent">
            <summary>Stub type of NAudio.Midi.SysexEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSysexEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSysexEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubSysexEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSysexEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSysexEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSysexEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of SysexEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSysexEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of SysexEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSysexEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSysexEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSysexEvent.InitializeStub">
            <summary>Initializes a new instance of type StubSysexEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubSysexEvent.ToString">
            <summary>Sets the stub of SysexEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubSysexEvent.ToString01">
            <summary>Sets the stub of SysexEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSysexEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSysexEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSysexEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubSysexEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubTempoEvent">
            <summary>Stub type of NAudio.Midi.TempoEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.#ctor(System.Int32,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.#ctor(System.IO.BinaryReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubTempoEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTempoEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTempoEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of TempoEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTempoEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of TempoEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTempoEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTempoEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTempoEvent.ToString">
            <summary>Sets the stub of TempoEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTempoEvent.ToString01">
            <summary>Sets the stub of TempoEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTempoEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTempoEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTempoEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTempoEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubTextEvent">
            <summary>Stub type of NAudio.Midi.TextEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.#ctor(System.IO.BinaryReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.#ctor(System.String,NAudio.Midi.MetaEventType,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubTextEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTextEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTextEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of TextEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTextEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of TextEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTextEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTextEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTextEvent.ToString">
            <summary>Sets the stub of TextEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTextEvent.ToString01">
            <summary>Sets the stub of TextEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTextEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTextEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTextEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTextEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubTimeSignatureEvent">
            <summary>Stub type of NAudio.Midi.TimeSignatureEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.#ctor(System.IO.BinaryReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.#ctor(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubTimeSignatureEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTimeSignatureEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTimeSignatureEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of TimeSignatureEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTimeSignatureEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of TimeSignatureEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTimeSignatureEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTimeSignatureEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTimeSignatureEvent.ToString">
            <summary>Sets the stub of TimeSignatureEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTimeSignatureEvent.ToString01">
            <summary>Sets the stub of TimeSignatureEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTimeSignatureEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTimeSignatureEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTimeSignatureEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTimeSignatureEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent">
            <summary>Stub type of NAudio.Midi.TrackSequenceNumberEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.#ctor(System.IO.BinaryReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubTrackSequenceNumberEvent.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.ChannelGet">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.ChannelSetInt32">
            <summary>Sets the stub of MidiEvent.set_Channel(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.Export(System.Int64@,System.IO.BinaryWriter)">
            <summary>Sets the stub of TrackSequenceNumberEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.ExportInt64RefBinaryWriter">
            <summary>Sets the stub of TrackSequenceNumberEvent.Export(Int64&amp; absoluteTime, BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.GetAsShortMessage">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.GetAsShortMessage01">
            <summary>Sets the stub of MidiEvent.GetAsShortMessage()</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTrackSequenceNumberEvent</summary>
        </member>
        <member name="M:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.ToString">
            <summary>Sets the stub of TrackSequenceNumberEvent.ToString()</summary>
        </member>
        <member name="F:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.ToString01">
            <summary>Sets the stub of TrackSequenceNumberEvent.ToString()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.Channel">
            <summary>Sets the stub of MidiEvent.get_Channel()</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Midi.Fakes.StubTrackSequenceNumberEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimBooleanMixerControl">
            <summary>Shim type of NAudio.Mixer.BooleanMixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimBooleanMixerControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimBooleanMixerControl.#ctor(NAudio.Mixer.BooleanMixerControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimBooleanMixerControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimBooleanMixerControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.GetDetailsIntPtr">
            <summary>Sets the shim of BooleanMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.ValueGet">
            <summary>Sets the shim of BooleanMixerControl.get_Value()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.ValueSetBoolean">
            <summary>Sets the shim of BooleanMixerControl.set_Value(Boolean value)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimBooleanMixerControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.AllInstances.GetDetailsIntPtr">
            <summary>Sets the shim of BooleanMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.AllInstances.ValueGet">
            <summary>Sets the shim of BooleanMixerControl.get_Value()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimBooleanMixerControl.AllInstances.ValueSetBoolean">
            <summary>Sets the shim of BooleanMixerControl.set_Value(Boolean value)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimCustomMixerControl">
            <summary>Shim type of NAudio.Mixer.CustomMixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimCustomMixerControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimCustomMixerControl.#ctor(NAudio.Mixer.CustomMixerControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimCustomMixerControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimCustomMixerControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimCustomMixerControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimCustomMixerControl.GetDetailsIntPtr">
            <summary>Sets the shim of CustomMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimCustomMixerControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimCustomMixerControl.AllInstances.GetDetailsIntPtr">
            <summary>Sets the shim of CustomMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimListTextMixerControl">
            <summary>Shim type of NAudio.Mixer.ListTextMixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimListTextMixerControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimListTextMixerControl.#ctor(NAudio.Mixer.ListTextMixerControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimListTextMixerControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimListTextMixerControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimListTextMixerControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimListTextMixerControl.GetDetailsIntPtr">
            <summary>Sets the shim of ListTextMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimListTextMixerControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimListTextMixerControl.AllInstances.GetDetailsIntPtr">
            <summary>Sets the shim of ListTextMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimMixer">
            <summary>Shim type of NAudio.Mixer.Mixer</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixer.#ctor(NAudio.Mixer.Mixer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.ConstructorInt32">
            <summary>Sets the shim of Mixer.Mixer(Int32 mixerIndex)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.DestinationCountGet">
            <summary>Sets the shim of Mixer.get_DestinationCount()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.DestinationsGet">
            <summary>Sets the shim of Mixer.get_Destinations()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.GetDestinationInt32">
            <summary>Sets the shim of Mixer.GetDestination(Int32 destinationIndex)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.ManufacturerGet">
            <summary>Sets the shim of Mixer.get_Manufacturer()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.MixersGet">
            <summary>Sets the shim of Mixer.get_Mixers()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.NameGet">
            <summary>Sets the shim of Mixer.get_Name()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.NumberOfDevicesGet">
            <summary>Sets the shim of Mixer.get_NumberOfDevices()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.ProductIDGet">
            <summary>Sets the shim of Mixer.get_ProductID()</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimMixer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.AllInstances.DestinationCountGet">
            <summary>Sets the shim of Mixer.get_DestinationCount()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.AllInstances.DestinationsGet">
            <summary>Sets the shim of Mixer.get_Destinations()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.AllInstances.GetDestinationInt32">
            <summary>Sets the shim of Mixer.GetDestination(Int32 destinationIndex)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.AllInstances.ManufacturerGet">
            <summary>Sets the shim of Mixer.get_Manufacturer()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.AllInstances.NameGet">
            <summary>Sets the shim of Mixer.get_Name()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixer.AllInstances.ProductIDGet">
            <summary>Sets the shim of Mixer.get_ProductID()</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimMixerControl">
            <summary>Shim type of NAudio.Mixer.MixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerControl.#ctor(NAudio.Mixer.MixerControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.Constructor">
            <summary>Sets the shim of MixerControl.MixerControl()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.ControlTypeGet">
            <summary>Sets the shim of MixerControl.get_ControlType()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.GetControlDetails">
            <summary>Sets the shim of MixerControl.GetControlDetails()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.GetMixerControlIntPtrInt32Int32Int32MixerFlags">
            <summary>Sets the shim of MixerControl.GetMixerControl(IntPtr mixerHandle, Int32 nLineID, Int32 controlId, Int32 nChannels, MixerFlags mixerFlags)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.GetMixerControlsIntPtrMixerLineMixerFlags">
            <summary>Sets the shim of MixerControl.GetMixerControls(IntPtr mixerHandle, MixerLine mixerLine, MixerFlags mixerHandleType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsBooleanGet">
            <summary>Sets the shim of MixerControl.get_IsBoolean()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsControlBooleanMixerControlType">
            <summary>Sets the shim of MixerControl.IsControlBoolean(MixerControlType controlType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsControlCustomMixerControlType">
            <summary>Sets the shim of MixerControl.IsControlCustom(MixerControlType controlType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsControlListTextMixerControlType">
            <summary>Sets the shim of MixerControl.IsControlListText(MixerControlType controlType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsControlSignedMixerControlType">
            <summary>Sets the shim of MixerControl.IsControlSigned(MixerControlType controlType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsControlUnsignedMixerControlType">
            <summary>Sets the shim of MixerControl.IsControlUnsigned(MixerControlType controlType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsCustomGet">
            <summary>Sets the shim of MixerControl.get_IsCustom()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsListTextGet">
            <summary>Sets the shim of MixerControl.get_IsListText()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsSignedGet">
            <summary>Sets the shim of MixerControl.get_IsSigned()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.IsUnsignedGet">
            <summary>Sets the shim of MixerControl.get_IsUnsigned()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.NameGet">
            <summary>Sets the shim of MixerControl.get_Name()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.ToString">
            <summary>Sets the shim of MixerControl.ToString()</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.ControlTypeGet">
            <summary>Sets the shim of MixerControl.get_ControlType()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.GetControlDetails">
            <summary>Sets the shim of MixerControl.GetControlDetails()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.IsBooleanGet">
            <summary>Sets the shim of MixerControl.get_IsBoolean()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.IsCustomGet">
            <summary>Sets the shim of MixerControl.get_IsCustom()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.IsListTextGet">
            <summary>Sets the shim of MixerControl.get_IsListText()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.IsSignedGet">
            <summary>Sets the shim of MixerControl.get_IsSigned()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.IsUnsignedGet">
            <summary>Sets the shim of MixerControl.get_IsUnsigned()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.NameGet">
            <summary>Sets the shim of MixerControl.get_Name()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerControl.AllInstances.ToString01">
            <summary>Sets the shim of MixerControl.ToString()</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimMixerLine">
            <summary>Shim type of NAudio.Mixer.MixerLine</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerLine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerLine.#ctor(NAudio.Mixer.MixerLine)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerLine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimMixerLine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ChannelsGet">
            <summary>Sets the shim of MixerLine.get_Channels()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ComponentTypeGet">
            <summary>Sets the shim of MixerLine.get_ComponentType()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ConstructorIntPtrInt32Int32MixerFlags">
            <summary>Sets the shim of MixerLine.MixerLine(IntPtr mixerHandle, Int32 destinationIndex, Int32 sourceIndex, MixerFlags mixerHandleType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ConstructorIntPtrInt32MixerFlags">
            <summary>Sets the shim of MixerLine.MixerLine(IntPtr mixerHandle, Int32 destinationIndex, MixerFlags mixerHandleType)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ControlsCountGet">
            <summary>Sets the shim of MixerLine.get_ControlsCount()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ControlsGet">
            <summary>Sets the shim of MixerLine.get_Controls()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.GetMixerIdForWaveInInt32">
            <summary>Sets the shim of MixerLine.GetMixerIdForWaveIn(Int32 waveInDevice)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.GetSourceInt32">
            <summary>Sets the shim of MixerLine.GetSource(Int32 sourceIndex)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.IsActiveGet">
            <summary>Sets the shim of MixerLine.get_IsActive()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.IsDisconnectedGet">
            <summary>Sets the shim of MixerLine.get_IsDisconnected()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.IsSourceGet">
            <summary>Sets the shim of MixerLine.get_IsSource()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.LineIdGet">
            <summary>Sets the shim of MixerLine.get_LineId()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.NameGet">
            <summary>Sets the shim of MixerLine.get_Name()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ShortNameGet">
            <summary>Sets the shim of MixerLine.get_ShortName()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.SourceCountGet">
            <summary>Sets the shim of MixerLine.get_SourceCount()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.SourcesGet">
            <summary>Sets the shim of MixerLine.get_Sources()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.TargetNameGet">
            <summary>Sets the shim of MixerLine.get_TargetName()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.ToString">
            <summary>Sets the shim of MixerLine.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.TypeDescriptionGet">
            <summary>Sets the shim of MixerLine.get_TypeDescription()</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.ChannelsGet">
            <summary>Sets the shim of MixerLine.get_Channels()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.ComponentTypeGet">
            <summary>Sets the shim of MixerLine.get_ComponentType()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.ControlsCountGet">
            <summary>Sets the shim of MixerLine.get_ControlsCount()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.ControlsGet">
            <summary>Sets the shim of MixerLine.get_Controls()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.GetSourceInt32">
            <summary>Sets the shim of MixerLine.GetSource(Int32 sourceIndex)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.IsActiveGet">
            <summary>Sets the shim of MixerLine.get_IsActive()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.IsDisconnectedGet">
            <summary>Sets the shim of MixerLine.get_IsDisconnected()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.IsSourceGet">
            <summary>Sets the shim of MixerLine.get_IsSource()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.LineIdGet">
            <summary>Sets the shim of MixerLine.get_LineId()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.NameGet">
            <summary>Sets the shim of MixerLine.get_Name()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.ShortNameGet">
            <summary>Sets the shim of MixerLine.get_ShortName()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.SourceCountGet">
            <summary>Sets the shim of MixerLine.get_SourceCount()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.SourcesGet">
            <summary>Sets the shim of MixerLine.get_Sources()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.TargetNameGet">
            <summary>Sets the shim of MixerLine.get_TargetName()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.ToString01">
            <summary>Sets the shim of MixerLine.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimMixerLine.AllInstances.TypeDescriptionGet">
            <summary>Sets the shim of MixerLine.get_TypeDescription()</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimSignedMixerControl">
            <summary>Shim type of NAudio.Mixer.SignedMixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimSignedMixerControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimSignedMixerControl.#ctor(NAudio.Mixer.SignedMixerControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimSignedMixerControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimSignedMixerControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.GetDetailsIntPtr">
            <summary>Sets the shim of SignedMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.MaxValueGet">
            <summary>Sets the shim of SignedMixerControl.get_MaxValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.MinValueGet">
            <summary>Sets the shim of SignedMixerControl.get_MinValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.PercentGet">
            <summary>Sets the shim of SignedMixerControl.get_Percent()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.PercentSetDouble">
            <summary>Sets the shim of SignedMixerControl.set_Percent(Double value)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.ToString">
            <summary>Sets the shim of SignedMixerControl.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.ValueGet">
            <summary>Sets the shim of SignedMixerControl.get_Value()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.ValueSetInt32">
            <summary>Sets the shim of SignedMixerControl.set_Value(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.GetDetailsIntPtr">
            <summary>Sets the shim of SignedMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.MaxValueGet">
            <summary>Sets the shim of SignedMixerControl.get_MaxValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.MinValueGet">
            <summary>Sets the shim of SignedMixerControl.get_MinValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.PercentGet">
            <summary>Sets the shim of SignedMixerControl.get_Percent()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.PercentSetDouble">
            <summary>Sets the shim of SignedMixerControl.set_Percent(Double value)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.ToString01">
            <summary>Sets the shim of SignedMixerControl.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.ValueGet">
            <summary>Sets the shim of SignedMixerControl.get_Value()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimSignedMixerControl.AllInstances.ValueSetInt32">
            <summary>Sets the shim of SignedMixerControl.set_Value(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimUnsignedMixerControl">
            <summary>Shim type of NAudio.Mixer.UnsignedMixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.#ctor(NAudio.Mixer.UnsignedMixerControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.GetDetailsIntPtr">
            <summary>Sets the shim of UnsignedMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.MaxValueGet">
            <summary>Sets the shim of UnsignedMixerControl.get_MaxValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.MinValueGet">
            <summary>Sets the shim of UnsignedMixerControl.get_MinValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.PercentGet">
            <summary>Sets the shim of UnsignedMixerControl.get_Percent()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.PercentSetDouble">
            <summary>Sets the shim of UnsignedMixerControl.set_Percent(Double value)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.ToString">
            <summary>Sets the shim of UnsignedMixerControl.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.ValueGet">
            <summary>Sets the shim of UnsignedMixerControl.get_Value()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.ValueSetUInt32">
            <summary>Sets the shim of UnsignedMixerControl.set_Value(UInt32 value)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.GetDetailsIntPtr">
            <summary>Sets the shim of UnsignedMixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.MaxValueGet">
            <summary>Sets the shim of UnsignedMixerControl.get_MaxValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.MinValueGet">
            <summary>Sets the shim of UnsignedMixerControl.get_MinValue()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.PercentGet">
            <summary>Sets the shim of UnsignedMixerControl.get_Percent()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.PercentSetDouble">
            <summary>Sets the shim of UnsignedMixerControl.set_Percent(Double value)</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.ToString01">
            <summary>Sets the shim of UnsignedMixerControl.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.ValueGet">
            <summary>Sets the shim of UnsignedMixerControl.get_Value()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.ShimUnsignedMixerControl.AllInstances.ValueSetUInt32">
            <summary>Sets the shim of UnsignedMixerControl.set_Value(UInt32 value)</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.StubMixer">
            <summary>Stub type of NAudio.Mixer.Mixer</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixer.InitializeStub">
            <summary>Initializes a new instance of type StubMixer</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.StubMixerControl">
            <summary>Stub type of NAudio.Mixer.MixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerControl.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerControl.GetDetails(System.IntPtr)">
            <summary>Sets the stub of MixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="F:NAudio.Mixer.Fakes.StubMixerControl.GetDetailsIntPtr">
            <summary>Sets the stub of MixerControl.GetDetails(IntPtr pDetails)</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerControl.InitializeStub">
            <summary>Initializes a new instance of type StubMixerControl</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerControl.ToString">
            <summary>Sets the stub of MixerControl.ToString()</summary>
        </member>
        <member name="F:NAudio.Mixer.Fakes.StubMixerControl.ToString01">
            <summary>Sets the stub of MixerControl.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixerControl.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixerControl.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixerControl.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Mixer.Fakes.StubMixerLine">
            <summary>Stub type of NAudio.Mixer.MixerLine</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerLine.#ctor(System.IntPtr,System.Int32,NAudio.Mixer.MixerFlags)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerLine.#ctor(System.IntPtr,System.Int32,System.Int32,NAudio.Mixer.MixerFlags)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerLine.InitializeStub">
            <summary>Initializes a new instance of type StubMixerLine</summary>
        </member>
        <member name="M:NAudio.Mixer.Fakes.StubMixerLine.ToString">
            <summary>Sets the stub of MixerLine.ToString()</summary>
        </member>
        <member name="F:NAudio.Mixer.Fakes.StubMixerLine.ToString01">
            <summary>Sets the stub of MixerLine.ToString()</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixerLine.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixerLine.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Mixer.Fakes.StubMixerLine.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimGenerator">
            <summary>Shim type of NAudio.SoundFont.Generator</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimGenerator.#ctor(NAudio.SoundFont.Generator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.Constructor">
            <summary>Sets the shim of Generator.Generator()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.GeneratorTypeGet">
            <summary>Sets the shim of Generator.get_GeneratorType()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.GeneratorTypeSetGeneratorEnum">
            <summary>Sets the shim of Generator.set_GeneratorType(GeneratorEnum value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.HighByteAmountGet">
            <summary>Sets the shim of Generator.get_HighByteAmount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.HighByteAmountSetByte">
            <summary>Sets the shim of Generator.set_HighByteAmount(Byte value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.InstrumentGet">
            <summary>Sets the shim of Generator.get_Instrument()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.InstrumentSetInstrument">
            <summary>Sets the shim of Generator.set_Instrument(Instrument value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.Int16AmountGet">
            <summary>Sets the shim of Generator.get_Int16Amount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.Int16AmountSetInt16">
            <summary>Sets the shim of Generator.set_Int16Amount(Int16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.LowByteAmountGet">
            <summary>Sets the shim of Generator.get_LowByteAmount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.LowByteAmountSetByte">
            <summary>Sets the shim of Generator.set_LowByteAmount(Byte value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.SampleHeaderGet">
            <summary>Sets the shim of Generator.get_SampleHeader()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.SampleHeaderSetSampleHeader">
            <summary>Sets the shim of Generator.set_SampleHeader(SampleHeader value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.ToString">
            <summary>Sets the shim of Generator.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.UInt16AmountGet">
            <summary>Sets the shim of Generator.get_UInt16Amount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.UInt16AmountSetUInt16">
            <summary>Sets the shim of Generator.set_UInt16Amount(UInt16 value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.GeneratorTypeGet">
            <summary>Sets the shim of Generator.get_GeneratorType()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.GeneratorTypeSetGeneratorEnum">
            <summary>Sets the shim of Generator.set_GeneratorType(GeneratorEnum value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.HighByteAmountGet">
            <summary>Sets the shim of Generator.get_HighByteAmount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.HighByteAmountSetByte">
            <summary>Sets the shim of Generator.set_HighByteAmount(Byte value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.InstrumentGet">
            <summary>Sets the shim of Generator.get_Instrument()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.InstrumentSetInstrument">
            <summary>Sets the shim of Generator.set_Instrument(Instrument value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.Int16AmountGet">
            <summary>Sets the shim of Generator.get_Int16Amount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.Int16AmountSetInt16">
            <summary>Sets the shim of Generator.set_Int16Amount(Int16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.LowByteAmountGet">
            <summary>Sets the shim of Generator.get_LowByteAmount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.LowByteAmountSetByte">
            <summary>Sets the shim of Generator.set_LowByteAmount(Byte value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.SampleHeaderGet">
            <summary>Sets the shim of Generator.get_SampleHeader()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.SampleHeaderSetSampleHeader">
            <summary>Sets the shim of Generator.set_SampleHeader(SampleHeader value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.ToString01">
            <summary>Sets the shim of Generator.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.UInt16AmountGet">
            <summary>Sets the shim of Generator.get_UInt16Amount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimGenerator.AllInstances.UInt16AmountSetUInt16">
            <summary>Sets the shim of Generator.set_UInt16Amount(UInt16 value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimInfoChunk">
            <summary>Shim type of NAudio.SoundFont.InfoChunk</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInfoChunk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInfoChunk.#ctor(NAudio.SoundFont.InfoChunk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInfoChunk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInfoChunk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AuthorGet">
            <summary>Sets the shim of InfoChunk.get_Author()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AuthorSetString">
            <summary>Sets the shim of InfoChunk.set_Author(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.BankNameGet">
            <summary>Sets the shim of InfoChunk.get_BankName()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.BankNameSetString">
            <summary>Sets the shim of InfoChunk.set_BankName(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.CommentsGet">
            <summary>Sets the shim of InfoChunk.get_Comments()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.CommentsSetString">
            <summary>Sets the shim of InfoChunk.set_Comments(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.CopyrightGet">
            <summary>Sets the shim of InfoChunk.get_Copyright()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.CopyrightSetString">
            <summary>Sets the shim of InfoChunk.set_Copyright(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.CreationDateGet">
            <summary>Sets the shim of InfoChunk.get_CreationDate()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.CreationDateSetString">
            <summary>Sets the shim of InfoChunk.set_CreationDate(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.DataROMGet">
            <summary>Sets the shim of InfoChunk.get_DataROM()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.DataROMSetString">
            <summary>Sets the shim of InfoChunk.set_DataROM(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.ROMVersionGet">
            <summary>Sets the shim of InfoChunk.get_ROMVersion()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.ROMVersionSetSFVersion">
            <summary>Sets the shim of InfoChunk.set_ROMVersion(SFVersion value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.SoundFontVersionGet">
            <summary>Sets the shim of InfoChunk.get_SoundFontVersion()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.TargetProductGet">
            <summary>Sets the shim of InfoChunk.get_TargetProduct()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.TargetProductSetString">
            <summary>Sets the shim of InfoChunk.set_TargetProduct(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.ToString">
            <summary>Sets the shim of InfoChunk.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.ToolsGet">
            <summary>Sets the shim of InfoChunk.get_Tools()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.ToolsSetString">
            <summary>Sets the shim of InfoChunk.set_Tools(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.WaveTableSoundEngineGet">
            <summary>Sets the shim of InfoChunk.get_WaveTableSoundEngine()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.WaveTableSoundEngineSetString">
            <summary>Sets the shim of InfoChunk.set_WaveTableSoundEngine(String value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.AuthorGet">
            <summary>Sets the shim of InfoChunk.get_Author()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.AuthorSetString">
            <summary>Sets the shim of InfoChunk.set_Author(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.BankNameGet">
            <summary>Sets the shim of InfoChunk.get_BankName()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.BankNameSetString">
            <summary>Sets the shim of InfoChunk.set_BankName(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.CommentsGet">
            <summary>Sets the shim of InfoChunk.get_Comments()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.CommentsSetString">
            <summary>Sets the shim of InfoChunk.set_Comments(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.CopyrightGet">
            <summary>Sets the shim of InfoChunk.get_Copyright()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.CopyrightSetString">
            <summary>Sets the shim of InfoChunk.set_Copyright(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.CreationDateGet">
            <summary>Sets the shim of InfoChunk.get_CreationDate()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.CreationDateSetString">
            <summary>Sets the shim of InfoChunk.set_CreationDate(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.DataROMGet">
            <summary>Sets the shim of InfoChunk.get_DataROM()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.DataROMSetString">
            <summary>Sets the shim of InfoChunk.set_DataROM(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.ROMVersionGet">
            <summary>Sets the shim of InfoChunk.get_ROMVersion()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.ROMVersionSetSFVersion">
            <summary>Sets the shim of InfoChunk.set_ROMVersion(SFVersion value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.SoundFontVersionGet">
            <summary>Sets the shim of InfoChunk.get_SoundFontVersion()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.TargetProductGet">
            <summary>Sets the shim of InfoChunk.get_TargetProduct()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.TargetProductSetString">
            <summary>Sets the shim of InfoChunk.set_TargetProduct(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.ToString01">
            <summary>Sets the shim of InfoChunk.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.ToolsGet">
            <summary>Sets the shim of InfoChunk.get_Tools()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.ToolsSetString">
            <summary>Sets the shim of InfoChunk.set_Tools(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.WaveTableSoundEngineGet">
            <summary>Sets the shim of InfoChunk.get_WaveTableSoundEngine()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInfoChunk.AllInstances.WaveTableSoundEngineSetString">
            <summary>Sets the shim of InfoChunk.set_WaveTableSoundEngine(String value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimInstrument">
            <summary>Shim type of NAudio.SoundFont.Instrument</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInstrument.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInstrument.#ctor(NAudio.SoundFont.Instrument)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInstrument.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimInstrument.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.Constructor">
            <summary>Sets the shim of Instrument.Instrument()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.NameGet">
            <summary>Sets the shim of Instrument.get_Name()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.NameSetString">
            <summary>Sets the shim of Instrument.set_Name(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.ToString">
            <summary>Sets the shim of Instrument.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.ZonesGet">
            <summary>Sets the shim of Instrument.get_Zones()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.ZonesSetZoneArray">
            <summary>Sets the shim of Instrument.set_Zones(Zone[] value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimInstrument.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.AllInstances.NameGet">
            <summary>Sets the shim of Instrument.get_Name()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.AllInstances.NameSetString">
            <summary>Sets the shim of Instrument.set_Name(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.AllInstances.ToString01">
            <summary>Sets the shim of Instrument.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.AllInstances.ZonesGet">
            <summary>Sets the shim of Instrument.get_Zones()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimInstrument.AllInstances.ZonesSetZoneArray">
            <summary>Sets the shim of Instrument.set_Zones(Zone[] value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimModulator">
            <summary>Shim type of NAudio.SoundFont.Modulator</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulator.#ctor(NAudio.SoundFont.Modulator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AmountGet">
            <summary>Sets the shim of Modulator.get_Amount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AmountSetInt16">
            <summary>Sets the shim of Modulator.set_Amount(Int16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.Constructor">
            <summary>Sets the shim of Modulator.Modulator()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.DestinationGeneratorGet">
            <summary>Sets the shim of Modulator.get_DestinationGenerator()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.DestinationGeneratorSetGeneratorEnum">
            <summary>Sets the shim of Modulator.set_DestinationGenerator(GeneratorEnum value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.SourceModulationAmountGet">
            <summary>Sets the shim of Modulator.get_SourceModulationAmount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.SourceModulationAmountSetModulatorType">
            <summary>Sets the shim of Modulator.set_SourceModulationAmount(ModulatorType value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.SourceModulationDataGet">
            <summary>Sets the shim of Modulator.get_SourceModulationData()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.SourceModulationDataSetModulatorType">
            <summary>Sets the shim of Modulator.set_SourceModulationData(ModulatorType value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.SourceTransformGet">
            <summary>Sets the shim of Modulator.get_SourceTransform()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.SourceTransformSetTransformEnum">
            <summary>Sets the shim of Modulator.set_SourceTransform(TransformEnum value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.ToString">
            <summary>Sets the shim of Modulator.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimModulator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.AmountGet">
            <summary>Sets the shim of Modulator.get_Amount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.AmountSetInt16">
            <summary>Sets the shim of Modulator.set_Amount(Int16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.DestinationGeneratorGet">
            <summary>Sets the shim of Modulator.get_DestinationGenerator()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.DestinationGeneratorSetGeneratorEnum">
            <summary>Sets the shim of Modulator.set_DestinationGenerator(GeneratorEnum value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.SourceModulationAmountGet">
            <summary>Sets the shim of Modulator.get_SourceModulationAmount()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.SourceModulationAmountSetModulatorType">
            <summary>Sets the shim of Modulator.set_SourceModulationAmount(ModulatorType value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.SourceModulationDataGet">
            <summary>Sets the shim of Modulator.get_SourceModulationData()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.SourceModulationDataSetModulatorType">
            <summary>Sets the shim of Modulator.set_SourceModulationData(ModulatorType value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.SourceTransformGet">
            <summary>Sets the shim of Modulator.get_SourceTransform()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.SourceTransformSetTransformEnum">
            <summary>Sets the shim of Modulator.set_SourceTransform(TransformEnum value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulator.AllInstances.ToString01">
            <summary>Sets the shim of Modulator.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimModulatorType">
            <summary>Shim type of NAudio.SoundFont.ModulatorType</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulatorType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulatorType.#ctor(NAudio.SoundFont.ModulatorType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulatorType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimModulatorType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulatorType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulatorType.ConstructorUInt16">
            <summary>Sets the shim of ModulatorType.ModulatorType(UInt16 raw)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulatorType.ToString">
            <summary>Sets the shim of ModulatorType.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimModulatorType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimModulatorType.AllInstances.ToString01">
            <summary>Sets the shim of ModulatorType.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimPreset">
            <summary>Shim type of NAudio.SoundFont.Preset</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPreset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPreset.#ctor(NAudio.SoundFont.Preset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPreset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPreset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.BankGet">
            <summary>Sets the shim of Preset.get_Bank()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.BankSetUInt16">
            <summary>Sets the shim of Preset.set_Bank(UInt16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.Constructor">
            <summary>Sets the shim of Preset.Preset()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.NameGet">
            <summary>Sets the shim of Preset.get_Name()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.NameSetString">
            <summary>Sets the shim of Preset.set_Name(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.PatchNumberGet">
            <summary>Sets the shim of Preset.get_PatchNumber()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.PatchNumberSetUInt16">
            <summary>Sets the shim of Preset.set_PatchNumber(UInt16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.ToString">
            <summary>Sets the shim of Preset.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.ZonesGet">
            <summary>Sets the shim of Preset.get_Zones()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.ZonesSetZoneArray">
            <summary>Sets the shim of Preset.set_Zones(Zone[] value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimPreset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.BankGet">
            <summary>Sets the shim of Preset.get_Bank()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.BankSetUInt16">
            <summary>Sets the shim of Preset.set_Bank(UInt16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.NameGet">
            <summary>Sets the shim of Preset.get_Name()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.NameSetString">
            <summary>Sets the shim of Preset.set_Name(String value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.PatchNumberGet">
            <summary>Sets the shim of Preset.get_PatchNumber()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.PatchNumberSetUInt16">
            <summary>Sets the shim of Preset.set_PatchNumber(UInt16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.ToString01">
            <summary>Sets the shim of Preset.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.ZonesGet">
            <summary>Sets the shim of Preset.get_Zones()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPreset.AllInstances.ZonesSetZoneArray">
            <summary>Sets the shim of Preset.set_Zones(Zone[] value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimPresetsChunk">
            <summary>Shim type of NAudio.SoundFont.PresetsChunk</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPresetsChunk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPresetsChunk.#ctor(NAudio.SoundFont.PresetsChunk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPresetsChunk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimPresetsChunk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.InstrumentsGet">
            <summary>Sets the shim of PresetsChunk.get_Instruments()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.PresetsGet">
            <summary>Sets the shim of PresetsChunk.get_Presets()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.SampleHeadersGet">
            <summary>Sets the shim of PresetsChunk.get_SampleHeaders()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.ToString">
            <summary>Sets the shim of PresetsChunk.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimPresetsChunk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.AllInstances.InstrumentsGet">
            <summary>Sets the shim of PresetsChunk.get_Instruments()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.AllInstances.PresetsGet">
            <summary>Sets the shim of PresetsChunk.get_Presets()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.AllInstances.SampleHeadersGet">
            <summary>Sets the shim of PresetsChunk.get_SampleHeaders()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimPresetsChunk.AllInstances.ToString01">
            <summary>Sets the shim of PresetsChunk.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimSFVersion">
            <summary>Shim type of NAudio.SoundFont.SFVersion</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSFVersion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSFVersion.#ctor(NAudio.SoundFont.SFVersion)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSFVersion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSFVersion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.Constructor">
            <summary>Sets the shim of SFVersion.SFVersion()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.MajorGet">
            <summary>Sets the shim of SFVersion.get_Major()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.MajorSetInt16">
            <summary>Sets the shim of SFVersion.set_Major(Int16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.MinorGet">
            <summary>Sets the shim of SFVersion.get_Minor()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.MinorSetInt16">
            <summary>Sets the shim of SFVersion.set_Minor(Int16 value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimSFVersion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.AllInstances.MajorGet">
            <summary>Sets the shim of SFVersion.get_Major()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.AllInstances.MajorSetInt16">
            <summary>Sets the shim of SFVersion.set_Major(Int16 value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.AllInstances.MinorGet">
            <summary>Sets the shim of SFVersion.get_Minor()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSFVersion.AllInstances.MinorSetInt16">
            <summary>Sets the shim of SFVersion.set_Minor(Int16 value)</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimSampleHeader">
            <summary>Shim type of NAudio.SoundFont.SampleHeader</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSampleHeader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSampleHeader.#ctor(NAudio.SoundFont.SampleHeader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSampleHeader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSampleHeader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSampleHeader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSampleHeader.Constructor">
            <summary>Sets the shim of SampleHeader.SampleHeader()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSampleHeader.ToString">
            <summary>Sets the shim of SampleHeader.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimSampleHeader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSampleHeader.AllInstances.ToString01">
            <summary>Sets the shim of SampleHeader.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimSoundFont">
            <summary>Shim type of NAudio.SoundFont.SoundFont</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSoundFont.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSoundFont.#ctor(NAudio.SoundFont.SoundFont)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSoundFont.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimSoundFont.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.ConstructorStream">
            <summary>Sets the shim of SoundFont.SoundFont(Stream sfFile)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.ConstructorString">
            <summary>Sets the shim of SoundFont.SoundFont(String fileName)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.FileInfoGet">
            <summary>Sets the shim of SoundFont.get_FileInfo()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.InstrumentsGet">
            <summary>Sets the shim of SoundFont.get_Instruments()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.PresetsGet">
            <summary>Sets the shim of SoundFont.get_Presets()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.SampleDataGet">
            <summary>Sets the shim of SoundFont.get_SampleData()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.SampleHeadersGet">
            <summary>Sets the shim of SoundFont.get_SampleHeaders()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.ToString">
            <summary>Sets the shim of SoundFont.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances.FileInfoGet">
            <summary>Sets the shim of SoundFont.get_FileInfo()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances.InstrumentsGet">
            <summary>Sets the shim of SoundFont.get_Instruments()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances.PresetsGet">
            <summary>Sets the shim of SoundFont.get_Presets()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances.SampleDataGet">
            <summary>Sets the shim of SoundFont.get_SampleData()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances.SampleHeadersGet">
            <summary>Sets the shim of SoundFont.get_SampleHeaders()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimSoundFont.AllInstances.ToString01">
            <summary>Sets the shim of SoundFont.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimZone">
            <summary>Shim type of NAudio.SoundFont.Zone</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimZone.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimZone.#ctor(NAudio.SoundFont.Zone)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimZone.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.ShimZone.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.Constructor">
            <summary>Sets the shim of Zone.Zone()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.GeneratorsGet">
            <summary>Sets the shim of Zone.get_Generators()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.GeneratorsSetGeneratorArray">
            <summary>Sets the shim of Zone.set_Generators(Generator[] value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.ModulatorsGet">
            <summary>Sets the shim of Zone.get_Modulators()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.ModulatorsSetModulatorArray">
            <summary>Sets the shim of Zone.set_Modulators(Modulator[] value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.ToString">
            <summary>Sets the shim of Zone.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.ShimZone.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.AllInstances.GeneratorsGet">
            <summary>Sets the shim of Zone.get_Generators()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.AllInstances.GeneratorsSetGeneratorArray">
            <summary>Sets the shim of Zone.set_Generators(Generator[] value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.AllInstances.ModulatorsGet">
            <summary>Sets the shim of Zone.get_Modulators()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.AllInstances.ModulatorsSetModulatorArray">
            <summary>Sets the shim of Zone.set_Modulators(Modulator[] value)</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.ShimZone.AllInstances.ToString01">
            <summary>Sets the shim of Zone.ToString()</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubGenerator">
            <summary>Stub type of NAudio.SoundFont.Generator</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubGenerator</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubGenerator.ToString">
            <summary>Sets the stub of Generator.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubGenerator.ToString01">
            <summary>Sets the stub of Generator.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubInstrument">
            <summary>Stub type of NAudio.SoundFont.Instrument</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubInstrument.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubInstrument.InitializeStub">
            <summary>Initializes a new instance of type StubInstrument</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubInstrument.ToString">
            <summary>Sets the stub of Instrument.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubInstrument.ToString01">
            <summary>Sets the stub of Instrument.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubInstrument.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubInstrument.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubInstrument.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubModulator">
            <summary>Stub type of NAudio.SoundFont.Modulator</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubModulator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubModulator.InitializeStub">
            <summary>Initializes a new instance of type StubModulator</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubModulator.ToString">
            <summary>Sets the stub of Modulator.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubModulator.ToString01">
            <summary>Sets the stub of Modulator.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubModulator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubModulator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubModulator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubPreset">
            <summary>Stub type of NAudio.SoundFont.Preset</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubPreset.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubPreset.InitializeStub">
            <summary>Initializes a new instance of type StubPreset</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubPreset.ToString">
            <summary>Sets the stub of Preset.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubPreset.ToString01">
            <summary>Sets the stub of Preset.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubPreset.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubPreset.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubPreset.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubSFVersion">
            <summary>Stub type of NAudio.SoundFont.SFVersion</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSFVersion.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSFVersion.InitializeStub">
            <summary>Initializes a new instance of type StubSFVersion</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSFVersion.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSFVersion.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSFVersion.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubSampleHeader">
            <summary>Stub type of NAudio.SoundFont.SampleHeader</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSampleHeader.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSampleHeader.InitializeStub">
            <summary>Initializes a new instance of type StubSampleHeader</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSampleHeader.ToString">
            <summary>Sets the stub of SampleHeader.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubSampleHeader.ToString01">
            <summary>Sets the stub of SampleHeader.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSampleHeader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSampleHeader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSampleHeader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubSoundFont">
            <summary>Stub type of NAudio.SoundFont.SoundFont</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSoundFont.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSoundFont.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSoundFont.InitializeStub">
            <summary>Initializes a new instance of type StubSoundFont</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubSoundFont.ToString">
            <summary>Sets the stub of SoundFont.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubSoundFont.ToString01">
            <summary>Sets the stub of SoundFont.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSoundFont.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSoundFont.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubSoundFont.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.SoundFont.Fakes.StubZone">
            <summary>Stub type of NAudio.SoundFont.Zone</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubZone.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubZone.InitializeStub">
            <summary>Initializes a new instance of type StubZone</summary>
        </member>
        <member name="M:NAudio.SoundFont.Fakes.StubZone.ToString">
            <summary>Sets the stub of Zone.ToString()</summary>
        </member>
        <member name="F:NAudio.SoundFont.Fakes.StubZone.ToString01">
            <summary>Sets the stub of Zone.ToString()</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubZone.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubZone.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.SoundFont.Fakes.StubZone.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimBufferHelpers">
            <summary>Shim type of NAudio.Utils.BufferHelpers</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimBufferHelpers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimBufferHelpers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimBufferHelpers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimBufferHelpers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimBufferHelpers.EnsureByteArrayInt32">
            <summary>Sets the shim of BufferHelpers.Ensure(Byte[] buffer, Int32 bytesRequired)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimBufferHelpers.EnsureSingleArrayInt32">
            <summary>Sets the shim of BufferHelpers.Ensure(Single[] buffer, Int32 samplesRequired)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimByteArrayExtensions">
            <summary>Shim type of NAudio.Utils.ByteArrayExtensions</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteArrayExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteArrayExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteArrayExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteArrayExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteArrayExtensions.ConcatByteArrayArray">
            <summary>Sets the shim of ByteArrayExtensions.Concat(Byte[][] byteArrays)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteArrayExtensions.DecodeAsStringByteArrayInt32Int32Encoding">
            <summary>Sets the shim of ByteArrayExtensions.DecodeAsString(Byte[] buffer, Int32 offset, Int32 length, Encoding encoding)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteArrayExtensions.DescribeAsHexByteArrayStringInt32">
            <summary>Sets the shim of ByteArrayExtensions.DescribeAsHex(Byte[] buffer, String separator, Int32 bytesPerLine)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteArrayExtensions.IsEntirelyNullByteArray">
            <summary>Sets the shim of ByteArrayExtensions.IsEntirelyNull(Byte[] buffer)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimByteEncoding">
            <summary>Shim type of NAudio.Utils.ByteEncoding</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteEncoding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteEncoding.#ctor(NAudio.Utils.ByteEncoding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteEncoding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteEncoding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimByteEncoding.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.Constructor">
            <summary>Sets the shim of ByteEncoding.ByteEncoding()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.GetByteCountCharArrayInt32Int32">
            <summary>Sets the shim of ByteEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of ByteEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.GetCharCountByteArrayInt32Int32">
            <summary>Sets the shim of ByteEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Sets the shim of ByteEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.GetMaxByteCountInt32">
            <summary>Sets the shim of ByteEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.GetMaxCharCountInt32">
            <summary>Sets the shim of ByteEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.StaticConstructor">
            <summary>Sets the shim of ByteEncoding.ByteEncoding()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances.GetByteCountCharArrayInt32Int32">
            <summary>Sets the shim of ByteEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Sets the shim of ByteEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances.GetCharCountByteArrayInt32Int32">
            <summary>Sets the shim of ByteEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Sets the shim of ByteEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances.GetMaxByteCountInt32">
            <summary>Sets the shim of ByteEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimByteEncoding.AllInstances.GetMaxCharCountInt32">
            <summary>Sets the shim of ByteEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimChunkIdentifier">
            <summary>Shim type of NAudio.Utils.ChunkIdentifier</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimChunkIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimChunkIdentifier.#ctor(NAudio.Utils.ChunkIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimChunkIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimChunkIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimChunkIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimChunkIdentifier.ChunkIdentifierToInt32String">
            <summary>Sets the shim of ChunkIdentifier.ChunkIdentifierToInt32(String s)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimChunkIdentifier.Constructor">
            <summary>Sets the shim of ChunkIdentifier.ChunkIdentifier()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimChunkIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimCircularBuffer">
            <summary>Shim type of NAudio.Utils.CircularBuffer</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimCircularBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimCircularBuffer.#ctor(NAudio.Utils.CircularBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimCircularBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimCircularBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AdvanceInt32">
            <summary>Sets the shim of CircularBuffer.Advance(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.ConstructorInt32">
            <summary>Sets the shim of CircularBuffer.CircularBuffer(Int32 size)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.CountGet">
            <summary>Sets the shim of CircularBuffer.get_Count()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.MaxLengthGet">
            <summary>Sets the shim of CircularBuffer.get_MaxLength()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.ReadByteArrayInt32Int32">
            <summary>Sets the shim of CircularBuffer.Read(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.Reset">
            <summary>Sets the shim of CircularBuffer.Reset()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.WriteByteArrayInt32Int32">
            <summary>Sets the shim of CircularBuffer.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances.AdvanceInt32">
            <summary>Sets the shim of CircularBuffer.Advance(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances.CountGet">
            <summary>Sets the shim of CircularBuffer.get_Count()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances.MaxLengthGet">
            <summary>Sets the shim of CircularBuffer.get_MaxLength()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of CircularBuffer.Read(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances.Reset">
            <summary>Sets the shim of CircularBuffer.Reset()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimCircularBuffer.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of CircularBuffer.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimDecibels">
            <summary>Shim type of NAudio.Utils.Decibels</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimDecibels.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimDecibels.#ctor(NAudio.Utils.Decibels)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimDecibels.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimDecibels.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimDecibels.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimDecibels.Constructor">
            <summary>Sets the shim of Decibels.Decibels()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimDecibels.DecibelsToLinearDouble">
            <summary>Sets the shim of Decibels.DecibelsToLinear(Double dB)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimDecibels.LinearToDecibelsDouble">
            <summary>Sets the shim of Decibels.LinearToDecibels(Double lin)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimDecibels.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute">
            <summary>Shim type of NAudio.Utils.FieldDescriptionAttribute</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.#ctor(NAudio.Utils.FieldDescriptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.ConstructorString">
            <summary>Sets the shim of FieldDescriptionAttribute.FieldDescriptionAttribute(String description)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.DescriptionGet">
            <summary>Sets the shim of FieldDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.DescriptionSetString">
            <summary>Sets the shim of FieldDescriptionAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.ToString">
            <summary>Sets the shim of FieldDescriptionAttribute.ToString()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of FieldDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of FieldDescriptionAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionAttribute.AllInstances.ToString01">
            <summary>Sets the shim of FieldDescriptionAttribute.ToString()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimFieldDescriptionHelper">
            <summary>Shim type of NAudio.Utils.FieldDescriptionHelper</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimFieldDescriptionHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimFieldDescriptionHelper.DescribeTypeGuid">
            <summary>Sets the shim of FieldDescriptionHelper.Describe(Type t, Guid guid)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimHResult">
            <summary>Shim type of NAudio.Utils.HResult</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimHResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimHResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimHResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimHResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimHResult.GetHResultCOMException">
            <summary>Sets the shim of HResult.GetHResult(COMException exception)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimHResult.MAKE_HRESULTInt32Int32Int32">
            <summary>Sets the shim of HResult.MAKE_HRESULT(Int32 sev, Int32 fac, Int32 code)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimIEEE">
            <summary>Shim type of NAudio.Utils.IEEE</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIEEE.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIEEE.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIEEE.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.ConvertFromIeeeExtendedByteArray">
            <summary>Sets the shim of IEEE.ConvertFromIeeeExtended(Byte[] bytes)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.ConvertToIeeeExtendedDouble">
            <summary>Sets the shim of IEEE.ConvertToIeeeExtended(Double num)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.FloatToUnsignedDouble">
            <summary>Sets the shim of IEEE.FloatToUnsigned(Double f)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.UnsignedToFloatUInt64">
            <summary>Sets the shim of IEEE.UnsignedToFloat(UInt64 u)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.frexpDoubleInt32Out">
            <summary>Sets the shim of IEEE.frexp(Double x, Int32&amp; exp)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIEEE.ldexpDoubleInt32">
            <summary>Sets the shim of IEEE.ldexp(Double x, Int32 exp)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimIgnoreDisposeStream">
            <summary>Shim type of NAudio.Utils.IgnoreDisposeStream</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.#ctor(NAudio.Utils.IgnoreDisposeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.CanReadGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.CanSeekGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.CanWriteGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.ConstructorStream">
            <summary>Sets the shim of IgnoreDisposeStream.IgnoreDisposeStream(Stream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.DisposeBoolean">
            <summary>Sets the shim of IgnoreDisposeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.Flush">
            <summary>Sets the shim of IgnoreDisposeStream.Flush()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.IgnoreDisposeGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_IgnoreDispose()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.IgnoreDisposeSetBoolean">
            <summary>Sets the shim of IgnoreDisposeStream.set_IgnoreDispose(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.LengthGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.PositionGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.PositionSetInt64">
            <summary>Sets the shim of IgnoreDisposeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of IgnoreDisposeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of IgnoreDisposeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.SetLengthInt64">
            <summary>Sets the shim of IgnoreDisposeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.SourceStreamGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_SourceStream()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.SourceStreamSetStream">
            <summary>Sets the shim of IgnoreDisposeStream.set_SourceStream(Stream value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of IgnoreDisposeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.CanReadGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of IgnoreDisposeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.Flush">
            <summary>Sets the shim of IgnoreDisposeStream.Flush()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.IgnoreDisposeGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_IgnoreDispose()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.IgnoreDisposeSetBoolean">
            <summary>Sets the shim of IgnoreDisposeStream.set_IgnoreDispose(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.LengthGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.PositionGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of IgnoreDisposeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of IgnoreDisposeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of IgnoreDisposeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of IgnoreDisposeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.SourceStreamGet">
            <summary>Sets the shim of IgnoreDisposeStream.get_SourceStream()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.SourceStreamSetStream">
            <summary>Sets the shim of IgnoreDisposeStream.set_SourceStream(Stream value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimIgnoreDisposeStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of IgnoreDisposeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimProgressLog">
            <summary>Shim type of NAudio.Utils.ProgressLog</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.#ctor(NAudio.Utils.ProgressLog)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.Windows.Forms.IContainerControl)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.Windows.Forms.IDropTarget)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.Windows.Forms.IWin32Window)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimProgressLog.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.ClearLog">
            <summary>Sets the shim of ProgressLog.ClearLog()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.Constructor">
            <summary>Sets the shim of ProgressLog.ProgressLog()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.DisposeBoolean">
            <summary>Sets the shim of ProgressLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.InitializeComponent">
            <summary>Sets the shim of ProgressLog.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.LogMessageColorString">
            <summary>Sets the shim of ProgressLog.LogMessage(Color color, String message)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.TextGet">
            <summary>Sets the shim of ProgressLog.get_Text()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimProgressLog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.AllInstances.ClearLog">
            <summary>Sets the shim of ProgressLog.ClearLog()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ProgressLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.AllInstances.InitializeComponent">
            <summary>Sets the shim of ProgressLog.InitializeComponent()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.AllInstances.LogMessageColorString">
            <summary>Sets the shim of ProgressLog.LogMessage(Color color, String message)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimProgressLog.AllInstances.TextGet">
            <summary>Sets the shim of ProgressLog.get_Text()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.ShimWavePositionExtensions">
            <summary>Shim type of NAudio.Utils.WavePositionExtensions</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimWavePositionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimWavePositionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.ShimWavePositionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimWavePositionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.ShimWavePositionExtensions.GetPositionTimeSpanIWavePosition">
            <summary>Sets the shim of WavePositionExtensions.GetPositionTimeSpan(IWavePosition this)</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.StubChunkIdentifier">
            <summary>Stub type of NAudio.Utils.ChunkIdentifier</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubChunkIdentifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubChunkIdentifier.InitializeStub">
            <summary>Initializes a new instance of type StubChunkIdentifier</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubChunkIdentifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubChunkIdentifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubChunkIdentifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.StubCircularBuffer">
            <summary>Stub type of NAudio.Utils.CircularBuffer</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubCircularBuffer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubCircularBuffer.InitializeStub">
            <summary>Initializes a new instance of type StubCircularBuffer</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubCircularBuffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubCircularBuffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubCircularBuffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.StubDecibels">
            <summary>Stub type of NAudio.Utils.Decibels</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubDecibels.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubDecibels.InitializeStub">
            <summary>Initializes a new instance of type StubDecibels</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubDecibels.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubDecibels.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubDecibels.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.StubFieldDescriptionAttribute">
            <summary>Stub type of NAudio.Utils.FieldDescriptionAttribute</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubFieldDescriptionAttribute</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.ToString">
            <summary>Sets the stub of FieldDescriptionAttribute.ToString()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.ToString01">
            <summary>Sets the stub of FieldDescriptionAttribute.ToString()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubFieldDescriptionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.StubIgnoreDisposeStream">
            <summary>Stub type of NAudio.Utils.IgnoreDisposeStream</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubIgnoreDisposeStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubIgnoreDisposeStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubIgnoreDisposeStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanReadGet">
            <summary>Sets the stub of IgnoreDisposeStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanSeekGet">
            <summary>Sets the stub of IgnoreDisposeStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanWriteGet">
            <summary>Sets the stub of IgnoreDisposeStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Dispose(System.Boolean)">
            <summary>Sets the stub of IgnoreDisposeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.DisposeBoolean">
            <summary>Sets the stub of IgnoreDisposeStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Flush">
            <summary>Sets the stub of IgnoreDisposeStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Flush01">
            <summary>Sets the stub of IgnoreDisposeStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.InitializeStub">
            <summary>Initializes a new instance of type StubIgnoreDisposeStream</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.LengthGet">
            <summary>Sets the stub of IgnoreDisposeStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.PositionGet">
            <summary>Sets the stub of IgnoreDisposeStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.PositionSetInt64">
            <summary>Sets the stub of IgnoreDisposeStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IgnoreDisposeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of IgnoreDisposeStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of IgnoreDisposeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of IgnoreDisposeStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.SetLength(System.Int64)">
            <summary>Sets the stub of IgnoreDisposeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.SetLengthInt64">
            <summary>Sets the stub of IgnoreDisposeStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IgnoreDisposeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubIgnoreDisposeStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of IgnoreDisposeStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubIgnoreDisposeStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanRead">
            <summary>Sets the stub of IgnoreDisposeStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanSeek">
            <summary>Sets the stub of IgnoreDisposeStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.CanWrite">
            <summary>Sets the stub of IgnoreDisposeStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Length">
            <summary>Sets the stub of IgnoreDisposeStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.Position">
            <summary>Sets the stub of IgnoreDisposeStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubIgnoreDisposeStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Utils.Fakes.StubProgressLog">
            <summary>Stub type of NAudio.Utils.ProgressLog</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AdjustFormScrollbars(System.Boolean)">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AdjustFormScrollbarsBoolean">
            <summary>Sets the stub of ContainerControl.AdjustFormScrollbars(Boolean displayScrollbars)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AllowDropGet">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AllowDropSetBoolean">
            <summary>Sets the stub of Control.set_AllowDrop(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AnchorGet">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AnchorSetAnchorStyles">
            <summary>Sets the stub of Control.set_Anchor(AnchorStyles value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToAllowDrop">
            <summary>Attaches delegates to emulate StubProgressLog.AllowDrop as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToAnchor">
            <summary>Attaches delegates to emulate StubProgressLog.Anchor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToAutoScroll">
            <summary>Attaches delegates to emulate StubProgressLog.AutoScroll as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToAutoScrollOffset">
            <summary>Attaches delegates to emulate StubProgressLog.AutoScrollOffset as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToAutoSize">
            <summary>Attaches delegates to emulate StubProgressLog.AutoSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToAutoValidate">
            <summary>Attaches delegates to emulate StubProgressLog.AutoValidate as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToBackColor">
            <summary>Attaches delegates to emulate StubProgressLog.BackColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToBackgroundImage">
            <summary>Attaches delegates to emulate StubProgressLog.BackgroundImage as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToBackgroundImageLayout">
            <summary>Attaches delegates to emulate StubProgressLog.BackgroundImageLayout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToBindingContext">
            <summary>Attaches delegates to emulate StubProgressLog.BindingContext as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToContextMenu">
            <summary>Attaches delegates to emulate StubProgressLog.ContextMenu as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToContextMenuStrip">
            <summary>Attaches delegates to emulate StubProgressLog.ContextMenuStrip as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToCursor">
            <summary>Attaches delegates to emulate StubProgressLog.Cursor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToDock">
            <summary>Attaches delegates to emulate StubProgressLog.Dock as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToDoubleBuffered">
            <summary>Attaches delegates to emulate StubProgressLog.DoubleBuffered as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToFont">
            <summary>Attaches delegates to emulate StubProgressLog.Font as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToForeColor">
            <summary>Attaches delegates to emulate StubProgressLog.ForeColor as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToImeModeBase">
            <summary>Attaches delegates to emulate StubProgressLog.ImeModeBase as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToMaximumSize">
            <summary>Attaches delegates to emulate StubProgressLog.MaximumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToMinimumSize">
            <summary>Attaches delegates to emulate StubProgressLog.MinimumSize as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToRightToLeft">
            <summary>Attaches delegates to emulate StubProgressLog.RightToLeft as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.AttachBackingFieldToSite">
            <summary>Attaches delegates to emulate StubProgressLog.Site as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoScrollGet">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoScrollOffsetGet">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoScrollOffsetSetPoint">
            <summary>Sets the stub of Control.set_AutoScrollOffset(Point value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoScrollSetBoolean">
            <summary>Sets the stub of ScrollableControl.set_AutoScroll(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoSizeGet">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoSizeSetBoolean">
            <summary>Sets the stub of UserControl.set_AutoSize(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoValidateGet">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.AutoValidateSetAutoValidate">
            <summary>Sets the stub of UserControl.set_AutoValidate(AutoValidate value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BackColorGet">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BackColorSetColor">
            <summary>Sets the stub of Control.set_BackColor(Color value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BackgroundImageGet">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BackgroundImageLayoutGet">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BackgroundImageLayoutSetImageLayout">
            <summary>Sets the stub of Control.set_BackgroundImageLayout(ImageLayout value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BackgroundImageSetImage">
            <summary>Sets the stub of Control.set_BackgroundImage(Image value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BindingContextGet">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.BindingContextSetBindingContext">
            <summary>Sets the stub of ContainerControl.set_BindingContext(BindingContext value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CanEnableImeGet">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CanRaiseEventsGet">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ContextMenuGet">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ContextMenuSetContextMenu">
            <summary>Sets the stub of Control.set_ContextMenu(ContextMenu value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ContextMenuStripGet">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ContextMenuStripSetContextMenuStrip">
            <summary>Sets the stub of Control.set_ContextMenuStrip(ContextMenuStrip value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.CreateAccessibilityInstance">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CreateAccessibilityInstance01">
            <summary>Sets the stub of Control.CreateAccessibilityInstance()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.CreateControlsInstance">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CreateControlsInstance01">
            <summary>Sets the stub of Control.CreateControlsInstance()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.CreateHandle">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CreateHandle01">
            <summary>Sets the stub of Control.CreateHandle()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CreateParamsGet">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CursorGet">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.CursorSetCursor">
            <summary>Sets the stub of Control.set_Cursor(Cursor value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.DefWndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefWndProcMessageRef">
            <summary>Sets the stub of Control.DefWndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultCursorGet">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultImeModeGet">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultMarginGet">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultMaximumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultMinimumSizeGet">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultPaddingGet">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DefaultSizeGet">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.DestroyHandle">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DestroyHandle01">
            <summary>Sets the stub of Control.DestroyHandle()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DisplayRectangleGet">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.Dispose(System.Boolean)">
            <summary>Sets the stub of ProgressLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DisposeBoolean">
            <summary>Sets the stub of ProgressLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DockGet">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DockSetDockStyle">
            <summary>Sets the stub of Control.set_Dock(DockStyle value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DoubleBufferedGet">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.DoubleBufferedSetBoolean">
            <summary>Sets the stub of Control.set_DoubleBuffered(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.FocusedGet">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.FontGet">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.FontSetFont">
            <summary>Sets the stub of Control.set_Font(Font value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ForeColorGet">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ForeColorSetColor">
            <summary>Sets the stub of Control.set_ForeColor(Color value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.GetAccessibilityObjectById(System.Int32)">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.GetAccessibilityObjectByIdInt32">
            <summary>Sets the stub of Control.GetAccessibilityObjectById(Int32 objectId)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.GetPreferredSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.GetPreferredSizeSize">
            <summary>Sets the stub of Control.GetPreferredSize(Size proposedSize)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>Sets the stub of Control.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.GetService(System.Type)">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.GetServiceType">
            <summary>Sets the stub of Component.GetService(Type service)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ImeModeBaseGet">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ImeModeBaseSetImeMode">
            <summary>Sets the stub of Control.set_ImeModeBase(ImeMode value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.InitLayout">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.InitLayout01">
            <summary>Sets the stub of Control.InitLayout()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.InitializeStub">
            <summary>Initializes a new instance of type StubProgressLog</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.IsInputChar(System.Char)">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.IsInputCharChar">
            <summary>Sets the stub of Control.IsInputChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.IsInputKeyKeys">
            <summary>Sets the stub of Control.IsInputKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.LayoutEngineGet">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.MaximumSizeGet">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.MaximumSizeSetSize">
            <summary>Sets the stub of Control.set_MaximumSize(Size value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.MinimumSizeGet">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.MinimumSizeSetSize">
            <summary>Sets the stub of Control.set_MinimumSize(Size value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.NotifyInvalidateRectangle">
            <summary>Sets the stub of Control.NotifyInvalidate(Rectangle invalidatedArea)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnAutoSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnAutoSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnAutoSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnAutoValidateChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnAutoValidateChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnAutoValidateChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnBackgroundImageLayoutChangedEventArgs">
            <summary>Sets the stub of Control.OnBackgroundImageLayoutChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnCausesValidationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnCausesValidationChangedEventArgs">
            <summary>Sets the stub of Control.OnCausesValidationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnChangeUICuesUICuesEventArgs">
            <summary>Sets the stub of Control.OnChangeUICues(UICuesEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnClickEventArgs">
            <summary>Sets the stub of Control.OnClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnClientSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnClientSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnClientSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnContextMenuChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnContextMenuChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnContextMenuStripChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnContextMenuStripChangedEventArgs">
            <summary>Sets the stub of Control.OnContextMenuStripChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnControlAddedControlEventArgs">
            <summary>Sets the stub of Control.OnControlAdded(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnControlRemovedControlEventArgs">
            <summary>Sets the stub of Control.OnControlRemoved(ControlEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnCreateControl">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnCreateControl01">
            <summary>Sets the stub of UserControl.OnCreateControl()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnDockChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnDockChangedEventArgs">
            <summary>Sets the stub of Control.OnDockChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnDoubleClick(System.EventArgs)">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnDoubleClickEventArgs">
            <summary>Sets the stub of Control.OnDoubleClick(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnDragDropDragEventArgs">
            <summary>Sets the stub of Control.OnDragDrop(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnDragEnterDragEventArgs">
            <summary>Sets the stub of Control.OnDragEnter(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnDragLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnDragLeaveEventArgs">
            <summary>Sets the stub of Control.OnDragLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnDragOverDragEventArgs">
            <summary>Sets the stub of Control.OnDragOver(DragEventArgs drgevent)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnEnterEventArgs">
            <summary>Sets the stub of Control.OnEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnFontChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnFontChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>Sets the stub of Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnGotFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnGotFocusEventArgs">
            <summary>Sets the stub of Control.OnGotFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnHandleCreated(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnHandleCreatedEventArgs">
            <summary>Sets the stub of Control.OnHandleCreated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnHandleDestroyed(System.EventArgs)">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnHandleDestroyedEventArgs">
            <summary>Sets the stub of Control.OnHandleDestroyed(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnHelpRequestedHelpEventArgs">
            <summary>Sets the stub of Control.OnHelpRequested(HelpEventArgs hevent)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnImeModeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnImeModeChangedEventArgs">
            <summary>Sets the stub of Control.OnImeModeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnInvalidatedInvalidateEventArgs">
            <summary>Sets the stub of Control.OnInvalidated(InvalidateEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnKeyDownKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyDown(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnKeyPressKeyPressEventArgs">
            <summary>Sets the stub of Control.OnKeyPress(KeyPressEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnKeyUpKeyEventArgs">
            <summary>Sets the stub of Control.OnKeyUp(KeyEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnLayoutLayoutEventArgs">
            <summary>Sets the stub of ContainerControl.OnLayout(LayoutEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnLeaveEventArgs">
            <summary>Sets the stub of Control.OnLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnLoad(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnLoadEventArgs">
            <summary>Sets the stub of UserControl.OnLoad(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnLocationChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnLocationChangedEventArgs">
            <summary>Sets the stub of Control.OnLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnLostFocus(System.EventArgs)">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnLostFocusEventArgs">
            <summary>Sets the stub of Control.OnLostFocus(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMarginChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMarginChangedEventArgs">
            <summary>Sets the stub of Control.OnMarginChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseCaptureChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseCaptureChangedEventArgs">
            <summary>Sets the stub of Control.OnMouseCaptureChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseDoubleClickMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseDoubleClick(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of UserControl.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseDownMouseEventArgs">
            <summary>Sets the stub of UserControl.OnMouseDown(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseEnter(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseEnterEventArgs">
            <summary>Sets the stub of Control.OnMouseEnter(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseHover(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseHoverEventArgs">
            <summary>Sets the stub of Control.OnMouseHover(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseLeave(System.EventArgs)">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseLeaveEventArgs">
            <summary>Sets the stub of Control.OnMouseLeave(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseMoveMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseMove(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseUpMouseEventArgs">
            <summary>Sets the stub of Control.OnMouseUp(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMouseWheelMouseEventArgs">
            <summary>Sets the stub of ScrollableControl.OnMouseWheel(MouseEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnMove(System.EventArgs)">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnMoveEventArgs">
            <summary>Sets the stub of Control.OnMove(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnNotifyMessageMessage">
            <summary>Sets the stub of Control.OnNotifyMessage(Message m)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnPaddingChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnPaddingChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaddingChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnPaintBackgroundPaintEventArgs">
            <summary>Sets the stub of ScrollableControl.OnPaintBackground(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnPaintPaintEventArgs">
            <summary>Sets the stub of Control.OnPaint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentBackColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentBackColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentBackgroundImageChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBackgroundImageChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentBindingContextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentBindingContextChangedEventArgs">
            <summary>Sets the stub of Control.OnParentBindingContextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentChanged(System.EventArgs)">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentChangedEventArgs">
            <summary>Sets the stub of ContainerControl.OnParentChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentCursorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentCursorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentCursorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentEnabledChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentEnabledChangedEventArgs">
            <summary>Sets the stub of Control.OnParentEnabledChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentFontChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentFontChangedEventArgs">
            <summary>Sets the stub of Control.OnParentFontChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentForeColorChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentForeColorChangedEventArgs">
            <summary>Sets the stub of Control.OnParentForeColorChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentRightToLeftChangedEventArgs">
            <summary>Sets the stub of Control.OnParentRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnParentVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnParentVisibleChangedEventArgs">
            <summary>Sets the stub of Control.OnParentVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>Sets the stub of Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnPrintPaintEventArgs">
            <summary>Sets the stub of Control.OnPrint(PaintEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>Sets the stub of Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnRegionChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnRegionChangedEventArgs">
            <summary>Sets the stub of Control.OnRegionChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnResize(System.EventArgs)">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnResizeEventArgs">
            <summary>Sets the stub of UserControl.OnResize(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnRightToLeftChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnRightToLeftChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnRightToLeftChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnScrollScrollEventArgs">
            <summary>Sets the stub of ScrollableControl.OnScroll(ScrollEventArgs se)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnSizeChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnSizeChangedEventArgs">
            <summary>Sets the stub of Control.OnSizeChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnStyleChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnStyleChangedEventArgs">
            <summary>Sets the stub of Control.OnStyleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnSystemColorsChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnSystemColorsChangedEventArgs">
            <summary>Sets the stub of Control.OnSystemColorsChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnTabIndexChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnTabIndexChangedEventArgs">
            <summary>Sets the stub of Control.OnTabIndexChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnTabStopChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnTabStopChangedEventArgs">
            <summary>Sets the stub of Control.OnTabStopChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnTextChanged(System.EventArgs)">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnTextChangedEventArgs">
            <summary>Sets the stub of Control.OnTextChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnValidated(System.EventArgs)">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnValidatedEventArgs">
            <summary>Sets the stub of Control.OnValidated(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnValidatingCancelEventArgs">
            <summary>Sets the stub of Control.OnValidating(CancelEventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.OnVisibleChanged(System.EventArgs)">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.OnVisibleChangedEventArgs">
            <summary>Sets the stub of ScrollableControl.OnVisibleChanged(EventArgs e)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.PreProcessMessageMessageRef">
            <summary>Sets the stub of Control.PreProcessMessage(Message&amp; msg)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessCmdKeyMessageRefKeys">
            <summary>Sets the stub of ContainerControl.ProcessCmdKey(Message&amp; msg, Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessDialogChar(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessDialogCharChar">
            <summary>Sets the stub of ContainerControl.ProcessDialogChar(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessDialogKeyKeys">
            <summary>Sets the stub of ContainerControl.ProcessDialogKey(Keys keyData)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessKeyEventArgsMessageRef">
            <summary>Sets the stub of Control.ProcessKeyEventArgs(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessKeyMessageMessageRef">
            <summary>Sets the stub of Control.ProcessKeyMessage(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessKeyPreviewMessageRef">
            <summary>Sets the stub of Control.ProcessKeyPreview(Message&amp; m)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessMnemonic(System.Char)">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessMnemonicChar">
            <summary>Sets the stub of ContainerControl.ProcessMnemonic(Char charCode)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ProcessTabKey(System.Boolean)">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ProcessTabKeyBoolean">
            <summary>Sets the stub of ContainerControl.ProcessTabKey(Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.Refresh">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.Refresh01">
            <summary>Sets the stub of Control.Refresh()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ResetBackColor">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ResetBackColor01">
            <summary>Sets the stub of Control.ResetBackColor()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ResetCursor">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ResetCursor01">
            <summary>Sets the stub of Control.ResetCursor()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ResetFont">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ResetFont01">
            <summary>Sets the stub of Control.ResetFont()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ResetForeColor">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ResetForeColor01">
            <summary>Sets the stub of Control.ResetForeColor()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ResetRightToLeft">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ResetRightToLeft01">
            <summary>Sets the stub of Control.ResetRightToLeft()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ResetText">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ResetText01">
            <summary>Sets the stub of Control.ResetText()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.RightToLeftGet">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.RightToLeftSetRightToLeft">
            <summary>Sets the stub of Control.set_RightToLeft(RightToLeft value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ScaleChildrenGet">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ScaleControlSizeFBoundsSpecified">
            <summary>Sets the stub of ScrollableControl.ScaleControl(SizeF factor, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ScaleCore(System.Single,System.Single)">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ScaleCoreSingleSingle">
            <summary>Sets the stub of ScrollableControl.ScaleCore(Single dx, Single dy)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ScrollToControl(System.Windows.Forms.Control)">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ScrollToControlControl">
            <summary>Sets the stub of ScrollableControl.ScrollToControl(Control activeControl)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.Select(System.Boolean,System.Boolean)">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SelectBooleanBoolean">
            <summary>Sets the stub of ContainerControl.Select(Boolean directed, Boolean forward)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>Sets the stub of Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SetClientSizeCoreInt32Int32">
            <summary>Sets the stub of Control.SetClientSizeCore(Int32 x, Int32 y)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.SetVisibleCore(System.Boolean)">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SetVisibleCoreBoolean">
            <summary>Sets the stub of Control.SetVisibleCore(Boolean value)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ShowFocusCuesGet">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ShowKeyboardCuesGet">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SiteGet">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SiteSetISite">
            <summary>Sets the stub of Control.set_Site(ISite value)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.SizeFromClientSize(System.Drawing.Size)">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.SizeFromClientSizeSize">
            <summary>Sets the stub of Control.SizeFromClientSize(Size clientSize)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ToString">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ToString01">
            <summary>Sets the stub of Component.ToString()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.UpdateDefaultButton">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.UpdateDefaultButton01">
            <summary>Sets the stub of ContainerControl.UpdateDefaultButton()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ValidateChildren">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ValidateChildren01">
            <summary>Sets the stub of UserControl.ValidateChildren()</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.ValidateChildrenValidationConstraints">
            <summary>Sets the stub of UserControl.ValidateChildren(ValidationConstraints validationConstraints)</summary>
        </member>
        <member name="M:NAudio.Utils.Fakes.StubProgressLog.WndProc(System.Windows.Forms.Message@)">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="F:NAudio.Utils.Fakes.StubProgressLog.WndProcMessageRef">
            <summary>Sets the stub of UserControl.WndProc(Message&amp; m)</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.AllowDrop">
            <summary>Sets the stub of Control.get_AllowDrop()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.Anchor">
            <summary>Sets the stub of Control.get_Anchor()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.AutoScroll">
            <summary>Sets the stub of ScrollableControl.get_AutoScroll()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.AutoScrollOffset">
            <summary>Sets the stub of Control.get_AutoScrollOffset()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.AutoSize">
            <summary>Sets the stub of UserControl.get_AutoSize()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.AutoValidate">
            <summary>Sets the stub of UserControl.get_AutoValidate()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.BackColor">
            <summary>Sets the stub of Control.get_BackColor()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.BackgroundImage">
            <summary>Sets the stub of Control.get_BackgroundImage()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.BackgroundImageLayout">
            <summary>Sets the stub of Control.get_BackgroundImageLayout()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.BindingContext">
            <summary>Sets the stub of ContainerControl.get_BindingContext()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.CanEnableIme">
            <summary>Sets the stub of ContainerControl.get_CanEnableIme()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.CanRaiseEvents">
            <summary>Sets the stub of Control.get_CanRaiseEvents()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ContextMenu">
            <summary>Sets the stub of Control.get_ContextMenu()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ContextMenuStrip">
            <summary>Sets the stub of Control.get_ContextMenuStrip()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.CreateParams">
            <summary>Sets the stub of UserControl.get_CreateParams()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.Cursor">
            <summary>Sets the stub of Control.get_Cursor()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultCursor">
            <summary>Sets the stub of Control.get_DefaultCursor()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultImeMode">
            <summary>Sets the stub of Control.get_DefaultImeMode()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultMargin">
            <summary>Sets the stub of Control.get_DefaultMargin()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultMaximumSize">
            <summary>Sets the stub of Control.get_DefaultMaximumSize()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultMinimumSize">
            <summary>Sets the stub of Control.get_DefaultMinimumSize()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultPadding">
            <summary>Sets the stub of Control.get_DefaultPadding()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DefaultSize">
            <summary>Sets the stub of UserControl.get_DefaultSize()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DisplayRectangle">
            <summary>Sets the stub of ScrollableControl.get_DisplayRectangle()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.Dock">
            <summary>Sets the stub of Control.get_Dock()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.DoubleBuffered">
            <summary>Sets the stub of Control.get_DoubleBuffered()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.Focused">
            <summary>Sets the stub of Control.get_Focused()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.Font">
            <summary>Sets the stub of Control.get_Font()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ForeColor">
            <summary>Sets the stub of Control.get_ForeColor()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ImeModeBase">
            <summary>Sets the stub of Control.get_ImeModeBase()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.LayoutEngine">
            <summary>Sets the stub of Control.get_LayoutEngine()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.MaximumSize">
            <summary>Sets the stub of Control.get_MaximumSize()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.MinimumSize">
            <summary>Sets the stub of Control.get_MinimumSize()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.RightToLeft">
            <summary>Sets the stub of Control.get_RightToLeft()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ScaleChildren">
            <summary>Sets the stub of Control.get_ScaleChildren()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ShowFocusCues">
            <summary>Sets the stub of Control.get_ShowFocusCues()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.ShowKeyboardCues">
            <summary>Sets the stub of Control.get_ShowKeyboardCues()</summary>
        </member>
        <member name="P:NAudio.Utils.Fakes.StubProgressLog.Site">
            <summary>Sets the stub of Control.get_Site()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmDriver">
            <summary>Shim type of NAudio.Wave.Compression.AcmDriver</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmDriver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmDriver.#ctor(NAudio.Wave.Compression.AcmDriver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmDriver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmDriver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmDriver.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AddLocalDriverString">
            <summary>Sets the shim of AcmDriver.AddLocalDriver(String driverFile)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.Close">
            <summary>Sets the shim of AcmDriver.Close()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.ConstructorIntPtr">
            <summary>Sets the shim of AcmDriver.AcmDriver(IntPtr hAcmDriver)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.Dispose">
            <summary>Sets the shim of AcmDriver.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.DriverEnumCallbackIntPtrIntPtrAcmDriverDetailsSupportFlags">
            <summary>Sets the shim of AcmDriver.DriverEnumCallback(IntPtr hAcmDriver, IntPtr dwInstance, AcmDriverDetailsSupportFlags flags)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.DriverIdGet">
            <summary>Sets the shim of AcmDriver.get_DriverId()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.EnumerateAcmDrivers">
            <summary>Sets the shim of AcmDriver.EnumerateAcmDrivers()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.FindByShortNameString">
            <summary>Sets the shim of AcmDriver.FindByShortName(String shortName)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.FormatTagsGet">
            <summary>Sets the shim of AcmDriver.get_FormatTags()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.GetFormatsAcmFormatTag">
            <summary>Sets the shim of AcmDriver.GetFormats(AcmFormatTag formatTag)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.IsCodecInstalledString">
            <summary>Sets the shim of AcmDriver.IsCodecInstalled(String shortName)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.LongNameGet">
            <summary>Sets the shim of AcmDriver.get_LongName()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.MaxFormatSizeGet">
            <summary>Sets the shim of AcmDriver.get_MaxFormatSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.Open">
            <summary>Sets the shim of AcmDriver.Open()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.RemoveLocalDriverAcmDriver">
            <summary>Sets the shim of AcmDriver.RemoveLocalDriver(AcmDriver localDriver)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.ShortNameGet">
            <summary>Sets the shim of AcmDriver.get_ShortName()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.ShowFormatChooseDialogIntPtrStringAcmFormatEnumFlagsWaveFormatWaveFormatOutStringOutStringOut">
            <summary>Sets the shim of AcmDriver.ShowFormatChooseDialog(IntPtr ownerWindowHandle, String windowTitle, AcmFormatEnumFlags enumFlags, WaveFormat enumFormat, WaveFormat&amp; selectedFormat, String&amp; selectedFormatDescription, String&amp; selectedFormatTagDescription)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.ToString">
            <summary>Sets the shim of AcmDriver.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.Close">
            <summary>Sets the shim of AcmDriver.Close()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.Dispose">
            <summary>Sets the shim of AcmDriver.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.DriverIdGet">
            <summary>Sets the shim of AcmDriver.get_DriverId()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.FormatTagsGet">
            <summary>Sets the shim of AcmDriver.get_FormatTags()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.GetFormatsAcmFormatTag">
            <summary>Sets the shim of AcmDriver.GetFormats(AcmFormatTag formatTag)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.LongNameGet">
            <summary>Sets the shim of AcmDriver.get_LongName()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.MaxFormatSizeGet">
            <summary>Sets the shim of AcmDriver.get_MaxFormatSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.Open">
            <summary>Sets the shim of AcmDriver.Open()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.ShortNameGet">
            <summary>Sets the shim of AcmDriver.get_ShortName()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmDriver.AllInstances.ToString01">
            <summary>Sets the shim of AcmDriver.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmFormat">
            <summary>Shim type of NAudio.Wave.Compression.AcmFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormat.#ctor(NAudio.Wave.Compression.AcmFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.FormatDescriptionGet">
            <summary>Sets the shim of AcmFormat.get_FormatDescription()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.FormatIndexGet">
            <summary>Sets the shim of AcmFormat.get_FormatIndex()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.FormatTagGet">
            <summary>Sets the shim of AcmFormat.get_FormatTag()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.SupportFlagsGet">
            <summary>Sets the shim of AcmFormat.get_SupportFlags()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.WaveFormatByteSizeGet">
            <summary>Sets the shim of AcmFormat.get_WaveFormatByteSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.WaveFormatGet">
            <summary>Sets the shim of AcmFormat.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances.FormatDescriptionGet">
            <summary>Sets the shim of AcmFormat.get_FormatDescription()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances.FormatIndexGet">
            <summary>Sets the shim of AcmFormat.get_FormatIndex()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances.FormatTagGet">
            <summary>Sets the shim of AcmFormat.get_FormatTag()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances.SupportFlagsGet">
            <summary>Sets the shim of AcmFormat.get_SupportFlags()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances.WaveFormatByteSizeGet">
            <summary>Sets the shim of AcmFormat.get_WaveFormatByteSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormat.AllInstances.WaveFormatGet">
            <summary>Sets the shim of AcmFormat.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag">
            <summary>Shim type of NAudio.Wave.Compression.AcmFormatTag</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.#ctor(NAudio.Wave.Compression.AcmFormatTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.FormatDescriptionGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatDescription()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.FormatSizeGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.FormatTagGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatTag()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.FormatTagIndexGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatTagIndex()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.StandardFormatsCountGet">
            <summary>Sets the shim of AcmFormatTag.get_StandardFormatsCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.SupportFlagsGet">
            <summary>Sets the shim of AcmFormatTag.get_SupportFlags()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances.FormatDescriptionGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatDescription()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances.FormatSizeGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances.FormatTagGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatTag()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances.FormatTagIndexGet">
            <summary>Sets the shim of AcmFormatTag.get_FormatTagIndex()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances.StandardFormatsCountGet">
            <summary>Sets the shim of AcmFormatTag.get_StandardFormatsCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmFormatTag.AllInstances.SupportFlagsGet">
            <summary>Sets the shim of AcmFormatTag.get_SupportFlags()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmStream">
            <summary>Shim type of NAudio.Wave.Compression.AcmStream</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmStream.#ctor(NAudio.Wave.Compression.AcmStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimAcmStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.ConstructorIntPtrWaveFormatWaveFilter">
            <summary>Sets the shim of AcmStream.AcmStream(IntPtr driverId, WaveFormat sourceFormat, WaveFilter waveFilter)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.ConstructorWaveFormatWaveFormat">
            <summary>Sets the shim of AcmStream.AcmStream(WaveFormat sourceFormat, WaveFormat destFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.ConvertInt32">
            <summary>Sets the shim of AcmStream.Convert(Int32 bytesToConvert)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.ConvertInt32Int32Out">
            <summary>Sets the shim of AcmStream.Convert(Int32 bytesToConvert, Int32&amp; sourceBytesConverted)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.DestBufferGet">
            <summary>Sets the shim of AcmStream.get_DestBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.DestToSourceInt32">
            <summary>Sets the shim of AcmStream.DestToSource(Int32 dest)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.Dispose">
            <summary>Sets the shim of AcmStream.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.DisposeBoolean">
            <summary>Sets the shim of AcmStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.Reposition">
            <summary>Sets the shim of AcmStream.Reposition()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.SourceBufferGet">
            <summary>Sets the shim of AcmStream.get_SourceBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.SourceToDestInt32">
            <summary>Sets the shim of AcmStream.SourceToDest(Int32 source)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.SuggestPcmFormatWaveFormat">
            <summary>Sets the shim of AcmStream.SuggestPcmFormat(WaveFormat compressedFormat)</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.ConvertInt32">
            <summary>Sets the shim of AcmStream.Convert(Int32 bytesToConvert)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.ConvertInt32Int32Out">
            <summary>Sets the shim of AcmStream.Convert(Int32 bytesToConvert, Int32&amp; sourceBytesConverted)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.DestBufferGet">
            <summary>Sets the shim of AcmStream.get_DestBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.DestToSourceInt32">
            <summary>Sets the shim of AcmStream.DestToSource(Int32 dest)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.Dispose">
            <summary>Sets the shim of AcmStream.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AcmStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.Reposition">
            <summary>Sets the shim of AcmStream.Reposition()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.SourceBufferGet">
            <summary>Sets the shim of AcmStream.get_SourceBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimAcmStream.AllInstances.SourceToDestInt32">
            <summary>Sets the shim of AcmStream.SourceToDest(Int32 source)</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimWaveFilter">
            <summary>Shim type of NAudio.Wave.Compression.WaveFilter</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimWaveFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimWaveFilter.#ctor(NAudio.Wave.Compression.WaveFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimWaveFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.ShimWaveFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimWaveFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.ShimWaveFilter.Constructor">
            <summary>Sets the shim of WaveFilter.WaveFilter()</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.ShimWaveFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.StubAcmStream">
            <summary>Stub type of NAudio.Wave.Compression.AcmStream</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.StubAcmStream.#ctor(NAudio.Wave.WaveFormat,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.StubAcmStream.#ctor(System.IntPtr,NAudio.Wave.WaveFormat,NAudio.Wave.Compression.WaveFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.StubAcmStream.Dispose(System.Boolean)">
            <summary>Sets the stub of AcmStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Compression.Fakes.StubAcmStream.DisposeBoolean">
            <summary>Sets the stub of AcmStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.StubAcmStream.InitializeStub">
            <summary>Initializes a new instance of type StubAcmStream</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.StubAcmStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.StubAcmStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.StubAcmStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Compression.Fakes.StubWaveFilter">
            <summary>Stub type of NAudio.Wave.Compression.WaveFilter</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.StubWaveFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Compression.Fakes.StubWaveFilter.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFilter</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.StubWaveFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.StubWaveFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Compression.Fakes.StubWaveFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor">
            <summary>Shim type of NAudio.Wave.AcmMp3FrameDecompressor</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.#ctor(NAudio.Wave.AcmMp3FrameDecompressor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.Bind(NAudio.Wave.IMp3FrameDecompressor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.ConstructorWaveFormat">
            <summary>Sets the shim of AcmMp3FrameDecompressor.AcmMp3FrameDecompressor(WaveFormat sourceFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.DecompressFrameMp3FrameByteArrayInt32">
            <summary>Sets the shim of AcmMp3FrameDecompressor.DecompressFrame(Mp3Frame frame, Byte[] dest, Int32 destOffset)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.Dispose">
            <summary>Sets the shim of AcmMp3FrameDecompressor.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.OutputFormatGet">
            <summary>Sets the shim of AcmMp3FrameDecompressor.get_OutputFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.Reset">
            <summary>Sets the shim of AcmMp3FrameDecompressor.Reset()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.AllInstances.DecompressFrameMp3FrameByteArrayInt32">
            <summary>Sets the shim of AcmMp3FrameDecompressor.DecompressFrame(Mp3Frame frame, Byte[] dest, Int32 destOffset)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.AllInstances.Dispose">
            <summary>Sets the shim of AcmMp3FrameDecompressor.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.AllInstances.OutputFormatGet">
            <summary>Sets the shim of AcmMp3FrameDecompressor.get_OutputFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAcmMp3FrameDecompressor.AllInstances.Reset">
            <summary>Sets the shim of AcmMp3FrameDecompressor.Reset()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAdpcmWaveFormat">
            <summary>Shim type of NAudio.Wave.AdpcmWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.#ctor(NAudio.Wave.AdpcmWaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.CoefficientsGet">
            <summary>Sets the shim of AdpcmWaveFormat.get_Coefficients()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.Constructor">
            <summary>Sets the shim of AdpcmWaveFormat.AdpcmWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.ConstructorInt32Int32">
            <summary>Sets the shim of AdpcmWaveFormat.AdpcmWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.NumCoefficientsGet">
            <summary>Sets the shim of AdpcmWaveFormat.get_NumCoefficients()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.SamplesPerBlockGet">
            <summary>Sets the shim of AdpcmWaveFormat.get_SamplesPerBlock()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.SerializeBinaryWriter">
            <summary>Sets the shim of AdpcmWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.ToString">
            <summary>Sets the shim of AdpcmWaveFormat.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.AllInstances.CoefficientsGet">
            <summary>Sets the shim of AdpcmWaveFormat.get_Coefficients()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.AllInstances.NumCoefficientsGet">
            <summary>Sets the shim of AdpcmWaveFormat.get_NumCoefficients()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.AllInstances.SamplesPerBlockGet">
            <summary>Sets the shim of AdpcmWaveFormat.get_SamplesPerBlock()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.AllInstances.SerializeBinaryWriter">
            <summary>Sets the shim of AdpcmWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAdpcmWaveFormat.AllInstances.ToString01">
            <summary>Sets the shim of AdpcmWaveFormat.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAiffFileReader">
            <summary>Shim type of NAudio.Wave.AiffFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.#ctor(NAudio.Wave.AiffFileReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ConstructorStream">
            <summary>Sets the shim of AiffFileReader.AiffFileReader(Stream inputStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ConstructorString">
            <summary>Sets the shim of AiffFileReader.AiffFileReader(String aiffFile)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ConvertIntByteArray">
            <summary>Sets the shim of AiffFileReader.ConvertInt(Byte[] buffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ConvertShortByteArray">
            <summary>Sets the shim of AiffFileReader.ConvertShort(Byte[] buffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.DisposeBoolean">
            <summary>Sets the shim of AiffFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.LengthGet">
            <summary>Sets the shim of AiffFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.PositionGet">
            <summary>Sets the shim of AiffFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.PositionSetInt64">
            <summary>Sets the shim of AiffFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ReadAiffHeaderStreamWaveFormatOutInt64OutInt32OutListOfAiffFileReaderAiffChunk">
            <summary>Sets the shim of AiffFileReader.ReadAiffHeader(Stream stream, WaveFormat&amp; format, Int64&amp; dataChunkPosition, Int32&amp; dataChunkLength, List`1&lt;AiffChunk&gt; chunks)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the shim of AiffFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ReadChunkHeaderBinaryReader">
            <summary>Sets the shim of AiffFileReader.ReadChunkHeader(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ReadChunkNameBinaryReader">
            <summary>Sets the shim of AiffFileReader.ReadChunkName(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.SampleCountGet">
            <summary>Sets the shim of AiffFileReader.get_SampleCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.WaveFormatGet">
            <summary>Sets the shim of AiffFileReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AiffFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.LengthGet">
            <summary>Sets the shim of AiffFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.PositionGet">
            <summary>Sets the shim of AiffFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.PositionSetInt64">
            <summary>Sets the shim of AiffFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of AiffFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.SampleCountGet">
            <summary>Sets the shim of AiffFileReader.get_SampleCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.AllInstances.WaveFormatGet">
            <summary>Sets the shim of AiffFileReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAiffFileReader.ShimAiffChunk">
            <summary>Shim type of NAudio.Wave.AiffFileReader+AiffChunk</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.ShimAiffChunk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.ShimAiffChunk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileReader.ShimAiffChunk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileReader.ShimAiffChunk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAiffFileReader.ShimAiffChunk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAiffFileWriter">
            <summary>Shim type of NAudio.Wave.AiffFileWriter</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileWriter.#ctor(NAudio.Wave.AiffFileWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAiffFileWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.CanReadGet">
            <summary>Sets the shim of AiffFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.CanSeekGet">
            <summary>Sets the shim of AiffFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.CanWriteGet">
            <summary>Sets the shim of AiffFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.ConstructorStreamWaveFormat">
            <summary>Sets the shim of AiffFileWriter.AiffFileWriter(Stream outStream, WaveFormat format)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.ConstructorStringWaveFormat">
            <summary>Sets the shim of AiffFileWriter.AiffFileWriter(String filename, WaveFormat format)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.CreateAiffFileStringWaveStream">
            <summary>Sets the shim of AiffFileWriter.CreateAiffFile(String filename, WaveStream sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.CreateCommChunk">
            <summary>Sets the shim of AiffFileWriter.CreateCommChunk()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.DisposeBoolean">
            <summary>Sets the shim of AiffFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.FilenameGet">
            <summary>Sets the shim of AiffFileWriter.get_Filename()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.Flush">
            <summary>Sets the shim of AiffFileWriter.Flush()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.LengthGet">
            <summary>Sets the shim of AiffFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.PositionGet">
            <summary>Sets the shim of AiffFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.PositionSetInt64">
            <summary>Sets the shim of AiffFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.ReadByteArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.SeekInt64SeekOrigin">
            <summary>Sets the shim of AiffFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.SetLengthInt64">
            <summary>Sets the shim of AiffFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.SwapEndianInt16">
            <summary>Sets the shim of AiffFileWriter.SwapEndian(Int16 n)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.SwapEndianInt32">
            <summary>Sets the shim of AiffFileWriter.SwapEndian(Int32 n)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.UpdateCommChunkBinaryWriter">
            <summary>Sets the shim of AiffFileWriter.UpdateCommChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.UpdateHeaderBinaryWriter">
            <summary>Sets the shim of AiffFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.UpdateSsndChunkBinaryWriter">
            <summary>Sets the shim of AiffFileWriter.UpdateSsndChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.WaveFormatGet">
            <summary>Sets the shim of AiffFileWriter.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.WriteByteArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.WriteSampleSingle">
            <summary>Sets the shim of AiffFileWriter.WriteSample(Single sample)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.WriteSamplesInt16ArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.WriteSamples(Int16[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.WriteSamplesSingleArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.WriteSamples(Single[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.WriteSsndChunkHeader">
            <summary>Sets the shim of AiffFileWriter.WriteSsndChunkHeader()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.CanReadGet">
            <summary>Sets the shim of AiffFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.CanSeekGet">
            <summary>Sets the shim of AiffFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.CanWriteGet">
            <summary>Sets the shim of AiffFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.CreateCommChunk">
            <summary>Sets the shim of AiffFileWriter.CreateCommChunk()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AiffFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.FilenameGet">
            <summary>Sets the shim of AiffFileWriter.get_Filename()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.Flush">
            <summary>Sets the shim of AiffFileWriter.Flush()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.LengthGet">
            <summary>Sets the shim of AiffFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.PositionGet">
            <summary>Sets the shim of AiffFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.PositionSetInt64">
            <summary>Sets the shim of AiffFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of AiffFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.SetLengthInt64">
            <summary>Sets the shim of AiffFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.SwapEndianInt16">
            <summary>Sets the shim of AiffFileWriter.SwapEndian(Int16 n)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.SwapEndianInt32">
            <summary>Sets the shim of AiffFileWriter.SwapEndian(Int32 n)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.UpdateCommChunkBinaryWriter">
            <summary>Sets the shim of AiffFileWriter.UpdateCommChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.UpdateHeaderBinaryWriter">
            <summary>Sets the shim of AiffFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.UpdateSsndChunkBinaryWriter">
            <summary>Sets the shim of AiffFileWriter.UpdateSsndChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.WaveFormatGet">
            <summary>Sets the shim of AiffFileWriter.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.WriteSampleSingle">
            <summary>Sets the shim of AiffFileWriter.WriteSample(Single sample)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.WriteSamplesInt16ArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.WriteSamples(Int16[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.WriteSamplesSingleArrayInt32Int32">
            <summary>Sets the shim of AiffFileWriter.WriteSamples(Single[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAiffFileWriter.AllInstances.WriteSsndChunkHeader">
            <summary>Sets the shim of AiffFileWriter.WriteSsndChunkHeader()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs">
            <summary>Shim type of NAudio.Wave.AsioAudioAvailableEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.#ctor(NAudio.Wave.AsioAudioAvailableEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AsioSampleTypeGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_AsioSampleType()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AsioSampleTypeSetAsioSampleType">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_AsioSampleType(AsioSampleType value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.ConstructorIntPtrArrayIntPtrArrayInt32AsioSampleType">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.AsioAudioAvailableEventArgs(IntPtr[] inputBuffers, IntPtr[] outputBuffers, Int32 samplesPerBuffer, AsioSampleType asioSampleType)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.GetAsInterleavedSamples">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.GetAsInterleavedSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.GetAsInterleavedSamplesSingleArray">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.GetAsInterleavedSamples(Single[] samples)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.InputBuffersGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_InputBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.InputBuffersSetIntPtrArray">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_InputBuffers(IntPtr[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.OutputBuffersGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_OutputBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.OutputBuffersSetIntPtrArray">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_OutputBuffers(IntPtr[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.SamplesPerBufferGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_SamplesPerBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.SamplesPerBufferSetInt32">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_SamplesPerBuffer(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.WrittenToOutputBuffersGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_WrittenToOutputBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.WrittenToOutputBuffersSetBoolean">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_WrittenToOutputBuffers(Boolean value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.AsioSampleTypeGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_AsioSampleType()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.AsioSampleTypeSetAsioSampleType">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_AsioSampleType(AsioSampleType value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.GetAsInterleavedSamples">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.GetAsInterleavedSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.GetAsInterleavedSamplesSingleArray">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.GetAsInterleavedSamples(Single[] samples)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.InputBuffersGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_InputBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.InputBuffersSetIntPtrArray">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_InputBuffers(IntPtr[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.OutputBuffersGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_OutputBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.OutputBuffersSetIntPtrArray">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_OutputBuffers(IntPtr[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.SamplesPerBufferGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_SamplesPerBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.SamplesPerBufferSetInt32">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_SamplesPerBuffer(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.WrittenToOutputBuffersGet">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.get_WrittenToOutputBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioAudioAvailableEventArgs.AllInstances.WrittenToOutputBuffersSetBoolean">
            <summary>Sets the shim of AsioAudioAvailableEventArgs.set_WrittenToOutputBuffers(Boolean value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAsioOut">
            <summary>Shim type of NAudio.Wave.AsioOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioOut.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioOut.#ctor(NAudio.Wave.AsioOut)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioOut.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioOut.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioOut.Bind(NAudio.Wave.IWavePlayer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAsioOut.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AsioInputChannelNameInt32">
            <summary>Sets the shim of AsioOut.AsioInputChannelName(Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AsioOutputChannelNameInt32">
            <summary>Sets the shim of AsioOut.AsioOutputChannelName(Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AudioAvailableAddEventHandlerOfAsioAudioAvailableEventArgs">
            <summary>Sets the shim of AsioOut.add_AudioAvailable(EventHandler`1&lt;AsioAudioAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AudioAvailableRemoveEventHandlerOfAsioAudioAvailableEventArgs">
            <summary>Sets the shim of AsioOut.remove_AudioAvailable(EventHandler`1&lt;AsioAudioAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.ChannelOffsetGet">
            <summary>Sets the shim of AsioOut.get_ChannelOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.ChannelOffsetSetInt32">
            <summary>Sets the shim of AsioOut.set_ChannelOffset(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.Constructor">
            <summary>Sets the shim of AsioOut.AsioOut()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.ConstructorInt32">
            <summary>Sets the shim of AsioOut.AsioOut(Int32 driverIndex)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.ConstructorString">
            <summary>Sets the shim of AsioOut.AsioOut(String driverName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.Dispose">
            <summary>Sets the shim of AsioOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.DriverInputChannelCountGet">
            <summary>Sets the shim of AsioOut.get_DriverInputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.DriverNameGet">
            <summary>Sets the shim of AsioOut.get_DriverName()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.DriverOutputChannelCountGet">
            <summary>Sets the shim of AsioOut.get_DriverOutputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.GetDriverNames">
            <summary>Sets the shim of AsioOut.GetDriverNames()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.InitFromNameString">
            <summary>Sets the shim of AsioOut.InitFromName(String driverName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.InitIWaveProvider">
            <summary>Sets the shim of AsioOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.InitRecordAndPlaybackIWaveProviderInt32Int32">
            <summary>Sets the shim of AsioOut.InitRecordAndPlayback(IWaveProvider waveProvider, Int32 recordChannels, Int32 recordOnlySampleRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.InputChannelOffsetGet">
            <summary>Sets the shim of AsioOut.get_InputChannelOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.InputChannelOffsetSetInt32">
            <summary>Sets the shim of AsioOut.set_InputChannelOffset(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.NumberOfInputChannelsGet">
            <summary>Sets the shim of AsioOut.get_NumberOfInputChannels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.NumberOfInputChannelsSetInt32">
            <summary>Sets the shim of AsioOut.set_NumberOfInputChannels(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.NumberOfOutputChannelsGet">
            <summary>Sets the shim of AsioOut.get_NumberOfOutputChannels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.NumberOfOutputChannelsSetInt32">
            <summary>Sets the shim of AsioOut.set_NumberOfOutputChannels(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.Pause">
            <summary>Sets the shim of AsioOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.Play">
            <summary>Sets the shim of AsioOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.PlaybackLatencyGet">
            <summary>Sets the shim of AsioOut.get_PlaybackLatency()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.PlaybackStateGet">
            <summary>Sets the shim of AsioOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of AsioOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of AsioOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.RaisePlaybackStoppedException">
            <summary>Sets the shim of AsioOut.RaisePlaybackStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.ShowControlPanel">
            <summary>Sets the shim of AsioOut.ShowControlPanel()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.Stop">
            <summary>Sets the shim of AsioOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.VolumeGet">
            <summary>Sets the shim of AsioOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.VolumeSetSingle">
            <summary>Sets the shim of AsioOut.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.driver_BufferUpdateIntPtrArrayIntPtrArray">
            <summary>Sets the shim of AsioOut.driver_BufferUpdate(IntPtr[] inputChannels, IntPtr[] outputChannels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.isSupported">
            <summary>Sets the shim of AsioOut.isSupported()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAsioOut.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.AsioInputChannelNameInt32">
            <summary>Sets the shim of AsioOut.AsioInputChannelName(Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.AsioOutputChannelNameInt32">
            <summary>Sets the shim of AsioOut.AsioOutputChannelName(Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.AudioAvailableAddEventHandlerOfAsioAudioAvailableEventArgs">
            <summary>Sets the shim of AsioOut.add_AudioAvailable(EventHandler`1&lt;AsioAudioAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.AudioAvailableRemoveEventHandlerOfAsioAudioAvailableEventArgs">
            <summary>Sets the shim of AsioOut.remove_AudioAvailable(EventHandler`1&lt;AsioAudioAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.ChannelOffsetGet">
            <summary>Sets the shim of AsioOut.get_ChannelOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.ChannelOffsetSetInt32">
            <summary>Sets the shim of AsioOut.set_ChannelOffset(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.Dispose">
            <summary>Sets the shim of AsioOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.DriverInputChannelCountGet">
            <summary>Sets the shim of AsioOut.get_DriverInputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.DriverNameGet">
            <summary>Sets the shim of AsioOut.get_DriverName()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.DriverOutputChannelCountGet">
            <summary>Sets the shim of AsioOut.get_DriverOutputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.InitFromNameString">
            <summary>Sets the shim of AsioOut.InitFromName(String driverName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.InitIWaveProvider">
            <summary>Sets the shim of AsioOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.InitRecordAndPlaybackIWaveProviderInt32Int32">
            <summary>Sets the shim of AsioOut.InitRecordAndPlayback(IWaveProvider waveProvider, Int32 recordChannels, Int32 recordOnlySampleRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.InputChannelOffsetGet">
            <summary>Sets the shim of AsioOut.get_InputChannelOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.InputChannelOffsetSetInt32">
            <summary>Sets the shim of AsioOut.set_InputChannelOffset(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.NumberOfInputChannelsGet">
            <summary>Sets the shim of AsioOut.get_NumberOfInputChannels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.NumberOfInputChannelsSetInt32">
            <summary>Sets the shim of AsioOut.set_NumberOfInputChannels(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.NumberOfOutputChannelsGet">
            <summary>Sets the shim of AsioOut.get_NumberOfOutputChannels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.NumberOfOutputChannelsSetInt32">
            <summary>Sets the shim of AsioOut.set_NumberOfOutputChannels(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.Pause">
            <summary>Sets the shim of AsioOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.Play">
            <summary>Sets the shim of AsioOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.PlaybackLatencyGet">
            <summary>Sets the shim of AsioOut.get_PlaybackLatency()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.PlaybackStateGet">
            <summary>Sets the shim of AsioOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of AsioOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of AsioOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.RaisePlaybackStoppedException">
            <summary>Sets the shim of AsioOut.RaisePlaybackStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.ShowControlPanel">
            <summary>Sets the shim of AsioOut.ShowControlPanel()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.Stop">
            <summary>Sets the shim of AsioOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.VolumeGet">
            <summary>Sets the shim of AsioOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of AsioOut.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAsioOut.AllInstances.driver_BufferUpdateIntPtrArrayIntPtrArray">
            <summary>Sets the shim of AsioOut.driver_BufferUpdate(IntPtr[] inputChannels, IntPtr[] outputChannels)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAudioFileReader">
            <summary>Shim type of NAudio.Wave.AudioFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.#ctor(NAudio.Wave.AudioFileReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimAudioFileReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.ConstructorString">
            <summary>Sets the shim of AudioFileReader.AudioFileReader(String fileName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.CreateReaderStreamString">
            <summary>Sets the shim of AudioFileReader.CreateReaderStream(String fileName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.DestToSourceInt64">
            <summary>Sets the shim of AudioFileReader.DestToSource(Int64 destBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.DisposeBoolean">
            <summary>Sets the shim of AudioFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.LengthGet">
            <summary>Sets the shim of AudioFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.PositionGet">
            <summary>Sets the shim of AudioFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.PositionSetInt64">
            <summary>Sets the shim of AudioFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the shim of AudioFileReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of AudioFileReader.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.SourceToDestInt64">
            <summary>Sets the shim of AudioFileReader.SourceToDest(Int64 sourceBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.VolumeGet">
            <summary>Sets the shim of AudioFileReader.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.VolumeSetSingle">
            <summary>Sets the shim of AudioFileReader.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.WaveFormatGet">
            <summary>Sets the shim of AudioFileReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.CreateReaderStreamString">
            <summary>Sets the shim of AudioFileReader.CreateReaderStream(String fileName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.DestToSourceInt64">
            <summary>Sets the shim of AudioFileReader.DestToSource(Int64 destBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AudioFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.LengthGet">
            <summary>Sets the shim of AudioFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.PositionGet">
            <summary>Sets the shim of AudioFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.PositionSetInt64">
            <summary>Sets the shim of AudioFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of AudioFileReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of AudioFileReader.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.SourceToDestInt64">
            <summary>Sets the shim of AudioFileReader.SourceToDest(Int64 sourceBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.VolumeGet">
            <summary>Sets the shim of AudioFileReader.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of AudioFileReader.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimAudioFileReader.AllInstances.WaveFormatGet">
            <summary>Sets the shim of AudioFileReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimBlockAlignReductionStream">
            <summary>Shim type of NAudio.Wave.BlockAlignReductionStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.#ctor(NAudio.Wave.BlockAlignReductionStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.BlockAlignGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.BufferEndPositionGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_BufferEndPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.ConstructorWaveStream">
            <summary>Sets the shim of BlockAlignReductionStream.BlockAlignReductionStream(WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.DisposeBoolean">
            <summary>Sets the shim of BlockAlignReductionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.GetSourceBufferInt32">
            <summary>Sets the shim of BlockAlignReductionStream.GetSourceBuffer(Int32 size)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.LengthGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.PositionGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.PositionSetInt64">
            <summary>Sets the shim of BlockAlignReductionStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of BlockAlignReductionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.WaveFormatGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.BlockAlignGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.BufferEndPositionGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_BufferEndPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BlockAlignReductionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.GetSourceBufferInt32">
            <summary>Sets the shim of BlockAlignReductionStream.GetSourceBuffer(Int32 size)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.LengthGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.PositionGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of BlockAlignReductionStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of BlockAlignReductionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBlockAlignReductionStream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of BlockAlignReductionStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimBufferedWaveProvider">
            <summary>Shim type of NAudio.Wave.BufferedWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBufferedWaveProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBufferedWaveProvider.#ctor(NAudio.Wave.BufferedWaveProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimBufferedWaveProvider.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AddSamplesByteArrayInt32Int32">
            <summary>Sets the shim of BufferedWaveProvider.AddSamples(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BufferDurationGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferDuration()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BufferDurationSetTimeSpan">
            <summary>Sets the shim of BufferedWaveProvider.set_BufferDuration(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BufferLengthGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferLength()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BufferLengthSetInt32">
            <summary>Sets the shim of BufferedWaveProvider.set_BufferLength(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BufferedBytesGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferedBytes()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.BufferedDurationGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferedDuration()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.ClearBuffer">
            <summary>Sets the shim of BufferedWaveProvider.ClearBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.ConstructorWaveFormat">
            <summary>Sets the shim of BufferedWaveProvider.BufferedWaveProvider(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.DiscardOnBufferOverflowGet">
            <summary>Sets the shim of BufferedWaveProvider.get_DiscardOnBufferOverflow()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.DiscardOnBufferOverflowSetBoolean">
            <summary>Sets the shim of BufferedWaveProvider.set_DiscardOnBufferOverflow(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.ReadByteArrayInt32Int32">
            <summary>Sets the shim of BufferedWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.WaveFormatGet">
            <summary>Sets the shim of BufferedWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.AddSamplesByteArrayInt32Int32">
            <summary>Sets the shim of BufferedWaveProvider.AddSamples(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.BufferDurationGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferDuration()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.BufferDurationSetTimeSpan">
            <summary>Sets the shim of BufferedWaveProvider.set_BufferDuration(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.BufferLengthGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferLength()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.BufferLengthSetInt32">
            <summary>Sets the shim of BufferedWaveProvider.set_BufferLength(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.BufferedBytesGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferedBytes()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.BufferedDurationGet">
            <summary>Sets the shim of BufferedWaveProvider.get_BufferedDuration()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.ClearBuffer">
            <summary>Sets the shim of BufferedWaveProvider.ClearBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.DiscardOnBufferOverflowGet">
            <summary>Sets the shim of BufferedWaveProvider.get_DiscardOnBufferOverflow()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.DiscardOnBufferOverflowSetBoolean">
            <summary>Sets the shim of BufferedWaveProvider.set_DiscardOnBufferOverflow(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of BufferedWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimBufferedWaveProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of BufferedWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCue">
            <summary>Shim type of NAudio.Wave.Cue</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCue.#ctor(NAudio.Wave.Cue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.ConstructorInt32String">
            <summary>Sets the shim of Cue.Cue(Int32 position, String label)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.LabelGet">
            <summary>Sets the shim of Cue.get_Label()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.LabelSetString">
            <summary>Sets the shim of Cue.set_Label(String value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.PositionGet">
            <summary>Sets the shim of Cue.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.PositionSetInt32">
            <summary>Sets the shim of Cue.set_Position(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.AllInstances.LabelGet">
            <summary>Sets the shim of Cue.get_Label()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.AllInstances.LabelSetString">
            <summary>Sets the shim of Cue.set_Label(String value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.AllInstances.PositionGet">
            <summary>Sets the shim of Cue.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCue.AllInstances.PositionSetInt32">
            <summary>Sets the shim of Cue.set_Position(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCueList">
            <summary>Shim type of NAudio.Wave.CueList</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueList.#ctor(NAudio.Wave.CueList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AddCue">
            <summary>Sets the shim of CueList.Add(Cue cue)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.Constructor">
            <summary>Sets the shim of CueList.CueList()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.ConstructorByteArrayByteArray">
            <summary>Sets the shim of CueList.CueList(Byte[] cueChunkData, Byte[] listChunkData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.CountGet">
            <summary>Sets the shim of CueList.get_Count()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.CueLabelsGet">
            <summary>Sets the shim of CueList.get_CueLabels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.CuePositionsGet">
            <summary>Sets the shim of CueList.get_CuePositions()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.FromChunksWaveFileReader">
            <summary>Sets the shim of CueList.FromChunks(WaveFileReader reader)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.GetRIFFChunks">
            <summary>Sets the shim of CueList.GetRIFFChunks()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.ItemGetInt32">
            <summary>Sets the shim of CueList.get_Item(Int32 index)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCueList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AllInstances.AddCue">
            <summary>Sets the shim of CueList.Add(Cue cue)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AllInstances.CountGet">
            <summary>Sets the shim of CueList.get_Count()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AllInstances.CueLabelsGet">
            <summary>Sets the shim of CueList.get_CueLabels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AllInstances.CuePositionsGet">
            <summary>Sets the shim of CueList.get_CuePositions()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AllInstances.GetRIFFChunks">
            <summary>Sets the shim of CueList.GetRIFFChunks()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueList.AllInstances.ItemGetInt32">
            <summary>Sets the shim of CueList.get_Item(Int32 index)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCueWaveFileReader">
            <summary>Shim type of NAudio.Wave.CueWaveFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileReader.#ctor(NAudio.Wave.CueWaveFileReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileReader.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileReader.ConstructorString">
            <summary>Sets the shim of CueWaveFileReader.CueWaveFileReader(String fileName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileReader.CuesGet">
            <summary>Sets the shim of CueWaveFileReader.get_Cues()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCueWaveFileReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileReader.AllInstances.CuesGet">
            <summary>Sets the shim of CueWaveFileReader.get_Cues()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCueWaveFileWriter">
            <summary>Shim type of NAudio.Wave.CueWaveFileWriter</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileWriter.#ctor(NAudio.Wave.CueWaveFileWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimCueWaveFileWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.AddCueInt32String">
            <summary>Sets the shim of CueWaveFileWriter.AddCue(Int32 position, String label)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.ConstructorStringWaveFormat">
            <summary>Sets the shim of CueWaveFileWriter.CueWaveFileWriter(String fileName, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.UpdateHeaderBinaryWriter">
            <summary>Sets the shim of CueWaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.WriteCuesBinaryWriter">
            <summary>Sets the shim of CueWaveFileWriter.WriteCues(BinaryWriter w)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimCueWaveFileWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.AllInstances.AddCueInt32String">
            <summary>Sets the shim of CueWaveFileWriter.AddCue(Int32 position, String label)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.AllInstances.UpdateHeaderBinaryWriter">
            <summary>Sets the shim of CueWaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimCueWaveFileWriter.AllInstances.WriteCuesBinaryWriter">
            <summary>Sets the shim of CueWaveFileWriter.WriteCues(BinaryWriter w)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo">
            <summary>Shim type of NAudio.Wave.DirectSoundDeviceInfo</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.#ctor(NAudio.Wave.DirectSoundDeviceInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.Constructor">
            <summary>Sets the shim of DirectSoundDeviceInfo.DirectSoundDeviceInfo()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.DescriptionGet">
            <summary>Sets the shim of DirectSoundDeviceInfo.get_Description()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.DescriptionSetString">
            <summary>Sets the shim of DirectSoundDeviceInfo.set_Description(String value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.GuidGet">
            <summary>Sets the shim of DirectSoundDeviceInfo.get_Guid()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.GuidSetGuid">
            <summary>Sets the shim of DirectSoundDeviceInfo.set_Guid(Guid value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.ModuleNameGet">
            <summary>Sets the shim of DirectSoundDeviceInfo.get_ModuleName()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.ModuleNameSetString">
            <summary>Sets the shim of DirectSoundDeviceInfo.set_ModuleName(String value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances.DescriptionGet">
            <summary>Sets the shim of DirectSoundDeviceInfo.get_Description()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances.DescriptionSetString">
            <summary>Sets the shim of DirectSoundDeviceInfo.set_Description(String value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances.GuidGet">
            <summary>Sets the shim of DirectSoundDeviceInfo.get_Guid()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances.GuidSetGuid">
            <summary>Sets the shim of DirectSoundDeviceInfo.set_Guid(Guid value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances.ModuleNameGet">
            <summary>Sets the shim of DirectSoundDeviceInfo.get_ModuleName()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundDeviceInfo.AllInstances.ModuleNameSetString">
            <summary>Sets the shim of DirectSoundDeviceInfo.set_ModuleName(String value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimDirectSoundOut">
            <summary>Shim type of NAudio.Wave.DirectSoundOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundOut.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundOut.#ctor(NAudio.Wave.DirectSoundOut)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundOut.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundOut.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundOut.Bind(NAudio.Wave.IWavePlayer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimDirectSoundOut.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.Constructor">
            <summary>Sets the shim of DirectSoundOut.DirectSoundOut()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.ConstructorGuid">
            <summary>Sets the shim of DirectSoundOut.DirectSoundOut(Guid device)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.ConstructorGuidInt32">
            <summary>Sets the shim of DirectSoundOut.DirectSoundOut(Guid device, Int32 latency)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.ConstructorInt32">
            <summary>Sets the shim of DirectSoundOut.DirectSoundOut(Int32 latency)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.DevicesGet">
            <summary>Sets the shim of DirectSoundOut.get_Devices()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.Dispose">
            <summary>Sets the shim of DirectSoundOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.EnumCallbackIntPtrIntPtrIntPtrIntPtr">
            <summary>Sets the shim of DirectSoundOut.EnumCallback(IntPtr lpGuid, IntPtr lpcstrDescription, IntPtr lpcstrModule, IntPtr lpContext)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.FeedInt32">
            <summary>Sets the shim of DirectSoundOut.Feed(Int32 bytesToCopy)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.GetPosition">
            <summary>Sets the shim of DirectSoundOut.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.InitIWaveProvider">
            <summary>Sets the shim of DirectSoundOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.InitializeDirectSound">
            <summary>Sets the shim of DirectSoundOut.InitializeDirectSound()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.IsBufferLost">
            <summary>Sets the shim of DirectSoundOut.IsBufferLost()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.MsToBytesInt32">
            <summary>Sets the shim of DirectSoundOut.MsToBytes(Int32 ms)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.Pause">
            <summary>Sets the shim of DirectSoundOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.Play">
            <summary>Sets the shim of DirectSoundOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.PlaybackPositionGet">
            <summary>Sets the shim of DirectSoundOut.get_PlaybackPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.PlaybackStateGet">
            <summary>Sets the shim of DirectSoundOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of DirectSoundOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of DirectSoundOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.PlaybackThreadFunc">
            <summary>Sets the shim of DirectSoundOut.PlaybackThreadFunc()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.RaisePlaybackStoppedException">
            <summary>Sets the shim of DirectSoundOut.RaisePlaybackStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.StaticConstructor">
            <summary>Sets the shim of DirectSoundOut.DirectSoundOut()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.Stop">
            <summary>Sets the shim of DirectSoundOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.StopPlayback">
            <summary>Sets the shim of DirectSoundOut.StopPlayback()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.VolumeGet">
            <summary>Sets the shim of DirectSoundOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.VolumeSetSingle">
            <summary>Sets the shim of DirectSoundOut.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.Dispose">
            <summary>Sets the shim of DirectSoundOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.FeedInt32">
            <summary>Sets the shim of DirectSoundOut.Feed(Int32 bytesToCopy)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.GetPosition">
            <summary>Sets the shim of DirectSoundOut.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.InitIWaveProvider">
            <summary>Sets the shim of DirectSoundOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.InitializeDirectSound">
            <summary>Sets the shim of DirectSoundOut.InitializeDirectSound()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.IsBufferLost">
            <summary>Sets the shim of DirectSoundOut.IsBufferLost()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.MsToBytesInt32">
            <summary>Sets the shim of DirectSoundOut.MsToBytes(Int32 ms)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.Pause">
            <summary>Sets the shim of DirectSoundOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.Play">
            <summary>Sets the shim of DirectSoundOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.PlaybackPositionGet">
            <summary>Sets the shim of DirectSoundOut.get_PlaybackPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.PlaybackStateGet">
            <summary>Sets the shim of DirectSoundOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of DirectSoundOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of DirectSoundOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.PlaybackThreadFunc">
            <summary>Sets the shim of DirectSoundOut.PlaybackThreadFunc()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.RaisePlaybackStoppedException">
            <summary>Sets the shim of DirectSoundOut.RaisePlaybackStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.Stop">
            <summary>Sets the shim of DirectSoundOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.StopPlayback">
            <summary>Sets the shim of DirectSoundOut.StopPlayback()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.VolumeGet">
            <summary>Sets the shim of DirectSoundOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimDirectSoundOut.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of DirectSoundOut.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimGsm610WaveFormat">
            <summary>Shim type of NAudio.Wave.Gsm610WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimGsm610WaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimGsm610WaveFormat.#ctor(NAudio.Wave.Gsm610WaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimGsm610WaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimGsm610WaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimGsm610WaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimGsm610WaveFormat.Constructor">
            <summary>Sets the shim of Gsm610WaveFormat.Gsm610WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimGsm610WaveFormat.SamplesPerBlockGet">
            <summary>Sets the shim of Gsm610WaveFormat.get_SamplesPerBlock()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimGsm610WaveFormat.SerializeBinaryWriter">
            <summary>Sets the shim of Gsm610WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimGsm610WaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimGsm610WaveFormat.AllInstances.SamplesPerBlockGet">
            <summary>Sets the shim of Gsm610WaveFormat.get_SamplesPerBlock()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimGsm610WaveFormat.AllInstances.SerializeBinaryWriter">
            <summary>Sets the shim of Gsm610WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimId3v2Tag">
            <summary>Shim type of NAudio.Wave.Id3v2Tag</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimId3v2Tag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimId3v2Tag.#ctor(NAudio.Wave.Id3v2Tag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimId3v2Tag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimId3v2Tag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.ConstructorStream">
            <summary>Sets the shim of Id3v2Tag.Id3v2Tag(Stream input)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.CreateIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of Id3v2Tag.Create(IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; tags)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.CreateId3v2FrameStringString">
            <summary>Sets the shim of Id3v2Tag.CreateId3v2Frame(String key, String value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.CreateId3v2TagHeaderIEnumerableOfByteArray">
            <summary>Sets the shim of Id3v2Tag.CreateId3v2TagHeader(IEnumerable`1&lt;Byte[]&gt; frames)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.CreateId3v2TagStreamIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of Id3v2Tag.CreateId3v2TagStream(IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; tags)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.FrameSizeToBytesInt32">
            <summary>Sets the shim of Id3v2Tag.FrameSizeToBytes(Int32 n)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.GetId3TagHeaderSizeInt32">
            <summary>Sets the shim of Id3v2Tag.GetId3TagHeaderSize(Int32 size)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.RawDataGet">
            <summary>Sets the shim of Id3v2Tag.get_RawData()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.ReadTagStream">
            <summary>Sets the shim of Id3v2Tag.ReadTag(Stream input)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimId3v2Tag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimId3v2Tag.AllInstances.RawDataGet">
            <summary>Sets the shim of Id3v2Tag.get_RawData()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat">
            <summary>Shim type of NAudio.Wave.ImaAdpcmWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.#ctor(NAudio.Wave.ImaAdpcmWaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.Constructor">
            <summary>Sets the shim of ImaAdpcmWaveFormat.ImaAdpcmWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.ConstructorInt32Int32Int32">
            <summary>Sets the shim of ImaAdpcmWaveFormat.ImaAdpcmWaveFormat(Int32 sampleRate, Int32 channels, Int32 bitsPerSample)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimImaAdpcmWaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationEncoder">
            <summary>Shim type of NAudio.Wave.MediaFoundationEncoder</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.#ctor(NAudio.Wave.MediaFoundationEncoder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.BytesToNsPositionInt32WaveFormat">
            <summary>Sets the shim of MediaFoundationEncoder.BytesToNsPosition(Int32 bytes, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.ConstructorMediaType">
            <summary>Sets the shim of MediaFoundationEncoder.MediaFoundationEncoder(MediaType outputMediaType)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.ConvertOneBufferIMFSinkWriterInt32IWaveProviderInt64ByteArray">
            <summary>Sets the shim of MediaFoundationEncoder.ConvertOneBuffer(IMFSinkWriter writer, Int32 streamIndex, IWaveProvider inputProvider, Int64 position, Byte[] managedBuffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.CreateSinkWriterString">
            <summary>Sets the shim of MediaFoundationEncoder.CreateSinkWriter(String outputFile)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.Dispose">
            <summary>Sets the shim of MediaFoundationEncoder.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationEncoder.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.EncodeStringIWaveProvider">
            <summary>Sets the shim of MediaFoundationEncoder.Encode(String outputFile, IWaveProvider inputProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.EncodeToAacIWaveProviderStringInt32">
            <summary>Sets the shim of MediaFoundationEncoder.EncodeToAac(IWaveProvider inputProvider, String outputFile, Int32 desiredBitRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.EncodeToMp3IWaveProviderStringInt32">
            <summary>Sets the shim of MediaFoundationEncoder.EncodeToMp3(IWaveProvider inputProvider, String outputFile, Int32 desiredBitRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.EncodeToWmaIWaveProviderStringInt32">
            <summary>Sets the shim of MediaFoundationEncoder.EncodeToWma(IWaveProvider inputProvider, String outputFile, Int32 desiredBitRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.GetEncodeBitratesGuidInt32Int32">
            <summary>Sets the shim of MediaFoundationEncoder.GetEncodeBitrates(Guid audioSubtype, Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.GetOutputMediaTypesGuid">
            <summary>Sets the shim of MediaFoundationEncoder.GetOutputMediaTypes(Guid audioSubtype)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.PerformEncodeIMFSinkWriterInt32IWaveProvider">
            <summary>Sets the shim of MediaFoundationEncoder.PerformEncode(IMFSinkWriter writer, Int32 streamIndex, IWaveProvider inputProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.SelectMediaTypeGuidWaveFormatInt32">
            <summary>Sets the shim of MediaFoundationEncoder.SelectMediaType(Guid audioSubtype, WaveFormat inputFormat, Int32 desiredBitRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder._GetEncodeBitratesb__1MediaType">
            <summary>Sets the shim of MediaFoundationEncoder.&lt;GetEncodeBitrates&gt;b__1(MediaType mt)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder._GetEncodeBitratesb__2Int32">
            <summary>Sets the shim of MediaFoundationEncoder.&lt;GetEncodeBitrates&gt;b__2(Int32 br)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.AllInstances.ConvertOneBufferIMFSinkWriterInt32IWaveProviderInt64ByteArray">
            <summary>Sets the shim of MediaFoundationEncoder.ConvertOneBuffer(IMFSinkWriter writer, Int32 streamIndex, IWaveProvider inputProvider, Int64 position, Byte[] managedBuffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.AllInstances.Dispose">
            <summary>Sets the shim of MediaFoundationEncoder.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationEncoder.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.AllInstances.EncodeStringIWaveProvider">
            <summary>Sets the shim of MediaFoundationEncoder.Encode(String outputFile, IWaveProvider inputProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationEncoder.AllInstances.PerformEncodeIMFSinkWriterInt32IWaveProvider">
            <summary>Sets the shim of MediaFoundationEncoder.PerformEncode(IMFSinkWriter writer, Int32 streamIndex, IWaveProvider inputProvider)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationReader">
            <summary>Shim type of NAudio.Wave.MediaFoundationReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.#ctor(NAudio.Wave.MediaFoundationReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ConstructorString">
            <summary>Sets the shim of MediaFoundationReader.MediaFoundationReader(String file)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ConstructorStringMediaFoundationReaderMediaFoundationReaderSettings">
            <summary>Sets the shim of MediaFoundationReader.MediaFoundationReader(String file, MediaFoundationReaderSettings settings)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.CreateReaderMediaFoundationReaderMediaFoundationReaderSettings">
            <summary>Sets the shim of MediaFoundationReader.CreateReader(MediaFoundationReaderSettings settings)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.EnsureBufferInt32">
            <summary>Sets the shim of MediaFoundationReader.EnsureBuffer(Int32 bytesRequired)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.GetLengthIMFSourceReader">
            <summary>Sets the shim of MediaFoundationReader.GetLength(IMFSourceReader reader)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.LengthGet">
            <summary>Sets the shim of MediaFoundationReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.PositionGet">
            <summary>Sets the shim of MediaFoundationReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.PositionSetInt64">
            <summary>Sets the shim of MediaFoundationReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ReadFromDecoderBufferByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationReader.ReadFromDecoderBuffer(Byte[] buffer, Int32 offset, Int32 needed)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.RepositionInt64">
            <summary>Sets the shim of MediaFoundationReader.Reposition(Int64 desiredPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.WaveFormatGet">
            <summary>Sets the shim of MediaFoundationReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.CreateReaderMediaFoundationReaderMediaFoundationReaderSettings">
            <summary>Sets the shim of MediaFoundationReader.CreateReader(MediaFoundationReaderSettings settings)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.EnsureBufferInt32">
            <summary>Sets the shim of MediaFoundationReader.EnsureBuffer(Int32 bytesRequired)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.GetLengthIMFSourceReader">
            <summary>Sets the shim of MediaFoundationReader.GetLength(IMFSourceReader reader)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.LengthGet">
            <summary>Sets the shim of MediaFoundationReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.PositionGet">
            <summary>Sets the shim of MediaFoundationReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.PositionSetInt64">
            <summary>Sets the shim of MediaFoundationReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.ReadFromDecoderBufferByteArrayInt32Int32">
            <summary>Sets the shim of MediaFoundationReader.ReadFromDecoderBuffer(Byte[] buffer, Int32 offset, Int32 needed)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.RepositionInt64">
            <summary>Sets the shim of MediaFoundationReader.Reposition(Int64 desiredPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MediaFoundationReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings">
            <summary>Shim type of NAudio.Wave.MediaFoundationReader+MediaFoundationReaderSettings</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.#ctor(NAudio.Wave.MediaFoundationReader.MediaFoundationReaderSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.Constructor">
            <summary>Sets the shim of MediaFoundationReaderSettings.MediaFoundationReaderSettings()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.RepositionInReadGet">
            <summary>Sets the shim of MediaFoundationReaderSettings.get_RepositionInRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.RepositionInReadSetBoolean">
            <summary>Sets the shim of MediaFoundationReaderSettings.set_RepositionInRead(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.RequestFloatOutputGet">
            <summary>Sets the shim of MediaFoundationReaderSettings.get_RequestFloatOutput()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.RequestFloatOutputSetBoolean">
            <summary>Sets the shim of MediaFoundationReaderSettings.set_RequestFloatOutput(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.SingleReaderObjectGet">
            <summary>Sets the shim of MediaFoundationReaderSettings.get_SingleReaderObject()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.SingleReaderObjectSetBoolean">
            <summary>Sets the shim of MediaFoundationReaderSettings.set_SingleReaderObject(Boolean value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances.RepositionInReadGet">
            <summary>Sets the shim of MediaFoundationReaderSettings.get_RepositionInRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances.RepositionInReadSetBoolean">
            <summary>Sets the shim of MediaFoundationReaderSettings.set_RepositionInRead(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances.RequestFloatOutputGet">
            <summary>Sets the shim of MediaFoundationReaderSettings.get_RequestFloatOutput()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances.RequestFloatOutputSetBoolean">
            <summary>Sets the shim of MediaFoundationReaderSettings.set_RequestFloatOutput(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances.SingleReaderObjectGet">
            <summary>Sets the shim of MediaFoundationReaderSettings.get_SingleReaderObject()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationReader.ShimMediaFoundationReaderSettings.AllInstances.SingleReaderObjectSetBoolean">
            <summary>Sets the shim of MediaFoundationReaderSettings.set_SingleReaderObject(Boolean value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationResampler">
            <summary>Shim type of NAudio.Wave.MediaFoundationResampler</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationResampler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationResampler.#ctor(NAudio.Wave.MediaFoundationResampler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationResampler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationResampler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationResampler.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMediaFoundationResampler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.ConstructorIWaveProviderInt32">
            <summary>Sets the shim of MediaFoundationResampler.MediaFoundationResampler(IWaveProvider sourceProvider, Int32 outputSampleRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.ConstructorIWaveProviderWaveFormat">
            <summary>Sets the shim of MediaFoundationResampler.MediaFoundationResampler(IWaveProvider sourceProvider, WaveFormat outputFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.CreateOutputFormatWaveFormatInt32">
            <summary>Sets the shim of MediaFoundationResampler.CreateOutputFormat(WaveFormat inputFormat, Int32 outputSampleRate)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.CreateResamplerComObject">
            <summary>Sets the shim of MediaFoundationResampler.CreateResamplerComObject()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.CreateResamplerComObjectUsingActivator">
            <summary>Sets the shim of MediaFoundationResampler.CreateResamplerComObjectUsingActivator()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.CreateTransform">
            <summary>Sets the shim of MediaFoundationResampler.CreateTransform()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationResampler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.FreeComObjectObject">
            <summary>Sets the shim of MediaFoundationResampler.FreeComObject(Object comObject)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.IsPcmOrIeeeFloatWaveFormat">
            <summary>Sets the shim of MediaFoundationResampler.IsPcmOrIeeeFloat(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.ResamplerQualityGet">
            <summary>Sets the shim of MediaFoundationResampler.get_ResamplerQuality()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.ResamplerQualitySetInt32">
            <summary>Sets the shim of MediaFoundationResampler.set_ResamplerQuality(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.StaticConstructor">
            <summary>Sets the shim of MediaFoundationResampler.MediaFoundationResampler()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.CreateResamplerComObject">
            <summary>Sets the shim of MediaFoundationResampler.CreateResamplerComObject()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.CreateResamplerComObjectUsingActivator">
            <summary>Sets the shim of MediaFoundationResampler.CreateResamplerComObjectUsingActivator()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.CreateTransform">
            <summary>Sets the shim of MediaFoundationResampler.CreateTransform()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MediaFoundationResampler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.FreeComObjectObject">
            <summary>Sets the shim of MediaFoundationResampler.FreeComObject(Object comObject)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.ResamplerQualityGet">
            <summary>Sets the shim of MediaFoundationResampler.get_ResamplerQuality()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMediaFoundationResampler.AllInstances.ResamplerQualitySetInt32">
            <summary>Sets the shim of MediaFoundationResampler.set_ResamplerQuality(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMixingWaveProvider32">
            <summary>Shim type of NAudio.Wave.MixingWaveProvider32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMixingWaveProvider32.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMixingWaveProvider32.#ctor(NAudio.Wave.MixingWaveProvider32)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMixingWaveProvider32.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMixingWaveProvider32.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMixingWaveProvider32.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AddInputStreamIWaveProvider">
            <summary>Sets the shim of MixingWaveProvider32.AddInputStream(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.Constructor">
            <summary>Sets the shim of MixingWaveProvider32.MixingWaveProvider32()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.ConstructorIEnumerableOfIWaveProvider">
            <summary>Sets the shim of MixingWaveProvider32.MixingWaveProvider32(IEnumerable`1&lt;IWaveProvider&gt; inputs)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.InputCountGet">
            <summary>Sets the shim of MixingWaveProvider32.get_InputCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MixingWaveProvider32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.RemoveInputStreamIWaveProvider">
            <summary>Sets the shim of MixingWaveProvider32.RemoveInputStream(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.Sum32BitAudioByteArrayInt32ByteArrayInt32">
            <summary>Sets the shim of MixingWaveProvider32.Sum32BitAudio(Byte[] destBuffer, Int32 offset, Byte[] sourceBuffer, Int32 bytesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.WaveFormatGet">
            <summary>Sets the shim of MixingWaveProvider32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AllInstances.AddInputStreamIWaveProvider">
            <summary>Sets the shim of MixingWaveProvider32.AddInputStream(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AllInstances.InputCountGet">
            <summary>Sets the shim of MixingWaveProvider32.get_InputCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MixingWaveProvider32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AllInstances.RemoveInputStreamIWaveProvider">
            <summary>Sets the shim of MixingWaveProvider32.RemoveInputStream(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMixingWaveProvider32.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MixingWaveProvider32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMonoToStereoProvider16">
            <summary>Shim type of NAudio.Wave.MonoToStereoProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.#ctor(NAudio.Wave.MonoToStereoProvider16)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.ConstructorIWaveProvider">
            <summary>Sets the shim of MonoToStereoProvider16.MonoToStereoProvider16(IWaveProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.LeftVolumeGet">
            <summary>Sets the shim of MonoToStereoProvider16.get_LeftVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.LeftVolumeSetSingle">
            <summary>Sets the shim of MonoToStereoProvider16.set_LeftVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MonoToStereoProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.RightVolumeGet">
            <summary>Sets the shim of MonoToStereoProvider16.get_RightVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.RightVolumeSetSingle">
            <summary>Sets the shim of MonoToStereoProvider16.set_RightVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.WaveFormatGet">
            <summary>Sets the shim of MonoToStereoProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances.LeftVolumeGet">
            <summary>Sets the shim of MonoToStereoProvider16.get_LeftVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances.LeftVolumeSetSingle">
            <summary>Sets the shim of MonoToStereoProvider16.set_LeftVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MonoToStereoProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances.RightVolumeGet">
            <summary>Sets the shim of MonoToStereoProvider16.get_RightVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances.RightVolumeSetSingle">
            <summary>Sets the shim of MonoToStereoProvider16.set_RightVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMonoToStereoProvider16.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MonoToStereoProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMp3FileReader">
            <summary>Shim type of NAudio.Wave.Mp3FileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3FileReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3FileReader.#ctor(NAudio.Wave.Mp3FileReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3FileReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3FileReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3FileReader.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3FileReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ConstructorStream">
            <summary>Sets the shim of Mp3FileReader.Mp3FileReader(Stream inputStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ConstructorStreamMp3FileReaderFrameDecompressorBuilder">
            <summary>Sets the shim of Mp3FileReader.Mp3FileReader(Stream inputStream, FrameDecompressorBuilder frameDecompressorBuilder)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ConstructorString">
            <summary>Sets the shim of Mp3FileReader.Mp3FileReader(String mp3FileName)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ConstructorStringMp3FileReaderFrameDecompressorBuilder">
            <summary>Sets the shim of Mp3FileReader.Mp3FileReader(String mp3FileName, FrameDecompressorBuilder frameDecompressorBuilder)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.CreateAcmFrameDecompressorWaveFormat">
            <summary>Sets the shim of Mp3FileReader.CreateAcmFrameDecompressor(WaveFormat mp3Format)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.CreateTableOfContents">
            <summary>Sets the shim of Mp3FileReader.CreateTableOfContents()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.DisposeBoolean">
            <summary>Sets the shim of Mp3FileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.Id3v1TagGet">
            <summary>Sets the shim of Mp3FileReader.get_Id3v1Tag()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.Id3v2TagGet">
            <summary>Sets the shim of Mp3FileReader.get_Id3v2Tag()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.LengthGet">
            <summary>Sets the shim of Mp3FileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.Mp3WaveFormatGet">
            <summary>Sets the shim of Mp3FileReader.get_Mp3WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.Mp3WaveFormatSetMp3WaveFormat">
            <summary>Sets the shim of Mp3FileReader.set_Mp3WaveFormat(Mp3WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.PositionGet">
            <summary>Sets the shim of Mp3FileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.PositionSetInt64">
            <summary>Sets the shim of Mp3FileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ReadByteArrayInt32Int32">
            <summary>Sets the shim of Mp3FileReader.Read(Byte[] sampleBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ReadNextFrame">
            <summary>Sets the shim of Mp3FileReader.ReadNextFrame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ReadNextFrameBoolean">
            <summary>Sets the shim of Mp3FileReader.ReadNextFrame(Boolean readData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.TotalSeconds">
            <summary>Sets the shim of Mp3FileReader.TotalSeconds()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.ValidateFrameFormatMp3Frame">
            <summary>Sets the shim of Mp3FileReader.ValidateFrameFormat(Mp3Frame frame)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.WaveFormatGet">
            <summary>Sets the shim of Mp3FileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.XingHeaderGet">
            <summary>Sets the shim of Mp3FileReader.get_XingHeader()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.CreateTableOfContents">
            <summary>Sets the shim of Mp3FileReader.CreateTableOfContents()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Mp3FileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.Id3v1TagGet">
            <summary>Sets the shim of Mp3FileReader.get_Id3v1Tag()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.Id3v2TagGet">
            <summary>Sets the shim of Mp3FileReader.get_Id3v2Tag()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.LengthGet">
            <summary>Sets the shim of Mp3FileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.Mp3WaveFormatGet">
            <summary>Sets the shim of Mp3FileReader.get_Mp3WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.Mp3WaveFormatSetMp3WaveFormat">
            <summary>Sets the shim of Mp3FileReader.set_Mp3WaveFormat(Mp3WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.PositionGet">
            <summary>Sets the shim of Mp3FileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.PositionSetInt64">
            <summary>Sets the shim of Mp3FileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of Mp3FileReader.Read(Byte[] sampleBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.ReadNextFrame">
            <summary>Sets the shim of Mp3FileReader.ReadNextFrame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.ReadNextFrameBoolean">
            <summary>Sets the shim of Mp3FileReader.ReadNextFrame(Boolean readData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.TotalSeconds">
            <summary>Sets the shim of Mp3FileReader.TotalSeconds()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.ValidateFrameFormatMp3Frame">
            <summary>Sets the shim of Mp3FileReader.ValidateFrameFormat(Mp3Frame frame)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.WaveFormatGet">
            <summary>Sets the shim of Mp3FileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3FileReader.AllInstances.XingHeaderGet">
            <summary>Sets the shim of Mp3FileReader.get_XingHeader()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMp3Frame">
            <summary>Shim type of NAudio.Wave.Mp3Frame</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3Frame.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3Frame.#ctor(NAudio.Wave.Mp3Frame)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3Frame.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3Frame.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.BitRateGet">
            <summary>Sets the shim of Mp3Frame.get_BitRate()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.BitRateIndexGet">
            <summary>Sets the shim of Mp3Frame.get_BitRateIndex()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.BitRateIndexSetInt32">
            <summary>Sets the shim of Mp3Frame.set_BitRateIndex(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.BitRateSetInt32">
            <summary>Sets the shim of Mp3Frame.set_BitRate(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.ChannelExtensionGet">
            <summary>Sets the shim of Mp3Frame.get_ChannelExtension()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.ChannelExtensionSetInt32">
            <summary>Sets the shim of Mp3Frame.set_ChannelExtension(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.ChannelModeGet">
            <summary>Sets the shim of Mp3Frame.get_ChannelMode()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.ChannelModeSetChannelMode">
            <summary>Sets the shim of Mp3Frame.set_ChannelMode(ChannelMode value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.Constructor">
            <summary>Sets the shim of Mp3Frame.Mp3Frame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.CopyrightGet">
            <summary>Sets the shim of Mp3Frame.get_Copyright()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.CopyrightSetBoolean">
            <summary>Sets the shim of Mp3Frame.set_Copyright(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.CrcPresentGet">
            <summary>Sets the shim of Mp3Frame.get_CrcPresent()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.CrcPresentSetBoolean">
            <summary>Sets the shim of Mp3Frame.set_CrcPresent(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.FileOffsetGet">
            <summary>Sets the shim of Mp3Frame.get_FileOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.FileOffsetSetInt64">
            <summary>Sets the shim of Mp3Frame.set_FileOffset(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.FrameLengthGet">
            <summary>Sets the shim of Mp3Frame.get_FrameLength()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.FrameLengthSetInt32">
            <summary>Sets the shim of Mp3Frame.set_FrameLength(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.IsValidHeaderByteArrayMp3Frame">
            <summary>Sets the shim of Mp3Frame.IsValidHeader(Byte[] headerBytes, Mp3Frame frame)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.LoadFromStreamStream">
            <summary>Sets the shim of Mp3Frame.LoadFromStream(Stream input)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.LoadFromStreamStreamBoolean">
            <summary>Sets the shim of Mp3Frame.LoadFromStream(Stream input, Boolean readData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.MpegLayerGet">
            <summary>Sets the shim of Mp3Frame.get_MpegLayer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.MpegLayerSetMpegLayer">
            <summary>Sets the shim of Mp3Frame.set_MpegLayer(MpegLayer value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.MpegVersionGet">
            <summary>Sets the shim of Mp3Frame.get_MpegVersion()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.MpegVersionSetMpegVersion">
            <summary>Sets the shim of Mp3Frame.set_MpegVersion(MpegVersion value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.RawDataGet">
            <summary>Sets the shim of Mp3Frame.get_RawData()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.RawDataSetByteArray">
            <summary>Sets the shim of Mp3Frame.set_RawData(Byte[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.SampleCountGet">
            <summary>Sets the shim of Mp3Frame.get_SampleCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.SampleCountSetInt32">
            <summary>Sets the shim of Mp3Frame.set_SampleCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.SampleRateGet">
            <summary>Sets the shim of Mp3Frame.get_SampleRate()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.SampleRateSetInt32">
            <summary>Sets the shim of Mp3Frame.set_SampleRate(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.StaticConstructor">
            <summary>Sets the shim of Mp3Frame.Mp3Frame()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.BitRateGet">
            <summary>Sets the shim of Mp3Frame.get_BitRate()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.BitRateIndexGet">
            <summary>Sets the shim of Mp3Frame.get_BitRateIndex()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.BitRateIndexSetInt32">
            <summary>Sets the shim of Mp3Frame.set_BitRateIndex(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.BitRateSetInt32">
            <summary>Sets the shim of Mp3Frame.set_BitRate(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.ChannelExtensionGet">
            <summary>Sets the shim of Mp3Frame.get_ChannelExtension()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.ChannelExtensionSetInt32">
            <summary>Sets the shim of Mp3Frame.set_ChannelExtension(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.ChannelModeGet">
            <summary>Sets the shim of Mp3Frame.get_ChannelMode()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.ChannelModeSetChannelMode">
            <summary>Sets the shim of Mp3Frame.set_ChannelMode(ChannelMode value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.CopyrightGet">
            <summary>Sets the shim of Mp3Frame.get_Copyright()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.CopyrightSetBoolean">
            <summary>Sets the shim of Mp3Frame.set_Copyright(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.CrcPresentGet">
            <summary>Sets the shim of Mp3Frame.get_CrcPresent()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.CrcPresentSetBoolean">
            <summary>Sets the shim of Mp3Frame.set_CrcPresent(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.FileOffsetGet">
            <summary>Sets the shim of Mp3Frame.get_FileOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.FileOffsetSetInt64">
            <summary>Sets the shim of Mp3Frame.set_FileOffset(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.FrameLengthGet">
            <summary>Sets the shim of Mp3Frame.get_FrameLength()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.FrameLengthSetInt32">
            <summary>Sets the shim of Mp3Frame.set_FrameLength(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.MpegLayerGet">
            <summary>Sets the shim of Mp3Frame.get_MpegLayer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.MpegLayerSetMpegLayer">
            <summary>Sets the shim of Mp3Frame.set_MpegLayer(MpegLayer value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.MpegVersionGet">
            <summary>Sets the shim of Mp3Frame.get_MpegVersion()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.MpegVersionSetMpegVersion">
            <summary>Sets the shim of Mp3Frame.set_MpegVersion(MpegVersion value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.RawDataGet">
            <summary>Sets the shim of Mp3Frame.get_RawData()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.RawDataSetByteArray">
            <summary>Sets the shim of Mp3Frame.set_RawData(Byte[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.SampleCountGet">
            <summary>Sets the shim of Mp3Frame.get_SampleCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.SampleCountSetInt32">
            <summary>Sets the shim of Mp3Frame.set_SampleCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.SampleRateGet">
            <summary>Sets the shim of Mp3Frame.get_SampleRate()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3Frame.AllInstances.SampleRateSetInt32">
            <summary>Sets the shim of Mp3Frame.set_SampleRate(Int32 value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMp3WaveFormat">
            <summary>Shim type of NAudio.Wave.Mp3WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3WaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3WaveFormat.#ctor(NAudio.Wave.Mp3WaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3WaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMp3WaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3WaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMp3WaveFormat.ConstructorInt32Int32Int32Int32">
            <summary>Sets the shim of Mp3WaveFormat.Mp3WaveFormat(Int32 sampleRate, Int32 channels, Int32 blockSize, Int32 bitRate)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMp3WaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider">
            <summary>Shim type of NAudio.Wave.MultiplexingWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.#ctor(NAudio.Wave.MultiplexingWaveProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.ConnectInputToOutputInt32Int32">
            <summary>Sets the shim of MultiplexingWaveProvider.ConnectInputToOutput(Int32 inputChannel, Int32 outputChannel)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.ConstructorIEnumerableOfIWaveProviderInt32">
            <summary>Sets the shim of MultiplexingWaveProvider.MultiplexingWaveProvider(IEnumerable`1&lt;IWaveProvider&gt; inputs, Int32 numberOfOutputChannels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.InputChannelCountGet">
            <summary>Sets the shim of MultiplexingWaveProvider.get_InputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.OutputChannelCountGet">
            <summary>Sets the shim of MultiplexingWaveProvider.get_OutputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MultiplexingWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.WaveFormatGet">
            <summary>Sets the shim of MultiplexingWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.AllInstances.ConnectInputToOutputInt32Int32">
            <summary>Sets the shim of MultiplexingWaveProvider.ConnectInputToOutput(Int32 inputChannel, Int32 outputChannel)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.AllInstances.InputChannelCountGet">
            <summary>Sets the shim of MultiplexingWaveProvider.get_InputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.AllInstances.OutputChannelCountGet">
            <summary>Sets the shim of MultiplexingWaveProvider.get_OutputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of MultiplexingWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimMultiplexingWaveProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MultiplexingWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimRawSourceWaveStream">
            <summary>Shim type of NAudio.Wave.RawSourceWaveStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRawSourceWaveStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRawSourceWaveStream.#ctor(NAudio.Wave.RawSourceWaveStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRawSourceWaveStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRawSourceWaveStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRawSourceWaveStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRawSourceWaveStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.ConstructorStreamWaveFormat">
            <summary>Sets the shim of RawSourceWaveStream.RawSourceWaveStream(Stream sourceStream, WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.LengthGet">
            <summary>Sets the shim of RawSourceWaveStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.PositionGet">
            <summary>Sets the shim of RawSourceWaveStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.PositionSetInt64">
            <summary>Sets the shim of RawSourceWaveStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of RawSourceWaveStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.WaveFormatGet">
            <summary>Sets the shim of RawSourceWaveStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimRawSourceWaveStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.AllInstances.LengthGet">
            <summary>Sets the shim of RawSourceWaveStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.AllInstances.PositionGet">
            <summary>Sets the shim of RawSourceWaveStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of RawSourceWaveStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of RawSourceWaveStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRawSourceWaveStream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of RawSourceWaveStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimResamplerDmoStream">
            <summary>Shim type of NAudio.Wave.ResamplerDmoStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimResamplerDmoStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimResamplerDmoStream.#ctor(NAudio.Wave.ResamplerDmoStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimResamplerDmoStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimResamplerDmoStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimResamplerDmoStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimResamplerDmoStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.ConstructorIWaveProviderWaveFormat">
            <summary>Sets the shim of ResamplerDmoStream.ResamplerDmoStream(IWaveProvider inputProvider, WaveFormat outputFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.DisposeBoolean">
            <summary>Sets the shim of ResamplerDmoStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.InputToOutputPositionInt64">
            <summary>Sets the shim of ResamplerDmoStream.InputToOutputPosition(Int64 inputPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.LengthGet">
            <summary>Sets the shim of ResamplerDmoStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.OutputToInputPositionInt64">
            <summary>Sets the shim of ResamplerDmoStream.OutputToInputPosition(Int64 outputPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.PositionGet">
            <summary>Sets the shim of ResamplerDmoStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.PositionSetInt64">
            <summary>Sets the shim of ResamplerDmoStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of ResamplerDmoStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.WaveFormatGet">
            <summary>Sets the shim of ResamplerDmoStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ResamplerDmoStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.InputToOutputPositionInt64">
            <summary>Sets the shim of ResamplerDmoStream.InputToOutputPosition(Int64 inputPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.LengthGet">
            <summary>Sets the shim of ResamplerDmoStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.OutputToInputPositionInt64">
            <summary>Sets the shim of ResamplerDmoStream.OutputToInputPosition(Int64 outputPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.PositionGet">
            <summary>Sets the shim of ResamplerDmoStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of ResamplerDmoStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of ResamplerDmoStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimResamplerDmoStream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of ResamplerDmoStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimRiffChunk">
            <summary>Shim type of NAudio.Wave.RiffChunk</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRiffChunk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRiffChunk.#ctor(NAudio.Wave.RiffChunk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRiffChunk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimRiffChunk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.ConstructorInt32Int32Int64">
            <summary>Sets the shim of RiffChunk.RiffChunk(Int32 identifier, Int32 length, Int64 streamPosition)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.IdentifierAsStringGet">
            <summary>Sets the shim of RiffChunk.get_IdentifierAsString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.IdentifierGet">
            <summary>Sets the shim of RiffChunk.get_Identifier()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.LengthGet">
            <summary>Sets the shim of RiffChunk.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.StreamPositionGet">
            <summary>Sets the shim of RiffChunk.get_StreamPosition()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimRiffChunk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.AllInstances.IdentifierAsStringGet">
            <summary>Sets the shim of RiffChunk.get_IdentifierAsString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.AllInstances.IdentifierGet">
            <summary>Sets the shim of RiffChunk.get_Identifier()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.AllInstances.LengthGet">
            <summary>Sets the shim of RiffChunk.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimRiffChunk.AllInstances.StreamPositionGet">
            <summary>Sets the shim of RiffChunk.get_StreamPosition()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimSampleEventArgs">
            <summary>Shim type of NAudio.Wave.SampleEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSampleEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSampleEventArgs.#ctor(NAudio.Wave.SampleEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSampleEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSampleEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.ConstructorSingleSingle">
            <summary>Sets the shim of SampleEventArgs.SampleEventArgs(Single left, Single right)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.LeftGet">
            <summary>Sets the shim of SampleEventArgs.get_Left()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.LeftSetSingle">
            <summary>Sets the shim of SampleEventArgs.set_Left(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.RightGet">
            <summary>Sets the shim of SampleEventArgs.get_Right()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.RightSetSingle">
            <summary>Sets the shim of SampleEventArgs.set_Right(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimSampleEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.AllInstances.LeftGet">
            <summary>Sets the shim of SampleEventArgs.get_Left()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.AllInstances.LeftSetSingle">
            <summary>Sets the shim of SampleEventArgs.set_Left(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.AllInstances.RightGet">
            <summary>Sets the shim of SampleEventArgs.get_Right()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSampleEventArgs.AllInstances.RightSetSingle">
            <summary>Sets the shim of SampleEventArgs.set_Right(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimSimpleCompressorStream">
            <summary>Shim type of NAudio.Wave.SimpleCompressorStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSimpleCompressorStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSimpleCompressorStream.#ctor(NAudio.Wave.SimpleCompressorStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSimpleCompressorStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSimpleCompressorStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSimpleCompressorStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimSimpleCompressorStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AttackGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Attack()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AttackSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Attack(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.BlockAlignGet">
            <summary>Sets the shim of SimpleCompressorStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ConstructorWaveStream">
            <summary>Sets the shim of SimpleCompressorStream.SimpleCompressorStream(WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.DisposeBoolean">
            <summary>Sets the shim of SimpleCompressorStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.EnabledGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Enabled()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.EnabledSetBoolean">
            <summary>Sets the shim of SimpleCompressorStream.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.HasDataInt32">
            <summary>Sets the shim of SimpleCompressorStream.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.LengthGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.MakeUpGainGet">
            <summary>Sets the shim of SimpleCompressorStream.get_MakeUpGain()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.MakeUpGainSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_MakeUpGain(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.PositionGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.PositionSetInt64">
            <summary>Sets the shim of SimpleCompressorStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.RatioGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Ratio()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.RatioSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Ratio(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SimpleCompressorStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ReadSamplesByteArrayInt32DoubleOutDoubleOut">
            <summary>Sets the shim of SimpleCompressorStream.ReadSamples(Byte[] buffer, Int32 start, Double&amp; left, Double&amp; right)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ReleaseGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Release()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ReleaseSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Release(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ThresholdGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Threshold()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.ThresholdSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Threshold(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.WaveFormatGet">
            <summary>Sets the shim of SimpleCompressorStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.WriteSamplesByteArrayInt32DoubleDouble">
            <summary>Sets the shim of SimpleCompressorStream.WriteSamples(Byte[] buffer, Int32 start, Double left, Double right)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.AttackGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Attack()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.AttackSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Attack(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.BlockAlignGet">
            <summary>Sets the shim of SimpleCompressorStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SimpleCompressorStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.EnabledGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Enabled()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of SimpleCompressorStream.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.HasDataInt32">
            <summary>Sets the shim of SimpleCompressorStream.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.LengthGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.MakeUpGainGet">
            <summary>Sets the shim of SimpleCompressorStream.get_MakeUpGain()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.MakeUpGainSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_MakeUpGain(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.PositionGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of SimpleCompressorStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.RatioGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Ratio()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.RatioSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Ratio(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SimpleCompressorStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.ReadSamplesByteArrayInt32DoubleOutDoubleOut">
            <summary>Sets the shim of SimpleCompressorStream.ReadSamples(Byte[] buffer, Int32 start, Double&amp; left, Double&amp; right)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.ReleaseGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Release()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.ReleaseSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Release(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.ThresholdGet">
            <summary>Sets the shim of SimpleCompressorStream.get_Threshold()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.ThresholdSetDouble">
            <summary>Sets the shim of SimpleCompressorStream.set_Threshold(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of SimpleCompressorStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimSimpleCompressorStream.AllInstances.WriteSamplesByteArrayInt32DoubleDouble">
            <summary>Sets the shim of SimpleCompressorStream.WriteSamples(Byte[] buffer, Int32 start, Double left, Double right)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimStereoToMonoProvider16">
            <summary>Shim type of NAudio.Wave.StereoToMonoProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.#ctor(NAudio.Wave.StereoToMonoProvider16)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.ConstructorIWaveProvider">
            <summary>Sets the shim of StereoToMonoProvider16.StereoToMonoProvider16(IWaveProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.LeftVolumeGet">
            <summary>Sets the shim of StereoToMonoProvider16.get_LeftVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.LeftVolumeSetSingle">
            <summary>Sets the shim of StereoToMonoProvider16.set_LeftVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.ReadByteArrayInt32Int32">
            <summary>Sets the shim of StereoToMonoProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.RightVolumeGet">
            <summary>Sets the shim of StereoToMonoProvider16.get_RightVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.RightVolumeSetSingle">
            <summary>Sets the shim of StereoToMonoProvider16.set_RightVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.WaveFormatGet">
            <summary>Sets the shim of StereoToMonoProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances.LeftVolumeGet">
            <summary>Sets the shim of StereoToMonoProvider16.get_LeftVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances.LeftVolumeSetSingle">
            <summary>Sets the shim of StereoToMonoProvider16.set_LeftVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of StereoToMonoProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances.RightVolumeGet">
            <summary>Sets the shim of StereoToMonoProvider16.get_RightVolume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances.RightVolumeSetSingle">
            <summary>Sets the shim of StereoToMonoProvider16.set_RightVolume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStereoToMonoProvider16.AllInstances.WaveFormatGet">
            <summary>Sets the shim of StereoToMonoProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimStoppedEventArgs">
            <summary>Shim type of NAudio.Wave.StoppedEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStoppedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStoppedEventArgs.#ctor(NAudio.Wave.StoppedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStoppedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimStoppedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStoppedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStoppedEventArgs.ConstructorException">
            <summary>Sets the shim of StoppedEventArgs.StoppedEventArgs(Exception exception)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStoppedEventArgs.ExceptionGet">
            <summary>Sets the shim of StoppedEventArgs.get_Exception()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimStoppedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimStoppedEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of StoppedEventArgs.get_Exception()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat">
            <summary>Shim type of NAudio.Wave.TrueSpeechWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.#ctor(NAudio.Wave.TrueSpeechWaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.Constructor">
            <summary>Sets the shim of TrueSpeechWaveFormat.TrueSpeechWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.SerializeBinaryWriter">
            <summary>Sets the shim of TrueSpeechWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimTrueSpeechWaveFormat.AllInstances.SerializeBinaryWriter">
            <summary>Sets the shim of TrueSpeechWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimVolumeWaveProvider16">
            <summary>Shim type of NAudio.Wave.VolumeWaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.#ctor(NAudio.Wave.VolumeWaveProvider16)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.ConstructorIWaveProvider">
            <summary>Sets the shim of VolumeWaveProvider16.VolumeWaveProvider16(IWaveProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.ReadByteArrayInt32Int32">
            <summary>Sets the shim of VolumeWaveProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.VolumeGet">
            <summary>Sets the shim of VolumeWaveProvider16.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.VolumeSetSingle">
            <summary>Sets the shim of VolumeWaveProvider16.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.WaveFormatGet">
            <summary>Sets the shim of VolumeWaveProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of VolumeWaveProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.AllInstances.VolumeGet">
            <summary>Sets the shim of VolumeWaveProvider16.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of VolumeWaveProvider16.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimVolumeWaveProvider16.AllInstances.WaveFormatGet">
            <summary>Sets the shim of VolumeWaveProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture">
            <summary>Shim type of NAudio.Wave.WasapiLoopbackCapture</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.#ctor(NAudio.Wave.WasapiLoopbackCapture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.Bind(NAudio.Wave.IWaveIn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.Constructor">
            <summary>Sets the shim of WasapiLoopbackCapture.WasapiLoopbackCapture()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.ConstructorMMDevice">
            <summary>Sets the shim of WasapiLoopbackCapture.WasapiLoopbackCapture(MMDevice captureDevice)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.GetAudioClientStreamFlags">
            <summary>Sets the shim of WasapiLoopbackCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.GetDefaultLoopbackCaptureDevice">
            <summary>Sets the shim of WasapiLoopbackCapture.GetDefaultLoopbackCaptureDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.WaveFormatGet">
            <summary>Sets the shim of WasapiLoopbackCapture.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WasapiLoopbackCapture.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.AllInstances.GetAudioClientStreamFlags">
            <summary>Sets the shim of WasapiLoopbackCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WasapiLoopbackCapture.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiLoopbackCapture.AllInstances.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WasapiLoopbackCapture.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWasapiOut">
            <summary>Shim type of NAudio.Wave.WasapiOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.#ctor(NAudio.Wave.WasapiOut)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.Bind(NAudio.Wave.IWavePlayer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.Bind(NAudio.Wave.IWavePosition)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWasapiOut.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.ConstructorAudioClientShareModeBooleanInt32">
            <summary>Sets the shim of WasapiOut.WasapiOut(AudioClientShareMode shareMode, Boolean useEventSync, Int32 latency)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.ConstructorAudioClientShareModeInt32">
            <summary>Sets the shim of WasapiOut.WasapiOut(AudioClientShareMode shareMode, Int32 latency)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.ConstructorMMDeviceAudioClientShareModeBooleanInt32">
            <summary>Sets the shim of WasapiOut.WasapiOut(MMDevice device, AudioClientShareMode shareMode, Boolean useEventSync, Int32 latency)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.Dispose">
            <summary>Sets the shim of WasapiOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.FillBufferIWaveProviderInt32">
            <summary>Sets the shim of WasapiOut.FillBuffer(IWaveProvider playbackProvider, Int32 frameCount)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.GetDefaultAudioEndpoint">
            <summary>Sets the shim of WasapiOut.GetDefaultAudioEndpoint()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.GetPosition">
            <summary>Sets the shim of WasapiOut.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.InitIWaveProvider">
            <summary>Sets the shim of WasapiOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.OutputWaveFormatGet">
            <summary>Sets the shim of WasapiOut.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.Pause">
            <summary>Sets the shim of WasapiOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.Play">
            <summary>Sets the shim of WasapiOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.PlayThread">
            <summary>Sets the shim of WasapiOut.PlayThread()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.PlaybackStateGet">
            <summary>Sets the shim of WasapiOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.RaisePlaybackStoppedException">
            <summary>Sets the shim of WasapiOut.RaisePlaybackStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.Stop">
            <summary>Sets the shim of WasapiOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.VolumeGet">
            <summary>Sets the shim of WasapiOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.VolumeSetSingle">
            <summary>Sets the shim of WasapiOut.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.Dispose">
            <summary>Sets the shim of WasapiOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.FillBufferIWaveProviderInt32">
            <summary>Sets the shim of WasapiOut.FillBuffer(IWaveProvider playbackProvider, Int32 frameCount)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.GetPosition">
            <summary>Sets the shim of WasapiOut.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.InitIWaveProvider">
            <summary>Sets the shim of WasapiOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.OutputWaveFormatGet">
            <summary>Sets the shim of WasapiOut.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.Pause">
            <summary>Sets the shim of WasapiOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.Play">
            <summary>Sets the shim of WasapiOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.PlayThread">
            <summary>Sets the shim of WasapiOut.PlayThread()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.PlaybackStateGet">
            <summary>Sets the shim of WasapiOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WasapiOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.RaisePlaybackStoppedException">
            <summary>Sets the shim of WasapiOut.RaisePlaybackStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.Stop">
            <summary>Sets the shim of WasapiOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.VolumeGet">
            <summary>Sets the shim of WasapiOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWasapiOut.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of WasapiOut.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWave16ToFloatProvider">
            <summary>Shim type of NAudio.Wave.Wave16ToFloatProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.#ctor(NAudio.Wave.Wave16ToFloatProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.ConstructorIWaveProvider">
            <summary>Sets the shim of Wave16ToFloatProvider.Wave16ToFloatProvider(IWaveProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.ReadByteArrayInt32Int32">
            <summary>Sets the shim of Wave16ToFloatProvider.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.VolumeGet">
            <summary>Sets the shim of Wave16ToFloatProvider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.VolumeSetSingle">
            <summary>Sets the shim of Wave16ToFloatProvider.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.WaveFormatGet">
            <summary>Sets the shim of Wave16ToFloatProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of Wave16ToFloatProvider.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.AllInstances.VolumeGet">
            <summary>Sets the shim of Wave16ToFloatProvider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of Wave16ToFloatProvider.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave16ToFloatProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of Wave16ToFloatProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWave32To16Stream">
            <summary>Shim type of NAudio.Wave.Wave32To16Stream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave32To16Stream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave32To16Stream.#ctor(NAudio.Wave.Wave32To16Stream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave32To16Stream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave32To16Stream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave32To16Stream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWave32To16Stream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.BlockAlignGet">
            <summary>Sets the shim of Wave32To16Stream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.ClipGet">
            <summary>Sets the shim of Wave32To16Stream.get_Clip()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.ClipSetBoolean">
            <summary>Sets the shim of Wave32To16Stream.set_Clip(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.ConstructorWaveStream">
            <summary>Sets the shim of Wave32To16Stream.Wave32To16Stream(WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.Convert32To16ByteArrayInt32ByteArrayInt32">
            <summary>Sets the shim of Wave32To16Stream.Convert32To16(Byte[] destBuffer, Int32 offset, Byte[] sourceBuffer, Int32 bytesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.DisposeBoolean">
            <summary>Sets the shim of Wave32To16Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.LengthGet">
            <summary>Sets the shim of Wave32To16Stream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.PositionGet">
            <summary>Sets the shim of Wave32To16Stream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.PositionSetInt64">
            <summary>Sets the shim of Wave32To16Stream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of Wave32To16Stream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.VolumeGet">
            <summary>Sets the shim of Wave32To16Stream.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.VolumeSetSingle">
            <summary>Sets the shim of Wave32To16Stream.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.WaveFormatGet">
            <summary>Sets the shim of Wave32To16Stream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.BlockAlignGet">
            <summary>Sets the shim of Wave32To16Stream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.ClipGet">
            <summary>Sets the shim of Wave32To16Stream.get_Clip()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.ClipSetBoolean">
            <summary>Sets the shim of Wave32To16Stream.set_Clip(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.Convert32To16ByteArrayInt32ByteArrayInt32">
            <summary>Sets the shim of Wave32To16Stream.Convert32To16(Byte[] destBuffer, Int32 offset, Byte[] sourceBuffer, Int32 bytesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Wave32To16Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.LengthGet">
            <summary>Sets the shim of Wave32To16Stream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.PositionGet">
            <summary>Sets the shim of Wave32To16Stream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of Wave32To16Stream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of Wave32To16Stream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.VolumeGet">
            <summary>Sets the shim of Wave32To16Stream.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of Wave32To16Stream.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWave32To16Stream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of Wave32To16Stream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveBuffer">
            <summary>Shim type of NAudio.Wave.WaveBuffer</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveBuffer.#ctor(NAudio.Wave.WaveBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveBuffer.Bind(NAudio.Wave.IWaveBuffer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.BindToByteArray">
            <summary>Sets the shim of WaveBuffer.BindTo(Byte[] bufferToBoundTo)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ByteBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_ByteBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ByteBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_ByteBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ByteBufferGet">
            <summary>Sets the shim of WaveBuffer.get_ByteBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.CheckValidityCountStringInt32Int32">
            <summary>Sets the shim of WaveBuffer.CheckValidityCount(String argName, Int32 value, Int32 sizeOfValue)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.Clear">
            <summary>Sets the shim of WaveBuffer.Clear()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ConstructorByteArray">
            <summary>Sets the shim of WaveBuffer.WaveBuffer(Byte[] bufferToBoundTo)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ConstructorInt32">
            <summary>Sets the shim of WaveBuffer.WaveBuffer(Int32 sizeToAllocateInBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.CopyArray">
            <summary>Sets the shim of WaveBuffer.Copy(Array destinationArray)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.FloatBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_FloatBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.FloatBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_FloatBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.FloatBufferGet">
            <summary>Sets the shim of WaveBuffer.get_FloatBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ImplicitOpWaveBufferByteArray">
            <summary>Sets the shim of WaveBuffer.op_Implicit(WaveBuffer waveBuffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ImplicitOpWaveBufferInt16Array">
            <summary>Sets the shim of WaveBuffer.op_Implicit(WaveBuffer waveBuffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ImplicitOpWaveBufferInt32Array">
            <summary>Sets the shim of WaveBuffer.op_Implicit(WaveBuffer waveBuffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ImplicitOpWaveBufferSingleArray">
            <summary>Sets the shim of WaveBuffer.op_Implicit(WaveBuffer waveBuffer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.IntBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_IntBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.IntBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_IntBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.IntBufferGet">
            <summary>Sets the shim of WaveBuffer.get_IntBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.MaxSizeGet">
            <summary>Sets the shim of WaveBuffer.get_MaxSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ShortBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_ShortBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ShortBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_ShortBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.ShortBufferGet">
            <summary>Sets the shim of WaveBuffer.get_ShortBuffer()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.BindToByteArray">
            <summary>Sets the shim of WaveBuffer.BindTo(Byte[] bufferToBoundTo)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.ByteBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_ByteBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.ByteBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_ByteBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.ByteBufferGet">
            <summary>Sets the shim of WaveBuffer.get_ByteBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.CheckValidityCountStringInt32Int32">
            <summary>Sets the shim of WaveBuffer.CheckValidityCount(String argName, Int32 value, Int32 sizeOfValue)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.Clear">
            <summary>Sets the shim of WaveBuffer.Clear()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.CopyArray">
            <summary>Sets the shim of WaveBuffer.Copy(Array destinationArray)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.FloatBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_FloatBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.FloatBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_FloatBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.FloatBufferGet">
            <summary>Sets the shim of WaveBuffer.get_FloatBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.IntBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_IntBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.IntBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_IntBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.IntBufferGet">
            <summary>Sets the shim of WaveBuffer.get_IntBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.MaxSizeGet">
            <summary>Sets the shim of WaveBuffer.get_MaxSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.ShortBufferCountGet">
            <summary>Sets the shim of WaveBuffer.get_ShortBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.ShortBufferCountSetInt32">
            <summary>Sets the shim of WaveBuffer.set_ShortBufferCount(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveBuffer.AllInstances.ShortBufferGet">
            <summary>Sets the shim of WaveBuffer.get_ShortBuffer()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveCallbackInfo">
            <summary>Shim type of NAudio.Wave.WaveCallbackInfo</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveCallbackInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveCallbackInfo.#ctor(NAudio.Wave.WaveCallbackInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveCallbackInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveCallbackInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.ConstructorWaveCallbackStrategyIntPtr">
            <summary>Sets the shim of WaveCallbackInfo.WaveCallbackInfo(WaveCallbackStrategy strategy, IntPtr handle)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.Disconnect">
            <summary>Sets the shim of WaveCallbackInfo.Disconnect()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.ExistingWindowIntPtr">
            <summary>Sets the shim of WaveCallbackInfo.ExistingWindow(IntPtr handle)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.FunctionCallback">
            <summary>Sets the shim of WaveCallbackInfo.FunctionCallback()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.HandleGet">
            <summary>Sets the shim of WaveCallbackInfo.get_Handle()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.HandleSetIntPtr">
            <summary>Sets the shim of WaveCallbackInfo.set_Handle(IntPtr value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.NewWindow">
            <summary>Sets the shim of WaveCallbackInfo.NewWindow()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.StrategyGet">
            <summary>Sets the shim of WaveCallbackInfo.get_Strategy()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.StrategySetWaveCallbackStrategy">
            <summary>Sets the shim of WaveCallbackInfo.set_Strategy(WaveCallbackStrategy value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveCallbackInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.AllInstances.Disconnect">
            <summary>Sets the shim of WaveCallbackInfo.Disconnect()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.AllInstances.HandleGet">
            <summary>Sets the shim of WaveCallbackInfo.get_Handle()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.AllInstances.HandleSetIntPtr">
            <summary>Sets the shim of WaveCallbackInfo.set_Handle(IntPtr value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.AllInstances.StrategyGet">
            <summary>Sets the shim of WaveCallbackInfo.get_Strategy()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveCallbackInfo.AllInstances.StrategySetWaveCallbackStrategy">
            <summary>Sets the shim of WaveCallbackInfo.set_Strategy(WaveCallbackStrategy value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveChannel32">
            <summary>Shim type of NAudio.Wave.WaveChannel32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.#ctor(NAudio.Wave.WaveChannel32)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.Bind(NAudio.Wave.ISampleNotifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveChannel32.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.BlockAlignGet">
            <summary>Sets the shim of WaveChannel32.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.ConstructorWaveStream">
            <summary>Sets the shim of WaveChannel32.WaveChannel32(WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.ConstructorWaveStreamSingleSingle">
            <summary>Sets the shim of WaveChannel32.WaveChannel32(WaveStream sourceStream, Single volume, Single pan)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.DestToSourceInt64">
            <summary>Sets the shim of WaveChannel32.DestToSource(Int64 destBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.DisposeBoolean">
            <summary>Sets the shim of WaveChannel32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.HasDataInt32">
            <summary>Sets the shim of WaveChannel32.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.LengthGet">
            <summary>Sets the shim of WaveChannel32.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.PadWithZeroesGet">
            <summary>Sets the shim of WaveChannel32.get_PadWithZeroes()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.PadWithZeroesSetBoolean">
            <summary>Sets the shim of WaveChannel32.set_PadWithZeroes(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.PanGet">
            <summary>Sets the shim of WaveChannel32.get_Pan()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.PanSetSingle">
            <summary>Sets the shim of WaveChannel32.set_Pan(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.PositionGet">
            <summary>Sets the shim of WaveChannel32.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.PositionSetInt64">
            <summary>Sets the shim of WaveChannel32.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.RaiseSampleSingleSingle">
            <summary>Sets the shim of WaveChannel32.RaiseSample(Single left, Single right)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveChannel32.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.SampleAddEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of WaveChannel32.add_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.SampleRemoveEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of WaveChannel32.remove_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.SourceToDestInt64">
            <summary>Sets the shim of WaveChannel32.SourceToDest(Int64 sourceBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.VolumeGet">
            <summary>Sets the shim of WaveChannel32.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.VolumeSetSingle">
            <summary>Sets the shim of WaveChannel32.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.WaveFormatGet">
            <summary>Sets the shim of WaveChannel32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.BlockAlignGet">
            <summary>Sets the shim of WaveChannel32.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.DestToSourceInt64">
            <summary>Sets the shim of WaveChannel32.DestToSource(Int64 destBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveChannel32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.HasDataInt32">
            <summary>Sets the shim of WaveChannel32.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.LengthGet">
            <summary>Sets the shim of WaveChannel32.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.PadWithZeroesGet">
            <summary>Sets the shim of WaveChannel32.get_PadWithZeroes()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.PadWithZeroesSetBoolean">
            <summary>Sets the shim of WaveChannel32.set_PadWithZeroes(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.PanGet">
            <summary>Sets the shim of WaveChannel32.get_Pan()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.PanSetSingle">
            <summary>Sets the shim of WaveChannel32.set_Pan(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.PositionGet">
            <summary>Sets the shim of WaveChannel32.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.PositionSetInt64">
            <summary>Sets the shim of WaveChannel32.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.RaiseSampleSingleSingle">
            <summary>Sets the shim of WaveChannel32.RaiseSample(Single left, Single right)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveChannel32.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.SampleAddEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of WaveChannel32.add_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.SampleRemoveEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of WaveChannel32.remove_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.SourceToDestInt64">
            <summary>Sets the shim of WaveChannel32.SourceToDest(Int64 sourceBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.VolumeGet">
            <summary>Sets the shim of WaveChannel32.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of WaveChannel32.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveChannel32.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveChannel32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveExtensionMethods">
            <summary>Shim type of NAudio.Wave.WaveExtensionMethods</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveExtensionMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveExtensionMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveExtensionMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveExtensionMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveExtensionMethods.InitIWavePlayerISampleProviderBoolean">
            <summary>Sets the shim of WaveExtensionMethods.Init(IWavePlayer wavePlayer, ISampleProvider sampleProvider, Boolean convertTo16Bit)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveExtensionMethods.ToSampleProviderIWaveProvider">
            <summary>Sets the shim of WaveExtensionMethods.ToSampleProvider(IWaveProvider waveProvider)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFileReader">
            <summary>Shim type of NAudio.Wave.WaveFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileReader.#ctor(NAudio.Wave.WaveFileReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileReader.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.ConstructorStream">
            <summary>Sets the shim of WaveFileReader.WaveFileReader(Stream inputStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.ConstructorString">
            <summary>Sets the shim of WaveFileReader.WaveFileReader(String waveFile)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.DisposeBoolean">
            <summary>Sets the shim of WaveFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.ExtraChunksGet">
            <summary>Sets the shim of WaveFileReader.get_ExtraChunks()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.GetChunkDataRiffChunk">
            <summary>Sets the shim of WaveFileReader.GetChunkData(RiffChunk chunk)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.LengthGet">
            <summary>Sets the shim of WaveFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.PositionGet">
            <summary>Sets the shim of WaveFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.PositionSetInt64">
            <summary>Sets the shim of WaveFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.ReadNextSampleFrame">
            <summary>Sets the shim of WaveFileReader.ReadNextSampleFrame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.SampleCountGet">
            <summary>Sets the shim of WaveFileReader.get_SampleCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.TryReadFloatSingleOut">
            <summary>Sets the shim of WaveFileReader.TryReadFloat(Single&amp; sampleValue)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.WaveFormatGet">
            <summary>Sets the shim of WaveFileReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.ExtraChunksGet">
            <summary>Sets the shim of WaveFileReader.get_ExtraChunks()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.GetChunkDataRiffChunk">
            <summary>Sets the shim of WaveFileReader.GetChunkData(RiffChunk chunk)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.LengthGet">
            <summary>Sets the shim of WaveFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.PositionGet">
            <summary>Sets the shim of WaveFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.PositionSetInt64">
            <summary>Sets the shim of WaveFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.ReadNextSampleFrame">
            <summary>Sets the shim of WaveFileReader.ReadNextSampleFrame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.SampleCountGet">
            <summary>Sets the shim of WaveFileReader.get_SampleCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.TryReadFloatSingleOut">
            <summary>Sets the shim of WaveFileReader.TryReadFloat(Single&amp; sampleValue)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileReader.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveFileReader.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFileWriter">
            <summary>Shim type of NAudio.Wave.WaveFileWriter</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileWriter.#ctor(NAudio.Wave.WaveFileWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFileWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.CanReadGet">
            <summary>Sets the shim of WaveFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.CanSeekGet">
            <summary>Sets the shim of WaveFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.CanWriteGet">
            <summary>Sets the shim of WaveFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.ConstructorStreamWaveFormat">
            <summary>Sets the shim of WaveFileWriter.WaveFileWriter(Stream outStream, WaveFormat format)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.ConstructorStringWaveFormat">
            <summary>Sets the shim of WaveFileWriter.WaveFileWriter(String filename, WaveFormat format)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.CreateFactChunk">
            <summary>Sets the shim of WaveFileWriter.CreateFactChunk()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.CreateWaveFile16StringISampleProvider">
            <summary>Sets the shim of WaveFileWriter.CreateWaveFile16(String filename, ISampleProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.CreateWaveFileStringIWaveProvider">
            <summary>Sets the shim of WaveFileWriter.CreateWaveFile(String filename, IWaveProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.DisposeBoolean">
            <summary>Sets the shim of WaveFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.FilenameGet">
            <summary>Sets the shim of WaveFileWriter.get_Filename()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.Flush">
            <summary>Sets the shim of WaveFileWriter.Flush()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.HasFactChunk">
            <summary>Sets the shim of WaveFileWriter.HasFactChunk()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.LengthGet">
            <summary>Sets the shim of WaveFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.PositionGet">
            <summary>Sets the shim of WaveFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.PositionSetInt64">
            <summary>Sets the shim of WaveFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.SeekInt64SeekOrigin">
            <summary>Sets the shim of WaveFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.SetLengthInt64">
            <summary>Sets the shim of WaveFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.UpdateDataChunkBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateDataChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.UpdateFactChunkBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateFactChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.UpdateHeaderBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.UpdateRiffChunkBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateRiffChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WaveFormatGet">
            <summary>Sets the shim of WaveFileWriter.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteDataByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteData(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteDataChunkHeader">
            <summary>Sets the shim of WaveFileWriter.WriteDataChunkHeader()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteDataInt16ArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteData(Int16[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteSampleSingle">
            <summary>Sets the shim of WaveFileWriter.WriteSample(Single sample)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteSamplesInt16ArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteSamples(Int16[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.WriteSamplesSingleArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteSamples(Single[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.CanReadGet">
            <summary>Sets the shim of WaveFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.CanSeekGet">
            <summary>Sets the shim of WaveFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.CanWriteGet">
            <summary>Sets the shim of WaveFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.CreateFactChunk">
            <summary>Sets the shim of WaveFileWriter.CreateFactChunk()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.FilenameGet">
            <summary>Sets the shim of WaveFileWriter.get_Filename()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.Flush">
            <summary>Sets the shim of WaveFileWriter.Flush()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.HasFactChunk">
            <summary>Sets the shim of WaveFileWriter.HasFactChunk()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.LengthGet">
            <summary>Sets the shim of WaveFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.PositionGet">
            <summary>Sets the shim of WaveFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.PositionSetInt64">
            <summary>Sets the shim of WaveFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of WaveFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.SetLengthInt64">
            <summary>Sets the shim of WaveFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.UpdateDataChunkBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateDataChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.UpdateFactChunkBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateFactChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.UpdateHeaderBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.UpdateRiffChunkBinaryWriter">
            <summary>Sets the shim of WaveFileWriter.UpdateRiffChunk(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveFileWriter.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteDataByteArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteData(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteDataChunkHeader">
            <summary>Sets the shim of WaveFileWriter.WriteDataChunkHeader()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteDataInt16ArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteData(Int16[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteSampleSingle">
            <summary>Sets the shim of WaveFileWriter.WriteSample(Single sample)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteSamplesInt16ArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteSamples(Int16[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFileWriter.AllInstances.WriteSamplesSingleArrayInt32Int32">
            <summary>Sets the shim of WaveFileWriter.WriteSamples(Single[] samples, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider">
            <summary>Shim type of NAudio.Wave.WaveFloatTo16Provider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.#ctor(NAudio.Wave.WaveFloatTo16Provider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.ConstructorIWaveProvider">
            <summary>Sets the shim of WaveFloatTo16Provider.WaveFloatTo16Provider(IWaveProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFloatTo16Provider.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.VolumeGet">
            <summary>Sets the shim of WaveFloatTo16Provider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.VolumeSetSingle">
            <summary>Sets the shim of WaveFloatTo16Provider.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.WaveFormatGet">
            <summary>Sets the shim of WaveFloatTo16Provider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFloatTo16Provider.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.AllInstances.VolumeGet">
            <summary>Sets the shim of WaveFloatTo16Provider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of WaveFloatTo16Provider.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFloatTo16Provider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveFloatTo16Provider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormat">
            <summary>Shim type of NAudio.Wave.WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormat.#ctor(NAudio.Wave.WaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AverageBytesPerSecondGet">
            <summary>Sets the shim of WaveFormat.get_AverageBytesPerSecond()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.BitsPerSampleGet">
            <summary>Sets the shim of WaveFormat.get_BitsPerSample()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.BlockAlignGet">
            <summary>Sets the shim of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ChannelsGet">
            <summary>Sets the shim of WaveFormat.get_Channels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.Constructor">
            <summary>Sets the shim of WaveFormat.WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ConstructorBinaryReader">
            <summary>Sets the shim of WaveFormat.WaveFormat(BinaryReader br)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ConstructorInt32Int32">
            <summary>Sets the shim of WaveFormat.WaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ConstructorInt32Int32Int32">
            <summary>Sets the shim of WaveFormat.WaveFormat(Int32 rate, Int32 bits, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ConvertLatencyToByteSizeInt32">
            <summary>Sets the shim of WaveFormat.ConvertLatencyToByteSize(Int32 milliseconds)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.CreateALawFormatInt32Int32">
            <summary>Sets the shim of WaveFormat.CreateALawFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.CreateCustomFormatWaveFormatEncodingInt32Int32Int32Int32Int32">
            <summary>Sets the shim of WaveFormat.CreateCustomFormat(WaveFormatEncoding tag, Int32 sampleRate, Int32 channels, Int32 averageBytesPerSecond, Int32 blockAlign, Int32 bitsPerSample)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.CreateIeeeFloatWaveFormatInt32Int32">
            <summary>Sets the shim of WaveFormat.CreateIeeeFloatWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.CreateMuLawFormatInt32Int32">
            <summary>Sets the shim of WaveFormat.CreateMuLawFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.EncodingGet">
            <summary>Sets the shim of WaveFormat.get_Encoding()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.EqualsObject">
            <summary>Sets the shim of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ExtraSizeGet">
            <summary>Sets the shim of WaveFormat.get_ExtraSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.FromFormatChunkBinaryReaderInt32">
            <summary>Sets the shim of WaveFormat.FromFormatChunk(BinaryReader br, Int32 formatChunkLength)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.GetHashCode">
            <summary>Sets the shim of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.MarshalFromPtrIntPtr">
            <summary>Sets the shim of WaveFormat.MarshalFromPtr(IntPtr pointer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.MarshalToPtrWaveFormat">
            <summary>Sets the shim of WaveFormat.MarshalToPtr(WaveFormat format)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ReadWaveFormatBinaryReaderInt32">
            <summary>Sets the shim of WaveFormat.ReadWaveFormat(BinaryReader br, Int32 formatChunkLength)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.SampleRateGet">
            <summary>Sets the shim of WaveFormat.get_SampleRate()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.SerializeBinaryWriter">
            <summary>Sets the shim of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.ToString">
            <summary>Sets the shim of WaveFormat.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.AverageBytesPerSecondGet">
            <summary>Sets the shim of WaveFormat.get_AverageBytesPerSecond()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.BitsPerSampleGet">
            <summary>Sets the shim of WaveFormat.get_BitsPerSample()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.BlockAlignGet">
            <summary>Sets the shim of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.ChannelsGet">
            <summary>Sets the shim of WaveFormat.get_Channels()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.ConvertLatencyToByteSizeInt32">
            <summary>Sets the shim of WaveFormat.ConvertLatencyToByteSize(Int32 milliseconds)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.EncodingGet">
            <summary>Sets the shim of WaveFormat.get_Encoding()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.EqualsObject">
            <summary>Sets the shim of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.ExtraSizeGet">
            <summary>Sets the shim of WaveFormat.get_ExtraSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.GetHashCode01">
            <summary>Sets the shim of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.ReadWaveFormatBinaryReaderInt32">
            <summary>Sets the shim of WaveFormat.ReadWaveFormat(BinaryReader br, Int32 formatChunkLength)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.SampleRateGet">
            <summary>Sets the shim of WaveFormat.get_SampleRate()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.SerializeBinaryWriter">
            <summary>Sets the shim of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormat.AllInstances.ToString01">
            <summary>Sets the shim of WaveFormat.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatConversionStream">
            <summary>Shim type of NAudio.Wave.WaveFormatConversionStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.#ctor(NAudio.Wave.WaveFormatConversionStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.ConstructorWaveFormatWaveStream">
            <summary>Sets the shim of WaveFormatConversionStream.WaveFormatConversionStream(WaveFormat targetFormat, WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.CreatePcmStreamWaveStream">
            <summary>Sets the shim of WaveFormatConversionStream.CreatePcmStream(WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.DestToSourceInt32">
            <summary>Sets the shim of WaveFormatConversionStream.DestToSource(Int32 dest)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.DisposeBoolean">
            <summary>Sets the shim of WaveFormatConversionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.EstimateDestToSourceInt64">
            <summary>Sets the shim of WaveFormatConversionStream.EstimateDestToSource(Int64 dest)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.EstimateSourceToDestInt64">
            <summary>Sets the shim of WaveFormatConversionStream.EstimateSourceToDest(Int64 source)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.LengthGet">
            <summary>Sets the shim of WaveFormatConversionStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.PositionGet">
            <summary>Sets the shim of WaveFormatConversionStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.PositionSetInt64">
            <summary>Sets the shim of WaveFormatConversionStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFormatConversionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.SourceToDestInt32">
            <summary>Sets the shim of WaveFormatConversionStream.SourceToDest(Int32 source)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.WaveFormatGet">
            <summary>Sets the shim of WaveFormatConversionStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.DestToSourceInt32">
            <summary>Sets the shim of WaveFormatConversionStream.DestToSource(Int32 dest)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveFormatConversionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.EstimateDestToSourceInt64">
            <summary>Sets the shim of WaveFormatConversionStream.EstimateDestToSource(Int64 dest)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.EstimateSourceToDestInt64">
            <summary>Sets the shim of WaveFormatConversionStream.EstimateSourceToDest(Int64 source)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.LengthGet">
            <summary>Sets the shim of WaveFormatConversionStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.PositionGet">
            <summary>Sets the shim of WaveFormatConversionStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of WaveFormatConversionStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveFormatConversionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.SourceToDestInt32">
            <summary>Sets the shim of WaveFormatConversionStream.SourceToDest(Int32 source)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatConversionStream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveFormatConversionStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler">
            <summary>Shim type of NAudio.Wave.WaveFormatCustomMarshaler</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.#ctor(NAudio.Wave.WaveFormatCustomMarshaler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.CleanUpManagedDataObject">
            <summary>Sets the shim of WaveFormatCustomMarshaler.CleanUpManagedData(Object ManagedObj)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.CleanUpNativeDataIntPtr">
            <summary>Sets the shim of WaveFormatCustomMarshaler.CleanUpNativeData(IntPtr pNativeData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.Constructor">
            <summary>Sets the shim of WaveFormatCustomMarshaler.WaveFormatCustomMarshaler()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.GetInstanceString">
            <summary>Sets the shim of WaveFormatCustomMarshaler.GetInstance(String cookie)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.GetNativeDataSize">
            <summary>Sets the shim of WaveFormatCustomMarshaler.GetNativeDataSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.MarshalManagedToNativeObject">
            <summary>Sets the shim of WaveFormatCustomMarshaler.MarshalManagedToNative(Object ManagedObj)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.MarshalNativeToManagedIntPtr">
            <summary>Sets the shim of WaveFormatCustomMarshaler.MarshalNativeToManaged(IntPtr pNativeData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.StaticConstructor">
            <summary>Sets the shim of WaveFormatCustomMarshaler.WaveFormatCustomMarshaler()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.AllInstances.CleanUpManagedDataObject">
            <summary>Sets the shim of WaveFormatCustomMarshaler.CleanUpManagedData(Object ManagedObj)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.AllInstances.CleanUpNativeDataIntPtr">
            <summary>Sets the shim of WaveFormatCustomMarshaler.CleanUpNativeData(IntPtr pNativeData)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.AllInstances.GetNativeDataSize">
            <summary>Sets the shim of WaveFormatCustomMarshaler.GetNativeDataSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.AllInstances.MarshalManagedToNativeObject">
            <summary>Sets the shim of WaveFormatCustomMarshaler.MarshalManagedToNative(Object ManagedObj)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatCustomMarshaler.AllInstances.MarshalNativeToManagedIntPtr">
            <summary>Sets the shim of WaveFormatCustomMarshaler.MarshalNativeToManaged(IntPtr pNativeData)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatExtensible">
            <summary>Shim type of NAudio.Wave.WaveFormatExtensible</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtensible.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtensible.#ctor(NAudio.Wave.WaveFormatExtensible)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtensible.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtensible.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.Constructor">
            <summary>Sets the shim of WaveFormatExtensible.WaveFormatExtensible()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.ConstructorInt32Int32Int32">
            <summary>Sets the shim of WaveFormatExtensible.WaveFormatExtensible(Int32 rate, Int32 bits, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.SerializeBinaryWriter">
            <summary>Sets the shim of WaveFormatExtensible.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.SubFormatGet">
            <summary>Sets the shim of WaveFormatExtensible.get_SubFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.ToStandardWaveFormat">
            <summary>Sets the shim of WaveFormatExtensible.ToStandardWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.ToString">
            <summary>Sets the shim of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatExtensible.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.AllInstances.SerializeBinaryWriter">
            <summary>Sets the shim of WaveFormatExtensible.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.AllInstances.SubFormatGet">
            <summary>Sets the shim of WaveFormatExtensible.get_SubFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.AllInstances.ToStandardWaveFormat">
            <summary>Sets the shim of WaveFormatExtensible.ToStandardWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtensible.AllInstances.ToString01">
            <summary>Sets the shim of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatExtraData">
            <summary>Shim type of NAudio.Wave.WaveFormatExtraData</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtraData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtraData.#ctor(NAudio.Wave.WaveFormatExtraData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtraData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveFormatExtraData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.Constructor">
            <summary>Sets the shim of WaveFormatExtraData.WaveFormatExtraData()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.ConstructorBinaryReader">
            <summary>Sets the shim of WaveFormatExtraData.WaveFormatExtraData(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.ExtraDataGet">
            <summary>Sets the shim of WaveFormatExtraData.get_ExtraData()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.ReadExtraDataBinaryReader">
            <summary>Sets the shim of WaveFormatExtraData.ReadExtraData(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.SerializeBinaryWriter">
            <summary>Sets the shim of WaveFormatExtraData.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveFormatExtraData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.AllInstances.ExtraDataGet">
            <summary>Sets the shim of WaveFormatExtraData.get_ExtraData()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.AllInstances.ReadExtraDataBinaryReader">
            <summary>Sets the shim of WaveFormatExtraData.ReadExtraData(BinaryReader reader)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveFormatExtraData.AllInstances.SerializeBinaryWriter">
            <summary>Sets the shim of WaveFormatExtraData.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveIn">
            <summary>Shim type of NAudio.Wave.WaveIn</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveIn.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveIn.#ctor(NAudio.Wave.WaveIn)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveIn.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveIn.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveIn.Bind(NAudio.Wave.IWaveIn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveIn.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.BufferMillisecondsGet">
            <summary>Sets the shim of WaveIn.get_BufferMilliseconds()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.BufferMillisecondsSetInt32">
            <summary>Sets the shim of WaveIn.set_BufferMilliseconds(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.CloseWaveInDevice">
            <summary>Sets the shim of WaveIn.CloseWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.Constructor">
            <summary>Sets the shim of WaveIn.WaveIn()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.ConstructorIntPtr">
            <summary>Sets the shim of WaveIn.WaveIn(IntPtr windowHandle)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.ConstructorWaveCallbackInfo">
            <summary>Sets the shim of WaveIn.WaveIn(WaveCallbackInfo callbackInfo)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.CreateBuffers">
            <summary>Sets the shim of WaveIn.CreateBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.DataAvailableAddEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveIn.add_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.DataAvailableRemoveEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveIn.remove_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.DeviceCountGet">
            <summary>Sets the shim of WaveIn.get_DeviceCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.DeviceNumberGet">
            <summary>Sets the shim of WaveIn.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveIn.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.Dispose">
            <summary>Sets the shim of WaveIn.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.DisposeBoolean">
            <summary>Sets the shim of WaveIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.EnqueueBuffers">
            <summary>Sets the shim of WaveIn.EnqueueBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.GetCapabilitiesInt32">
            <summary>Sets the shim of WaveIn.GetCapabilities(Int32 devNumber)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.GetMixerLine">
            <summary>Sets the shim of WaveIn.GetMixerLine()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.NumberOfBuffersGet">
            <summary>Sets the shim of WaveIn.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveIn.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.OpenWaveInDevice">
            <summary>Sets the shim of WaveIn.OpenWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.RaiseRecordingStoppedException">
            <summary>Sets the shim of WaveIn.RaiseRecordingStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.RecordingStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveIn.add_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.RecordingStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveIn.remove_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.StartRecording">
            <summary>Sets the shim of WaveIn.StartRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.StopRecording">
            <summary>Sets the shim of WaveIn.StopRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.WaveFormatGet">
            <summary>Sets the shim of WaveIn.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WaveIn.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveIn.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.BufferMillisecondsGet">
            <summary>Sets the shim of WaveIn.get_BufferMilliseconds()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.BufferMillisecondsSetInt32">
            <summary>Sets the shim of WaveIn.set_BufferMilliseconds(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.CloseWaveInDevice">
            <summary>Sets the shim of WaveIn.CloseWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.CreateBuffers">
            <summary>Sets the shim of WaveIn.CreateBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.DataAvailableAddEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveIn.add_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.DataAvailableRemoveEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveIn.remove_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.DeviceNumberGet">
            <summary>Sets the shim of WaveIn.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveIn.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.Dispose">
            <summary>Sets the shim of WaveIn.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.EnqueueBuffers">
            <summary>Sets the shim of WaveIn.EnqueueBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.GetMixerLine">
            <summary>Sets the shim of WaveIn.GetMixerLine()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.NumberOfBuffersGet">
            <summary>Sets the shim of WaveIn.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveIn.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.OpenWaveInDevice">
            <summary>Sets the shim of WaveIn.OpenWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.RaiseRecordingStoppedException">
            <summary>Sets the shim of WaveIn.RaiseRecordingStopped(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.RecordingStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveIn.add_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.RecordingStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveIn.remove_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.StartRecording">
            <summary>Sets the shim of WaveIn.StartRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.StopRecording">
            <summary>Sets the shim of WaveIn.StopRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveIn.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveIn.AllInstances.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WaveIn.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInCapabilities">
            <summary>Shim type of NAudio.Wave.WaveInCapabilities</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInCapabilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInCapabilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInCapabilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInCapabilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInCapabilities.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInEvent">
            <summary>Shim type of NAudio.Wave.WaveInEvent</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEvent.#ctor(NAudio.Wave.WaveInEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEvent.Bind(NAudio.Wave.IWaveIn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.BufferMillisecondsGet">
            <summary>Sets the shim of WaveInEvent.get_BufferMilliseconds()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.BufferMillisecondsSetInt32">
            <summary>Sets the shim of WaveInEvent.set_BufferMilliseconds(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.CloseWaveInDevice">
            <summary>Sets the shim of WaveInEvent.CloseWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.Constructor">
            <summary>Sets the shim of WaveInEvent.WaveInEvent()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.CreateBuffers">
            <summary>Sets the shim of WaveInEvent.CreateBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DataAvailableAddEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveInEvent.add_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DataAvailableRemoveEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveInEvent.remove_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DeviceCountGet">
            <summary>Sets the shim of WaveInEvent.get_DeviceCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DeviceNumberGet">
            <summary>Sets the shim of WaveInEvent.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveInEvent.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.Dispose">
            <summary>Sets the shim of WaveInEvent.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DisposeBoolean">
            <summary>Sets the shim of WaveInEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.DoRecording">
            <summary>Sets the shim of WaveInEvent.DoRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.GetCapabilitiesInt32">
            <summary>Sets the shim of WaveInEvent.GetCapabilities(Int32 devNumber)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.GetMixerLine">
            <summary>Sets the shim of WaveInEvent.GetMixerLine()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.NumberOfBuffersGet">
            <summary>Sets the shim of WaveInEvent.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveInEvent.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.OpenWaveInDevice">
            <summary>Sets the shim of WaveInEvent.OpenWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.RaiseRecordingStoppedEventException">
            <summary>Sets the shim of WaveInEvent.RaiseRecordingStoppedEvent(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.RecordThread">
            <summary>Sets the shim of WaveInEvent.RecordThread()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.RecordingStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveInEvent.add_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.RecordingStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveInEvent.remove_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.StartRecording">
            <summary>Sets the shim of WaveInEvent.StartRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.StopRecording">
            <summary>Sets the shim of WaveInEvent.StopRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.WaveFormatGet">
            <summary>Sets the shim of WaveInEvent.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WaveInEvent.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent._StartRecordingb__0Object">
            <summary>Sets the shim of WaveInEvent.&lt;StartRecording&gt;b__0(Object state)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.BufferMillisecondsGet">
            <summary>Sets the shim of WaveInEvent.get_BufferMilliseconds()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.BufferMillisecondsSetInt32">
            <summary>Sets the shim of WaveInEvent.set_BufferMilliseconds(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.CloseWaveInDevice">
            <summary>Sets the shim of WaveInEvent.CloseWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.CreateBuffers">
            <summary>Sets the shim of WaveInEvent.CreateBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.DataAvailableAddEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveInEvent.add_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.DataAvailableRemoveEventHandlerOfWaveInEventArgs">
            <summary>Sets the shim of WaveInEvent.remove_DataAvailable(EventHandler`1&lt;WaveInEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.DeviceNumberGet">
            <summary>Sets the shim of WaveInEvent.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveInEvent.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.Dispose">
            <summary>Sets the shim of WaveInEvent.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveInEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.DoRecording">
            <summary>Sets the shim of WaveInEvent.DoRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.GetMixerLine">
            <summary>Sets the shim of WaveInEvent.GetMixerLine()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.NumberOfBuffersGet">
            <summary>Sets the shim of WaveInEvent.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveInEvent.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.OpenWaveInDevice">
            <summary>Sets the shim of WaveInEvent.OpenWaveInDevice()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.RaiseRecordingStoppedEventException">
            <summary>Sets the shim of WaveInEvent.RaiseRecordingStoppedEvent(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.RecordThread">
            <summary>Sets the shim of WaveInEvent.RecordThread()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.RecordingStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveInEvent.add_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.RecordingStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveInEvent.remove_RecordingStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.StartRecording">
            <summary>Sets the shim of WaveInEvent.StartRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.StopRecording">
            <summary>Sets the shim of WaveInEvent.StopRecording()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveInEvent.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances.WaveFormatSetWaveFormat">
            <summary>Sets the shim of WaveInEvent.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEvent.AllInstances._StartRecordingb__0Object">
            <summary>Sets the shim of WaveInEvent.&lt;StartRecording&gt;b__0(Object state)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInEventArgs">
            <summary>Shim type of NAudio.Wave.WaveInEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEventArgs.#ctor(NAudio.Wave.WaveInEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEventArgs.BufferGet">
            <summary>Sets the shim of WaveInEventArgs.get_Buffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEventArgs.BytesRecordedGet">
            <summary>Sets the shim of WaveInEventArgs.get_BytesRecorded()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEventArgs.ConstructorByteArrayInt32">
            <summary>Sets the shim of WaveInEventArgs.WaveInEventArgs(Byte[] buffer, Int32 bytes)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEventArgs.AllInstances.BufferGet">
            <summary>Sets the shim of WaveInEventArgs.get_Buffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInEventArgs.AllInstances.BytesRecordedGet">
            <summary>Sets the shim of WaveInEventArgs.get_BytesRecorded()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInProvider">
            <summary>Shim type of NAudio.Wave.WaveInProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInProvider.#ctor(NAudio.Wave.WaveInProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveInProvider.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.ConstructorIWaveIn">
            <summary>Sets the shim of WaveInProvider.WaveInProvider(IWaveIn waveIn)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveInProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.WaveFormatGet">
            <summary>Sets the shim of WaveInProvider.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.waveIn_DataAvailableObjectWaveInEventArgs">
            <summary>Sets the shim of WaveInProvider.waveIn_DataAvailable(Object sender, WaveInEventArgs e)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveInProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveInProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveInProvider.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveInProvider.AllInstances.waveIn_DataAvailableObjectWaveInEventArgs">
            <summary>Sets the shim of WaveInProvider.waveIn_DataAvailable(Object sender, WaveInEventArgs e)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveMixerStream32">
            <summary>Shim type of NAudio.Wave.WaveMixerStream32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveMixerStream32.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveMixerStream32.#ctor(NAudio.Wave.WaveMixerStream32)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveMixerStream32.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveMixerStream32.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveMixerStream32.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveMixerStream32.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AddInputStreamWaveStream">
            <summary>Sets the shim of WaveMixerStream32.AddInputStream(WaveStream waveStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AutoStopGet">
            <summary>Sets the shim of WaveMixerStream32.get_AutoStop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AutoStopSetBoolean">
            <summary>Sets the shim of WaveMixerStream32.set_AutoStop(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.BlockAlignGet">
            <summary>Sets the shim of WaveMixerStream32.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.Constructor">
            <summary>Sets the shim of WaveMixerStream32.WaveMixerStream32()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.ConstructorIEnumerableOfWaveStreamBoolean">
            <summary>Sets the shim of WaveMixerStream32.WaveMixerStream32(IEnumerable`1&lt;WaveStream&gt; inputStreams, Boolean autoStop)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.DisposeBoolean">
            <summary>Sets the shim of WaveMixerStream32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.InputCountGet">
            <summary>Sets the shim of WaveMixerStream32.get_InputCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.LengthGet">
            <summary>Sets the shim of WaveMixerStream32.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.PositionGet">
            <summary>Sets the shim of WaveMixerStream32.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.PositionSetInt64">
            <summary>Sets the shim of WaveMixerStream32.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveMixerStream32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.RemoveInputStreamWaveStream">
            <summary>Sets the shim of WaveMixerStream32.RemoveInputStream(WaveStream waveStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.Sum32BitAudioByteArrayInt32ByteArrayInt32">
            <summary>Sets the shim of WaveMixerStream32.Sum32BitAudio(Byte[] destBuffer, Int32 offset, Byte[] sourceBuffer, Int32 bytesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.WaveFormatGet">
            <summary>Sets the shim of WaveMixerStream32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.AddInputStreamWaveStream">
            <summary>Sets the shim of WaveMixerStream32.AddInputStream(WaveStream waveStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.AutoStopGet">
            <summary>Sets the shim of WaveMixerStream32.get_AutoStop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.AutoStopSetBoolean">
            <summary>Sets the shim of WaveMixerStream32.set_AutoStop(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.BlockAlignGet">
            <summary>Sets the shim of WaveMixerStream32.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveMixerStream32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.InputCountGet">
            <summary>Sets the shim of WaveMixerStream32.get_InputCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.LengthGet">
            <summary>Sets the shim of WaveMixerStream32.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.PositionGet">
            <summary>Sets the shim of WaveMixerStream32.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.PositionSetInt64">
            <summary>Sets the shim of WaveMixerStream32.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveMixerStream32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.RemoveInputStreamWaveStream">
            <summary>Sets the shim of WaveMixerStream32.RemoveInputStream(WaveStream waveStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveMixerStream32.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveMixerStream32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOffsetStream">
            <summary>Shim type of NAudio.Wave.WaveOffsetStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOffsetStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOffsetStream.#ctor(NAudio.Wave.WaveOffsetStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOffsetStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOffsetStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOffsetStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOffsetStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.BlockAlignGet">
            <summary>Sets the shim of WaveOffsetStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.ConstructorWaveStream">
            <summary>Sets the shim of WaveOffsetStream.WaveOffsetStream(WaveStream sourceStream)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.ConstructorWaveStreamTimeSpanTimeSpanTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.WaveOffsetStream(WaveStream sourceStream, TimeSpan startTime, TimeSpan sourceOffset, TimeSpan sourceLength)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.DisposeBoolean">
            <summary>Sets the shim of WaveOffsetStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.HasDataInt32">
            <summary>Sets the shim of WaveOffsetStream.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.LengthGet">
            <summary>Sets the shim of WaveOffsetStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.PositionGet">
            <summary>Sets the shim of WaveOffsetStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.PositionSetInt64">
            <summary>Sets the shim of WaveOffsetStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveOffsetStream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.SourceLengthGet">
            <summary>Sets the shim of WaveOffsetStream.get_SourceLength()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.SourceLengthSetTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.set_SourceLength(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.SourceOffsetGet">
            <summary>Sets the shim of WaveOffsetStream.get_SourceOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.SourceOffsetSetTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.set_SourceOffset(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.StartTimeGet">
            <summary>Sets the shim of WaveOffsetStream.get_StartTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.StartTimeSetTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.set_StartTime(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.WaveFormatGet">
            <summary>Sets the shim of WaveOffsetStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.BlockAlignGet">
            <summary>Sets the shim of WaveOffsetStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveOffsetStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.HasDataInt32">
            <summary>Sets the shim of WaveOffsetStream.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.LengthGet">
            <summary>Sets the shim of WaveOffsetStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.PositionGet">
            <summary>Sets the shim of WaveOffsetStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of WaveOffsetStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveOffsetStream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.SourceLengthGet">
            <summary>Sets the shim of WaveOffsetStream.get_SourceLength()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.SourceLengthSetTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.set_SourceLength(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.SourceOffsetGet">
            <summary>Sets the shim of WaveOffsetStream.get_SourceOffset()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.SourceOffsetSetTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.set_SourceOffset(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.StartTimeGet">
            <summary>Sets the shim of WaveOffsetStream.get_StartTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.StartTimeSetTimeSpan">
            <summary>Sets the shim of WaveOffsetStream.set_StartTime(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOffsetStream.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveOffsetStream.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOut">
            <summary>Shim type of NAudio.Wave.WaveOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.#ctor(NAudio.Wave.WaveOut)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.Bind(NAudio.Wave.IWavePlayer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.Bind(NAudio.Wave.IWavePosition)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOut.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Constructor">
            <summary>Sets the shim of WaveOut.WaveOut()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.ConstructorIntPtr">
            <summary>Sets the shim of WaveOut.WaveOut(IntPtr windowHandle)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.ConstructorWaveCallbackInfo">
            <summary>Sets the shim of WaveOut.WaveOut(WaveCallbackInfo callbackInfo)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.DesiredLatencyGet">
            <summary>Sets the shim of WaveOut.get_DesiredLatency()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.DesiredLatencySetInt32">
            <summary>Sets the shim of WaveOut.set_DesiredLatency(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.DeviceCountGet">
            <summary>Sets the shim of WaveOut.get_DeviceCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.DeviceNumberGet">
            <summary>Sets the shim of WaveOut.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveOut.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Dispose">
            <summary>Sets the shim of WaveOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.DisposeBoolean">
            <summary>Sets the shim of WaveOut.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.EnqueueBuffers">
            <summary>Sets the shim of WaveOut.EnqueueBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.GetCapabilitiesInt32">
            <summary>Sets the shim of WaveOut.GetCapabilities(Int32 devNumber)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.GetPosition">
            <summary>Sets the shim of WaveOut.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.InitIWaveProvider">
            <summary>Sets the shim of WaveOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.NumberOfBuffersGet">
            <summary>Sets the shim of WaveOut.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveOut.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.OutputWaveFormatGet">
            <summary>Sets the shim of WaveOut.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Pause">
            <summary>Sets the shim of WaveOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Play">
            <summary>Sets the shim of WaveOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.PlaybackStateGet">
            <summary>Sets the shim of WaveOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.RaisePlaybackStoppedEventException">
            <summary>Sets the shim of WaveOut.RaisePlaybackStoppedEvent(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Resume">
            <summary>Sets the shim of WaveOut.Resume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.Stop">
            <summary>Sets the shim of WaveOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.VolumeGet">
            <summary>Sets the shim of WaveOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.VolumeSetSingle">
            <summary>Sets the shim of WaveOut.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOut.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.DesiredLatencyGet">
            <summary>Sets the shim of WaveOut.get_DesiredLatency()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.DesiredLatencySetInt32">
            <summary>Sets the shim of WaveOut.set_DesiredLatency(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.DeviceNumberGet">
            <summary>Sets the shim of WaveOut.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveOut.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.Dispose">
            <summary>Sets the shim of WaveOut.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveOut.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.EnqueueBuffers">
            <summary>Sets the shim of WaveOut.EnqueueBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.GetPosition">
            <summary>Sets the shim of WaveOut.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.InitIWaveProvider">
            <summary>Sets the shim of WaveOut.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.NumberOfBuffersGet">
            <summary>Sets the shim of WaveOut.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveOut.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.OutputWaveFormatGet">
            <summary>Sets the shim of WaveOut.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.Pause">
            <summary>Sets the shim of WaveOut.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.Play">
            <summary>Sets the shim of WaveOut.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.PlaybackStateGet">
            <summary>Sets the shim of WaveOut.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOut.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOut.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.RaisePlaybackStoppedEventException">
            <summary>Sets the shim of WaveOut.RaisePlaybackStoppedEvent(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.Resume">
            <summary>Sets the shim of WaveOut.Resume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.Stop">
            <summary>Sets the shim of WaveOut.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.VolumeGet">
            <summary>Sets the shim of WaveOut.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOut.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of WaveOut.set_Volume(Single value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOutCapabilities">
            <summary>Shim type of NAudio.Wave.WaveOutCapabilities</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutCapabilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutCapabilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutCapabilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutCapabilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOutCapabilities.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOutEvent">
            <summary>Shim type of NAudio.Wave.WaveOutEvent</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.#ctor(NAudio.Wave.WaveOutEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.Bind(NAudio.Wave.IWavePlayer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.Bind(NAudio.Wave.IWavePosition)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveOutEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.CloseWaveOut">
            <summary>Sets the shim of WaveOutEvent.CloseWaveOut()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Constructor">
            <summary>Sets the shim of WaveOutEvent.WaveOutEvent()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DesiredLatencyGet">
            <summary>Sets the shim of WaveOutEvent.get_DesiredLatency()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DesiredLatencySetInt32">
            <summary>Sets the shim of WaveOutEvent.set_DesiredLatency(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DeviceNumberGet">
            <summary>Sets the shim of WaveOutEvent.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveOutEvent.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Dispose">
            <summary>Sets the shim of WaveOutEvent.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DisposeBoolean">
            <summary>Sets the shim of WaveOutEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DisposeBuffers">
            <summary>Sets the shim of WaveOutEvent.DisposeBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.DoPlayback">
            <summary>Sets the shim of WaveOutEvent.DoPlayback()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.GetPosition">
            <summary>Sets the shim of WaveOutEvent.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.InitIWaveProvider">
            <summary>Sets the shim of WaveOutEvent.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.NumberOfBuffersGet">
            <summary>Sets the shim of WaveOutEvent.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveOutEvent.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.OutputWaveFormatGet">
            <summary>Sets the shim of WaveOutEvent.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Pause">
            <summary>Sets the shim of WaveOutEvent.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Play">
            <summary>Sets the shim of WaveOutEvent.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.PlaybackStateGet">
            <summary>Sets the shim of WaveOutEvent.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOutEvent.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOutEvent.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.PlaybackThread">
            <summary>Sets the shim of WaveOutEvent.PlaybackThread()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.RaisePlaybackStoppedEventException">
            <summary>Sets the shim of WaveOutEvent.RaisePlaybackStoppedEvent(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Resume">
            <summary>Sets the shim of WaveOutEvent.Resume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.Stop">
            <summary>Sets the shim of WaveOutEvent.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.VolumeGet">
            <summary>Sets the shim of WaveOutEvent.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.VolumeSetSingle">
            <summary>Sets the shim of WaveOutEvent.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent._Playb__0Object">
            <summary>Sets the shim of WaveOutEvent.&lt;Play&gt;b__0(Object state)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.CloseWaveOut">
            <summary>Sets the shim of WaveOutEvent.CloseWaveOut()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DesiredLatencyGet">
            <summary>Sets the shim of WaveOutEvent.get_DesiredLatency()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DesiredLatencySetInt32">
            <summary>Sets the shim of WaveOutEvent.set_DesiredLatency(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DeviceNumberGet">
            <summary>Sets the shim of WaveOutEvent.get_DeviceNumber()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DeviceNumberSetInt32">
            <summary>Sets the shim of WaveOutEvent.set_DeviceNumber(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.Dispose">
            <summary>Sets the shim of WaveOutEvent.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WaveOutEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DisposeBuffers">
            <summary>Sets the shim of WaveOutEvent.DisposeBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.DoPlayback">
            <summary>Sets the shim of WaveOutEvent.DoPlayback()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.GetPosition">
            <summary>Sets the shim of WaveOutEvent.GetPosition()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.InitIWaveProvider">
            <summary>Sets the shim of WaveOutEvent.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.NumberOfBuffersGet">
            <summary>Sets the shim of WaveOutEvent.get_NumberOfBuffers()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.NumberOfBuffersSetInt32">
            <summary>Sets the shim of WaveOutEvent.set_NumberOfBuffers(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.OutputWaveFormatGet">
            <summary>Sets the shim of WaveOutEvent.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.Pause">
            <summary>Sets the shim of WaveOutEvent.Pause()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.Play">
            <summary>Sets the shim of WaveOutEvent.Play()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.PlaybackStateGet">
            <summary>Sets the shim of WaveOutEvent.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.PlaybackStoppedAddEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOutEvent.add_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.PlaybackStoppedRemoveEventHandlerOfStoppedEventArgs">
            <summary>Sets the shim of WaveOutEvent.remove_PlaybackStopped(EventHandler`1&lt;StoppedEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.PlaybackThread">
            <summary>Sets the shim of WaveOutEvent.PlaybackThread()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.RaisePlaybackStoppedEventException">
            <summary>Sets the shim of WaveOutEvent.RaisePlaybackStoppedEvent(Exception e)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.Resume">
            <summary>Sets the shim of WaveOutEvent.Resume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.Stop">
            <summary>Sets the shim of WaveOutEvent.Stop()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.VolumeGet">
            <summary>Sets the shim of WaveOutEvent.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of WaveOutEvent.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveOutEvent.AllInstances._Playb__0Object">
            <summary>Sets the shim of WaveOutEvent.&lt;Play&gt;b__0(Object state)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveProvider16">
            <summary>Shim type of NAudio.Wave.WaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider16.#ctor(NAudio.Wave.WaveProvider16)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider16.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider16.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider16.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.Constructor">
            <summary>Sets the shim of WaveProvider16.WaveProvider16()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.ConstructorInt32Int32">
            <summary>Sets the shim of WaveProvider16.WaveProvider16(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.SetWaveFormatInt32Int32">
            <summary>Sets the shim of WaveProvider16.SetWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.WaveFormatGet">
            <summary>Sets the shim of WaveProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveProvider16.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveProvider16.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.AllInstances.SetWaveFormatInt32Int32">
            <summary>Sets the shim of WaveProvider16.SetWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider16.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveProvider32">
            <summary>Shim type of NAudio.Wave.WaveProvider32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider32.#ctor(NAudio.Wave.WaveProvider32)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider32.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider32.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider32.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveProvider32.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.Constructor">
            <summary>Sets the shim of WaveProvider32.WaveProvider32()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.ConstructorInt32Int32">
            <summary>Sets the shim of WaveProvider32.WaveProvider32(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveProvider32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.SetWaveFormatInt32Int32">
            <summary>Sets the shim of WaveProvider32.SetWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.WaveFormatGet">
            <summary>Sets the shim of WaveProvider32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveProvider32.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveProvider32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.AllInstances.SetWaveFormatInt32Int32">
            <summary>Sets the shim of WaveProvider32.SetWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveProvider32.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveProvider32.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveRecorder">
            <summary>Shim type of NAudio.Wave.WaveRecorder</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveRecorder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveRecorder.#ctor(NAudio.Wave.WaveRecorder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveRecorder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveRecorder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveRecorder.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveRecorder.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.ConstructorIWaveProviderString">
            <summary>Sets the shim of WaveRecorder.WaveRecorder(IWaveProvider source, String destination)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.Dispose">
            <summary>Sets the shim of WaveRecorder.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveRecorder.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.WaveFormatGet">
            <summary>Sets the shim of WaveRecorder.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveRecorder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.AllInstances.Dispose">
            <summary>Sets the shim of WaveRecorder.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of WaveRecorder.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveRecorder.AllInstances.WaveFormatGet">
            <summary>Sets the shim of WaveRecorder.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveStream">
            <summary>Shim type of NAudio.Wave.WaveStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveStream.#ctor(NAudio.Wave.WaveStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveStream.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimWaveStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.BlockAlignGet">
            <summary>Sets the shim of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.CanReadGet">
            <summary>Sets the shim of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.CanSeekGet">
            <summary>Sets the shim of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.CanWriteGet">
            <summary>Sets the shim of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.Constructor">
            <summary>Sets the shim of WaveStream.WaveStream()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.CurrentTimeGet">
            <summary>Sets the shim of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.CurrentTimeSetTimeSpan">
            <summary>Sets the shim of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.Flush">
            <summary>Sets the shim of WaveStream.Flush()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.HasDataInt32">
            <summary>Sets the shim of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.SetLengthInt64">
            <summary>Sets the shim of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.SkipInt32">
            <summary>Sets the shim of WaveStream.Skip(Int32 seconds)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.TotalTimeGet">
            <summary>Sets the shim of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimWaveStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.BlockAlignGet">
            <summary>Sets the shim of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.CanReadGet">
            <summary>Sets the shim of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.CurrentTimeGet">
            <summary>Sets the shim of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.CurrentTimeSetTimeSpan">
            <summary>Sets the shim of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.Flush">
            <summary>Sets the shim of WaveStream.Flush()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.HasDataInt32">
            <summary>Sets the shim of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.SkipInt32">
            <summary>Sets the shim of WaveStream.Skip(Int32 seconds)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.TotalTimeGet">
            <summary>Sets the shim of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimWaveStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimXingHeader">
            <summary>Shim type of NAudio.Wave.XingHeader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimXingHeader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimXingHeader.#ctor(NAudio.Wave.XingHeader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimXingHeader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.ShimXingHeader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.BytesGet">
            <summary>Sets the shim of XingHeader.get_Bytes()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.BytesSetInt32">
            <summary>Sets the shim of XingHeader.set_Bytes(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.Constructor">
            <summary>Sets the shim of XingHeader.XingHeader()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.FramesGet">
            <summary>Sets the shim of XingHeader.get_Frames()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.FramesSetInt32">
            <summary>Sets the shim of XingHeader.set_Frames(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.LoadXingHeaderMp3Frame">
            <summary>Sets the shim of XingHeader.LoadXingHeader(Mp3Frame frame)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.Mp3FrameGet">
            <summary>Sets the shim of XingHeader.get_Mp3Frame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.ReadBigEndianByteArrayInt32">
            <summary>Sets the shim of XingHeader.ReadBigEndian(Byte[] buffer, Int32 offset)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.StaticConstructor">
            <summary>Sets the shim of XingHeader.XingHeader()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.VbrScaleGet">
            <summary>Sets the shim of XingHeader.get_VbrScale()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.WriteBigEndianByteArrayInt32Int32">
            <summary>Sets the shim of XingHeader.WriteBigEndian(Byte[] buffer, Int32 offset, Int32 value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.ShimXingHeader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.BytesGet">
            <summary>Sets the shim of XingHeader.get_Bytes()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.BytesSetInt32">
            <summary>Sets the shim of XingHeader.set_Bytes(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.FramesGet">
            <summary>Sets the shim of XingHeader.get_Frames()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.FramesSetInt32">
            <summary>Sets the shim of XingHeader.set_Frames(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.Mp3FrameGet">
            <summary>Sets the shim of XingHeader.get_Mp3Frame()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.VbrScaleGet">
            <summary>Sets the shim of XingHeader.get_VbrScale()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.ShimXingHeader.AllInstances.WriteBigEndianByteArrayInt32Int32">
            <summary>Sets the shim of XingHeader.WriteBigEndian(Byte[] buffer, Int32 offset, Int32 value)</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAcmMp3FrameDecompressor">
            <summary>Stub type of NAudio.Wave.AcmMp3FrameDecompressor</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAcmMp3FrameDecompressor.#ctor(NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAcmMp3FrameDecompressor.InitializeStub">
            <summary>Initializes a new instance of type StubAcmMp3FrameDecompressor</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAcmMp3FrameDecompressor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAcmMp3FrameDecompressor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAcmMp3FrameDecompressor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAdpcmWaveFormat">
            <summary>Stub type of NAudio.Wave.AdpcmWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAdpcmWaveFormat.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAdpcmWaveFormat.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAdpcmWaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAdpcmWaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAdpcmWaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAdpcmWaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAdpcmWaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubAdpcmWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAdpcmWaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of AdpcmWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAdpcmWaveFormat.SerializeBinaryWriter">
            <summary>Sets the stub of AdpcmWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAdpcmWaveFormat.ToString">
            <summary>Sets the stub of AdpcmWaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAdpcmWaveFormat.ToString01">
            <summary>Sets the stub of AdpcmWaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAdpcmWaveFormat.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAdpcmWaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAdpcmWaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAdpcmWaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAiffFileReader">
            <summary>Stub type of NAudio.Wave.AiffFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubAiffFileReader.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubAiffFileReader.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubAiffFileReader.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubAiffFileReader.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.Dispose(System.Boolean)">
            <summary>Sets the stub of AiffFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.DisposeBoolean">
            <summary>Sets the stub of AiffFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.InitializeStub">
            <summary>Initializes a new instance of type StubAiffFileReader</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.LengthGet">
            <summary>Sets the stub of AiffFileReader.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.PositionGet">
            <summary>Sets the stub of AiffFileReader.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.PositionSetInt64">
            <summary>Sets the stub of AiffFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of AiffFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the stub of AiffFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.WaveFormatGet">
            <summary>Sets the stub of AiffFileReader.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileReader.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileReader.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.Length">
            <summary>Sets the stub of AiffFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.Position">
            <summary>Sets the stub of AiffFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.WaveFormat">
            <summary>Sets the stub of AiffFileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileReader.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAiffFileWriter">
            <summary>Stub type of NAudio.Wave.AiffFileWriter</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.#ctor(System.String,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.#ctor(System.IO.Stream,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubAiffFileWriter.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubAiffFileWriter.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubAiffFileWriter.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.CanReadGet">
            <summary>Sets the stub of AiffFileWriter.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.CanSeekGet">
            <summary>Sets the stub of AiffFileWriter.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.CanWriteGet">
            <summary>Sets the stub of AiffFileWriter.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of AiffFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.DisposeBoolean">
            <summary>Sets the stub of AiffFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.Flush">
            <summary>Sets the stub of AiffFileWriter.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.Flush01">
            <summary>Sets the stub of AiffFileWriter.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.InitializeStub">
            <summary>Initializes a new instance of type StubAiffFileWriter</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.LengthGet">
            <summary>Sets the stub of AiffFileWriter.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.PositionGet">
            <summary>Sets the stub of AiffFileWriter.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.PositionSetInt64">
            <summary>Sets the stub of AiffFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of AiffFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.ReadByteArrayInt32Int32">
            <summary>Sets the stub of AiffFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of AiffFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.SeekInt64SeekOrigin">
            <summary>Sets the stub of AiffFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.SetLength(System.Int64)">
            <summary>Sets the stub of AiffFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.SetLengthInt64">
            <summary>Sets the stub of AiffFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.UpdateHeader(System.IO.BinaryWriter)">
            <summary>Sets the stub of AiffFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.UpdateHeaderBinaryWriter">
            <summary>Sets the stub of AiffFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of AiffFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAiffFileWriter.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.WriteByteArrayInt32Int32">
            <summary>Sets the stub of AiffFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAiffFileWriter.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.CanRead">
            <summary>Sets the stub of AiffFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.CanSeek">
            <summary>Sets the stub of AiffFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.CanWrite">
            <summary>Sets the stub of AiffFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.Length">
            <summary>Sets the stub of AiffFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.Position">
            <summary>Sets the stub of AiffFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAiffFileWriter.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAsioAudioAvailableEventArgs">
            <summary>Stub type of NAudio.Wave.AsioAudioAvailableEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAsioAudioAvailableEventArgs.#ctor(System.IntPtr[],System.IntPtr[],System.Int32,NAudio.Wave.Asio.AsioSampleType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAsioAudioAvailableEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubAsioAudioAvailableEventArgs</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAsioAudioAvailableEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAsioAudioAvailableEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAsioAudioAvailableEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAsioOut">
            <summary>Stub type of NAudio.Wave.AsioOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAsioOut.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAsioOut.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAsioOut.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAsioOut.InitializeStub">
            <summary>Initializes a new instance of type StubAsioOut</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAsioOut.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAsioOut.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAsioOut.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubAudioFileReader">
            <summary>Stub type of NAudio.Wave.AudioFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubAudioFileReader.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubAudioFileReader.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubAudioFileReader.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubAudioFileReader.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.Dispose(System.Boolean)">
            <summary>Sets the stub of AudioFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.DisposeBoolean">
            <summary>Sets the stub of AudioFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.InitializeStub">
            <summary>Initializes a new instance of type StubAudioFileReader</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.LengthGet">
            <summary>Sets the stub of AudioFileReader.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.PositionGet">
            <summary>Sets the stub of AudioFileReader.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.PositionSetInt64">
            <summary>Sets the stub of AudioFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of AudioFileReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the stub of AudioFileReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.WaveFormatGet">
            <summary>Sets the stub of AudioFileReader.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubAudioFileReader.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubAudioFileReader.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.Length">
            <summary>Sets the stub of AudioFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.Position">
            <summary>Sets the stub of AudioFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.WaveFormat">
            <summary>Sets the stub of AudioFileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubAudioFileReader.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubBlockAlignReductionStream">
            <summary>Stub type of NAudio.Wave.BlockAlignReductionStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.#ctor(NAudio.Wave.WaveStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubBlockAlignReductionStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubBlockAlignReductionStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubBlockAlignReductionStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubBlockAlignReductionStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.BlockAlignGet">
            <summary>Sets the stub of BlockAlignReductionStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Dispose(System.Boolean)">
            <summary>Sets the stub of BlockAlignReductionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.DisposeBoolean">
            <summary>Sets the stub of BlockAlignReductionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.InitializeStub">
            <summary>Initializes a new instance of type StubBlockAlignReductionStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.LengthGet">
            <summary>Sets the stub of BlockAlignReductionStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.PositionGet">
            <summary>Sets the stub of BlockAlignReductionStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.PositionSetInt64">
            <summary>Sets the stub of BlockAlignReductionStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of BlockAlignReductionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of BlockAlignReductionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WaveFormatGet">
            <summary>Sets the stub of BlockAlignReductionStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.BlockAlign">
            <summary>Sets the stub of BlockAlignReductionStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Length">
            <summary>Sets the stub of BlockAlignReductionStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.Position">
            <summary>Sets the stub of BlockAlignReductionStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WaveFormat">
            <summary>Sets the stub of BlockAlignReductionStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBlockAlignReductionStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubBufferedWaveProvider">
            <summary>Stub type of NAudio.Wave.BufferedWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBufferedWaveProvider.#ctor(NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubBufferedWaveProvider.InitializeStub">
            <summary>Initializes a new instance of type StubBufferedWaveProvider</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBufferedWaveProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBufferedWaveProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubBufferedWaveProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubCue">
            <summary>Stub type of NAudio.Wave.Cue</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCue.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCue.InitializeStub">
            <summary>Initializes a new instance of type StubCue</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubCueList">
            <summary>Stub type of NAudio.Wave.CueList</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueList.InitializeStub">
            <summary>Initializes a new instance of type StubCueList</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubCueWaveFileReader">
            <summary>Stub type of NAudio.Wave.CueWaveFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubCueWaveFileReader.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubCueWaveFileReader.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubCueWaveFileReader.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubCueWaveFileReader.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.DisposeBoolean">
            <summary>Sets the stub of WaveFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.InitializeStub">
            <summary>Initializes a new instance of type StubCueWaveFileReader</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.LengthGet">
            <summary>Sets the stub of WaveFileReader.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.PositionGet">
            <summary>Sets the stub of WaveFileReader.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.PositionSetInt64">
            <summary>Sets the stub of WaveFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.WaveFormatGet">
            <summary>Sets the stub of WaveFileReader.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.Length">
            <summary>Sets the stub of WaveFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.Position">
            <summary>Sets the stub of WaveFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.WaveFormat">
            <summary>Sets the stub of WaveFileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileReader.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubCueWaveFileWriter">
            <summary>Stub type of NAudio.Wave.CueWaveFileWriter</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.#ctor(System.String,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubCueWaveFileWriter.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubCueWaveFileWriter.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubCueWaveFileWriter.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanReadGet">
            <summary>Sets the stub of WaveFileWriter.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanSeekGet">
            <summary>Sets the stub of WaveFileWriter.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanWriteGet">
            <summary>Sets the stub of WaveFileWriter.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.DisposeBoolean">
            <summary>Sets the stub of WaveFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.Flush">
            <summary>Sets the stub of WaveFileWriter.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.Flush01">
            <summary>Sets the stub of WaveFileWriter.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.InitializeStub">
            <summary>Initializes a new instance of type StubCueWaveFileWriter</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.LengthGet">
            <summary>Sets the stub of WaveFileWriter.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.PositionGet">
            <summary>Sets the stub of WaveFileWriter.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.PositionSetInt64">
            <summary>Sets the stub of WaveFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.SetLength(System.Int64)">
            <summary>Sets the stub of WaveFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.SetLengthInt64">
            <summary>Sets the stub of WaveFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.UpdateHeader(System.IO.BinaryWriter)">
            <summary>Sets the stub of CueWaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.UpdateHeaderBinaryWriter">
            <summary>Sets the stub of CueWaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanRead">
            <summary>Sets the stub of WaveFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanSeek">
            <summary>Sets the stub of WaveFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.CanWrite">
            <summary>Sets the stub of WaveFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.Length">
            <summary>Sets the stub of WaveFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.Position">
            <summary>Sets the stub of WaveFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubCueWaveFileWriter.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubDirectSoundDeviceInfo">
            <summary>Stub type of NAudio.Wave.DirectSoundDeviceInfo</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundDeviceInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundDeviceInfo.InitializeStub">
            <summary>Initializes a new instance of type StubDirectSoundDeviceInfo</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubDirectSoundDeviceInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubDirectSoundDeviceInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubDirectSoundDeviceInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubDirectSoundOut">
            <summary>Stub type of NAudio.Wave.DirectSoundOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundOut.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundOut.#ctor(System.Guid)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundOut.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundOut.#ctor(System.Guid,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubDirectSoundOut.InitializeStub">
            <summary>Initializes a new instance of type StubDirectSoundOut</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubDirectSoundOut.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubDirectSoundOut.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubDirectSoundOut.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubGsm610WaveFormat">
            <summary>Stub type of NAudio.Wave.Gsm610WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubGsm610WaveFormat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubGsm610WaveFormat.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubGsm610WaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubGsm610WaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubGsm610WaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubGsm610WaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubGsm610WaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubGsm610WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubGsm610WaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of Gsm610WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubGsm610WaveFormat.SerializeBinaryWriter">
            <summary>Sets the stub of Gsm610WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubGsm610WaveFormat.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubGsm610WaveFormat.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubGsm610WaveFormat.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubGsm610WaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubGsm610WaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubGsm610WaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubIMp3FrameDecompressor">
            <summary>Stub type of NAudio.Wave.IMp3FrameDecompressor</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.#ctor">
            <summary>Initializes a new instance of type StubIMp3FrameDecompressor</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.DecompressFrameMp3FrameByteArrayInt32">
            <summary>Sets the stub of IMp3FrameDecompressor.DecompressFrame(Mp3Frame frame, Byte[] dest, Int32 destOffset)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.na::NAudio#Wave#IMp3FrameDecompressor#DecompressFrame(NAudio.Wave.Mp3Frame,System.Byte[],System.Int32)">
            <summary>Sets the stub of IMp3FrameDecompressor.DecompressFrame(Mp3Frame frame, Byte[] dest, Int32 destOffset)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.na::NAudio#Wave#IMp3FrameDecompressor#Reset">
            <summary>Sets the stub of IMp3FrameDecompressor.Reset()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.OutputFormatGet">
            <summary>Sets the stub of IMp3FrameDecompressor.get_OutputFormat()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.Reset">
            <summary>Sets the stub of IMp3FrameDecompressor.Reset()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIMp3FrameDecompressor.na::NAudio#Wave#IMp3FrameDecompressor#OutputFormat">
            <summary>Sets the stub of IMp3FrameDecompressor.get_OutputFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubISampleNotifier">
            <summary>Stub type of NAudio.Wave.ISampleNotifier</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubISampleNotifier.#ctor">
            <summary>Initializes a new instance of type StubISampleNotifier</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubISampleProvider">
            <summary>Stub type of NAudio.Wave.ISampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubISampleProvider.#ctor">
            <summary>Initializes a new instance of type StubISampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubISampleProvider.na::NAudio#Wave#ISampleProvider#Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of ISampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubISampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of ISampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubISampleProvider.WaveFormatGet">
            <summary>Sets the stub of ISampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubISampleProvider.na::NAudio#Wave#ISampleProvider#WaveFormat">
            <summary>Sets the stub of ISampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubIWaveBuffer">
            <summary>Stub type of NAudio.Wave.IWaveBuffer</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveBuffer.#ctor">
            <summary>Initializes a new instance of type StubIWaveBuffer</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.ByteBufferCountGet">
            <summary>Sets the stub of IWaveBuffer.get_ByteBufferCount()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.ByteBufferGet">
            <summary>Sets the stub of IWaveBuffer.get_ByteBuffer()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.FloatBufferCountGet">
            <summary>Sets the stub of IWaveBuffer.get_FloatBufferCount()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.FloatBufferGet">
            <summary>Sets the stub of IWaveBuffer.get_FloatBuffer()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.IntBufferCountGet">
            <summary>Sets the stub of IWaveBuffer.get_IntBufferCount()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.IntBufferGet">
            <summary>Sets the stub of IWaveBuffer.get_IntBuffer()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.MaxSizeGet">
            <summary>Sets the stub of IWaveBuffer.get_MaxSize()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.ShortBufferCountGet">
            <summary>Sets the stub of IWaveBuffer.get_ShortBufferCount()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveBuffer.ShortBufferGet">
            <summary>Sets the stub of IWaveBuffer.get_ShortBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#ByteBuffer">
            <summary>Sets the stub of IWaveBuffer.get_ByteBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#ByteBufferCount">
            <summary>Sets the stub of IWaveBuffer.get_ByteBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#FloatBuffer">
            <summary>Sets the stub of IWaveBuffer.get_FloatBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#FloatBufferCount">
            <summary>Sets the stub of IWaveBuffer.get_FloatBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#IntBuffer">
            <summary>Sets the stub of IWaveBuffer.get_IntBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#IntBufferCount">
            <summary>Sets the stub of IWaveBuffer.get_IntBufferCount()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#MaxSize">
            <summary>Sets the stub of IWaveBuffer.get_MaxSize()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#ShortBuffer">
            <summary>Sets the stub of IWaveBuffer.get_ShortBuffer()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveBuffer.na::NAudio#Wave#IWaveBuffer#ShortBufferCount">
            <summary>Sets the stub of IWaveBuffer.get_ShortBufferCount()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubIWaveIn">
            <summary>Stub type of NAudio.Wave.IWaveIn</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveIn.#ctor">
            <summary>Initializes a new instance of type StubIWaveIn</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveIn.AttachBackingFieldToWaveFormat">
            <summary>Attaches delegates to emulate StubIWaveIn.WaveFormat as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveIn.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveIn.na::NAudio#Wave#IWaveIn#StartRecording">
            <summary>Sets the stub of IWaveIn.StartRecording()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveIn.na::NAudio#Wave#IWaveIn#StopRecording">
            <summary>Sets the stub of IWaveIn.StopRecording()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveIn.StartRecording">
            <summary>Sets the stub of IWaveIn.StartRecording()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveIn.StopRecording">
            <summary>Sets the stub of IWaveIn.StopRecording()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveIn.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveIn.WaveFormatGet">
            <summary>Sets the stub of IWaveIn.get_WaveFormat()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveIn.WaveFormatSetWaveFormat">
            <summary>Sets the stub of IWaveIn.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveIn.na::NAudio#Wave#IWaveIn#WaveFormat">
            <summary>Sets the stub of IWaveIn.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubIWavePlayer">
            <summary>Stub type of NAudio.Wave.IWavePlayer</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.#ctor">
            <summary>Initializes a new instance of type StubIWavePlayer</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.AttachBackingFieldToVolume">
            <summary>Attaches delegates to emulate StubIWavePlayer.Volume as a property with a backing field.</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.InitIWaveProvider">
            <summary>Sets the stub of IWavePlayer.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.na::NAudio#Wave#IWavePlayer#Init(NAudio.Wave.IWaveProvider)">
            <summary>Sets the stub of IWavePlayer.Init(IWaveProvider waveProvider)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.na::NAudio#Wave#IWavePlayer#Pause">
            <summary>Sets the stub of IWavePlayer.Pause()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.na::NAudio#Wave#IWavePlayer#Play">
            <summary>Sets the stub of IWavePlayer.Play()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.na::NAudio#Wave#IWavePlayer#Stop">
            <summary>Sets the stub of IWavePlayer.Stop()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.Pause">
            <summary>Sets the stub of IWavePlayer.Pause()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.Play">
            <summary>Sets the stub of IWavePlayer.Play()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.PlaybackStateGet">
            <summary>Sets the stub of IWavePlayer.get_PlaybackState()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.Stop">
            <summary>Sets the stub of IWavePlayer.Stop()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePlayer.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.VolumeGet">
            <summary>Sets the stub of IWavePlayer.get_Volume()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePlayer.VolumeSetSingle">
            <summary>Sets the stub of IWavePlayer.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWavePlayer.na::NAudio#Wave#IWavePlayer#PlaybackState">
            <summary>Sets the stub of IWavePlayer.get_PlaybackState()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWavePlayer.na::NAudio#Wave#IWavePlayer#Volume">
            <summary>Sets the stub of IWavePlayer.get_Volume()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubIWavePosition">
            <summary>Stub type of NAudio.Wave.IWavePosition</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePosition.#ctor">
            <summary>Initializes a new instance of type StubIWavePosition</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePosition.GetPosition">
            <summary>Sets the stub of IWavePosition.GetPosition()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWavePosition.na::NAudio#Wave#IWavePosition#GetPosition">
            <summary>Sets the stub of IWavePosition.GetPosition()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWavePosition.OutputWaveFormatGet">
            <summary>Sets the stub of IWavePosition.get_OutputWaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWavePosition.na::NAudio#Wave#IWavePosition#OutputWaveFormat">
            <summary>Sets the stub of IWavePosition.get_OutputWaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubIWaveProvider">
            <summary>Stub type of NAudio.Wave.IWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveProvider.#ctor">
            <summary>Initializes a new instance of type StubIWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubIWaveProvider.na::NAudio#Wave#IWaveProvider#Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of IWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveProvider.ReadByteArrayInt32Int32">
            <summary>Sets the stub of IWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubIWaveProvider.WaveFormatGet">
            <summary>Sets the stub of IWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubIWaveProvider.na::NAudio#Wave#IWaveProvider#WaveFormat">
            <summary>Sets the stub of IWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat">
            <summary>Stub type of NAudio.Wave.ImaAdpcmWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubImaAdpcmWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.SerializeBinaryWriter">
            <summary>Sets the stub of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubImaAdpcmWaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMediaFoundationEncoder">
            <summary>Stub type of NAudio.Wave.MediaFoundationEncoder</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationEncoder.#ctor(NAudio.MediaFoundation.MediaType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationEncoder.InitializeStub">
            <summary>Initializes a new instance of type StubMediaFoundationEncoder</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationEncoder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationEncoder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationEncoder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMediaFoundationReader">
            <summary>Stub type of NAudio.Wave.MediaFoundationReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.#ctor(System.String,NAudio.Wave.MediaFoundationReader.MediaFoundationReaderSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubMediaFoundationReader.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubMediaFoundationReader.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubMediaFoundationReader.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubMediaFoundationReader.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.CreateReader(NAudio.Wave.MediaFoundationReader.MediaFoundationReaderSettings)">
            <summary>Sets the stub of MediaFoundationReader.CreateReader(MediaFoundationReaderSettings settings)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CreateReaderMediaFoundationReaderMediaFoundationReaderSettings">
            <summary>Sets the stub of MediaFoundationReader.CreateReader(MediaFoundationReaderSettings settings)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.Dispose(System.Boolean)">
            <summary>Sets the stub of MediaFoundationReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.DisposeBoolean">
            <summary>Sets the stub of MediaFoundationReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.InitializeStub">
            <summary>Initializes a new instance of type StubMediaFoundationReader</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.LengthGet">
            <summary>Sets the stub of MediaFoundationReader.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.PositionGet">
            <summary>Sets the stub of MediaFoundationReader.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.PositionSetInt64">
            <summary>Sets the stub of MediaFoundationReader.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of MediaFoundationReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadByteArrayInt32Int32">
            <summary>Sets the stub of MediaFoundationReader.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.WaveFormatGet">
            <summary>Sets the stub of MediaFoundationReader.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.Length">
            <summary>Sets the stub of MediaFoundationReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.Position">
            <summary>Sets the stub of MediaFoundationReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.WaveFormat">
            <summary>Sets the stub of MediaFoundationReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationReader.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMediaFoundationResampler">
            <summary>Stub type of NAudio.Wave.MediaFoundationResampler</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationResampler.#ctor(NAudio.Wave.IWaveProvider,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationResampler.#ctor(NAudio.Wave.IWaveProvider,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationResampler.CreateTransform">
            <summary>Sets the stub of MediaFoundationResampler.CreateTransform()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationResampler.CreateTransform01">
            <summary>Sets the stub of MediaFoundationResampler.CreateTransform()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationResampler.Dispose(System.Boolean)">
            <summary>Sets the stub of MediaFoundationResampler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMediaFoundationResampler.DisposeBoolean">
            <summary>Sets the stub of MediaFoundationResampler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMediaFoundationResampler.InitializeStub">
            <summary>Initializes a new instance of type StubMediaFoundationResampler</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationResampler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationResampler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMediaFoundationResampler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMixingWaveProvider32">
            <summary>Stub type of NAudio.Wave.MixingWaveProvider32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMixingWaveProvider32.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMixingWaveProvider32.#ctor(System.Collections.Generic.IEnumerable{NAudio.Wave.IWaveProvider})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMixingWaveProvider32.InitializeStub">
            <summary>Initializes a new instance of type StubMixingWaveProvider32</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMixingWaveProvider32.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMixingWaveProvider32.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMixingWaveProvider32.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMonoToStereoProvider16">
            <summary>Stub type of NAudio.Wave.MonoToStereoProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMonoToStereoProvider16.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMonoToStereoProvider16.InitializeStub">
            <summary>Initializes a new instance of type StubMonoToStereoProvider16</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMonoToStereoProvider16.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMonoToStereoProvider16.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMonoToStereoProvider16.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMp3FileReader">
            <summary>Stub type of NAudio.Wave.Mp3FileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.#ctor(System.String,NAudio.Wave.Mp3FileReader.FrameDecompressorBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.#ctor(System.IO.Stream,NAudio.Wave.Mp3FileReader.FrameDecompressorBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubMp3FileReader.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubMp3FileReader.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubMp3FileReader.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubMp3FileReader.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.Dispose(System.Boolean)">
            <summary>Sets the stub of Mp3FileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.DisposeBoolean">
            <summary>Sets the stub of Mp3FileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.InitializeStub">
            <summary>Initializes a new instance of type StubMp3FileReader</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.LengthGet">
            <summary>Sets the stub of Mp3FileReader.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.PositionGet">
            <summary>Sets the stub of Mp3FileReader.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.PositionSetInt64">
            <summary>Sets the stub of Mp3FileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of Mp3FileReader.Read(Byte[] sampleBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.ReadByteArrayInt32Int32">
            <summary>Sets the stub of Mp3FileReader.Read(Byte[] sampleBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.WaveFormatGet">
            <summary>Sets the stub of Mp3FileReader.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3FileReader.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3FileReader.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.Length">
            <summary>Sets the stub of Mp3FileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.Position">
            <summary>Sets the stub of Mp3FileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.WaveFormat">
            <summary>Sets the stub of Mp3FileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3FileReader.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMp3WaveFormat">
            <summary>Stub type of NAudio.Wave.Mp3WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3WaveFormat.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3WaveFormat.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3WaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3WaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3WaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3WaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3WaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubMp3WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3WaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3WaveFormat.SerializeBinaryWriter">
            <summary>Sets the stub of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMp3WaveFormat.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubMp3WaveFormat.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3WaveFormat.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3WaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3WaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMp3WaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubMultiplexingWaveProvider">
            <summary>Stub type of NAudio.Wave.MultiplexingWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMultiplexingWaveProvider.#ctor(System.Collections.Generic.IEnumerable{NAudio.Wave.IWaveProvider},System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubMultiplexingWaveProvider.InitializeStub">
            <summary>Initializes a new instance of type StubMultiplexingWaveProvider</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMultiplexingWaveProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMultiplexingWaveProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubMultiplexingWaveProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubRawSourceWaveStream">
            <summary>Stub type of NAudio.Wave.RawSourceWaveStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.#ctor(System.IO.Stream,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubRawSourceWaveStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubRawSourceWaveStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubRawSourceWaveStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubRawSourceWaveStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.Dispose(System.Boolean)">
            <summary>Sets the stub of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.DisposeBoolean">
            <summary>Sets the stub of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.InitializeStub">
            <summary>Initializes a new instance of type StubRawSourceWaveStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.LengthGet">
            <summary>Sets the stub of RawSourceWaveStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.PositionGet">
            <summary>Sets the stub of RawSourceWaveStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.PositionSetInt64">
            <summary>Sets the stub of RawSourceWaveStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of RawSourceWaveStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of RawSourceWaveStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.WaveFormatGet">
            <summary>Sets the stub of RawSourceWaveStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRawSourceWaveStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubRawSourceWaveStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.Length">
            <summary>Sets the stub of RawSourceWaveStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.Position">
            <summary>Sets the stub of RawSourceWaveStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.WaveFormat">
            <summary>Sets the stub of RawSourceWaveStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRawSourceWaveStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubResamplerDmoStream">
            <summary>Stub type of NAudio.Wave.ResamplerDmoStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.#ctor(NAudio.Wave.IWaveProvider,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubResamplerDmoStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubResamplerDmoStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubResamplerDmoStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubResamplerDmoStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.Dispose(System.Boolean)">
            <summary>Sets the stub of ResamplerDmoStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.DisposeBoolean">
            <summary>Sets the stub of ResamplerDmoStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.InitializeStub">
            <summary>Initializes a new instance of type StubResamplerDmoStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.LengthGet">
            <summary>Sets the stub of ResamplerDmoStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.PositionGet">
            <summary>Sets the stub of ResamplerDmoStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.PositionSetInt64">
            <summary>Sets the stub of ResamplerDmoStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of ResamplerDmoStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of ResamplerDmoStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.WaveFormatGet">
            <summary>Sets the stub of ResamplerDmoStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubResamplerDmoStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubResamplerDmoStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.Length">
            <summary>Sets the stub of ResamplerDmoStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.Position">
            <summary>Sets the stub of ResamplerDmoStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.WaveFormat">
            <summary>Sets the stub of ResamplerDmoStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubResamplerDmoStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubRiffChunk">
            <summary>Stub type of NAudio.Wave.RiffChunk</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRiffChunk.#ctor(System.Int32,System.Int32,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubRiffChunk.InitializeStub">
            <summary>Initializes a new instance of type StubRiffChunk</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRiffChunk.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRiffChunk.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubRiffChunk.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubSampleEventArgs">
            <summary>Stub type of NAudio.Wave.SampleEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSampleEventArgs.#ctor(System.Single,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSampleEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubSampleEventArgs</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSampleEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSampleEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSampleEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubSimpleCompressorStream">
            <summary>Stub type of NAudio.Wave.SimpleCompressorStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.#ctor(NAudio.Wave.WaveStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubSimpleCompressorStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubSimpleCompressorStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubSimpleCompressorStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubSimpleCompressorStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.BlockAlignGet">
            <summary>Sets the stub of SimpleCompressorStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.Dispose(System.Boolean)">
            <summary>Sets the stub of SimpleCompressorStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.DisposeBoolean">
            <summary>Sets the stub of SimpleCompressorStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.HasData(System.Int32)">
            <summary>Sets the stub of SimpleCompressorStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.HasDataInt32">
            <summary>Sets the stub of SimpleCompressorStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleCompressorStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.LengthGet">
            <summary>Sets the stub of SimpleCompressorStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.PositionGet">
            <summary>Sets the stub of SimpleCompressorStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.PositionSetInt64">
            <summary>Sets the stub of SimpleCompressorStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SimpleCompressorStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of SimpleCompressorStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.WaveFormatGet">
            <summary>Sets the stub of SimpleCompressorStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubSimpleCompressorStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubSimpleCompressorStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.BlockAlign">
            <summary>Sets the stub of SimpleCompressorStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.Length">
            <summary>Sets the stub of SimpleCompressorStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.Position">
            <summary>Sets the stub of SimpleCompressorStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.WaveFormat">
            <summary>Sets the stub of SimpleCompressorStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubSimpleCompressorStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubStereoToMonoProvider16">
            <summary>Stub type of NAudio.Wave.StereoToMonoProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubStereoToMonoProvider16.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubStereoToMonoProvider16.InitializeStub">
            <summary>Initializes a new instance of type StubStereoToMonoProvider16</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubStereoToMonoProvider16.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubStereoToMonoProvider16.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubStereoToMonoProvider16.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubStoppedEventArgs">
            <summary>Stub type of NAudio.Wave.StoppedEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubStoppedEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubStoppedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStoppedEventArgs</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubStoppedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubStoppedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubStoppedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat">
            <summary>Stub type of NAudio.Wave.TrueSpeechWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubTrueSpeechWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of TrueSpeechWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.SerializeBinaryWriter">
            <summary>Sets the stub of TrueSpeechWaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubTrueSpeechWaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubVolumeWaveProvider16">
            <summary>Stub type of NAudio.Wave.VolumeWaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubVolumeWaveProvider16.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubVolumeWaveProvider16.InitializeStub">
            <summary>Initializes a new instance of type StubVolumeWaveProvider16</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubVolumeWaveProvider16.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubVolumeWaveProvider16.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubVolumeWaveProvider16.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWasapiLoopbackCapture">
            <summary>Stub type of NAudio.Wave.WasapiLoopbackCapture</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.#ctor(NAudio.CoreAudioApi.MMDevice)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.AttachBackingFieldToWaveFormat">
            <summary>Attaches delegates to emulate StubWasapiLoopbackCapture.WaveFormat as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.GetAudioClientStreamFlags">
            <summary>Sets the stub of WasapiLoopbackCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.GetAudioClientStreamFlags01">
            <summary>Sets the stub of WasapiLoopbackCapture.GetAudioClientStreamFlags()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.InitializeStub">
            <summary>Initializes a new instance of type StubWasapiLoopbackCapture</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.WaveFormatGet">
            <summary>Sets the stub of WasapiLoopbackCapture.get_WaveFormat()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.WaveFormatSetWaveFormat">
            <summary>Sets the stub of WasapiLoopbackCapture.set_WaveFormat(WaveFormat value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiLoopbackCapture.WaveFormat">
            <summary>Sets the stub of WasapiLoopbackCapture.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWasapiOut">
            <summary>Stub type of NAudio.Wave.WasapiOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiOut.#ctor(NAudio.CoreAudioApi.AudioClientShareMode,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiOut.#ctor(NAudio.CoreAudioApi.AudioClientShareMode,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiOut.#ctor(NAudio.CoreAudioApi.MMDevice,NAudio.CoreAudioApi.AudioClientShareMode,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWasapiOut.InitializeStub">
            <summary>Initializes a new instance of type StubWasapiOut</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiOut.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiOut.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWasapiOut.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWave16ToFloatProvider">
            <summary>Stub type of NAudio.Wave.Wave16ToFloatProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave16ToFloatProvider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave16ToFloatProvider.InitializeStub">
            <summary>Initializes a new instance of type StubWave16ToFloatProvider</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave16ToFloatProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave16ToFloatProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave16ToFloatProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWave32To16Stream">
            <summary>Stub type of NAudio.Wave.Wave32To16Stream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.#ctor(NAudio.Wave.WaveStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWave32To16Stream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWave32To16Stream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWave32To16Stream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWave32To16Stream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.BlockAlignGet">
            <summary>Sets the stub of Wave32To16Stream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.Dispose(System.Boolean)">
            <summary>Sets the stub of Wave32To16Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.DisposeBoolean">
            <summary>Sets the stub of Wave32To16Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.InitializeStub">
            <summary>Initializes a new instance of type StubWave32To16Stream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.LengthGet">
            <summary>Sets the stub of Wave32To16Stream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.PositionGet">
            <summary>Sets the stub of Wave32To16Stream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.PositionSetInt64">
            <summary>Sets the stub of Wave32To16Stream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of Wave32To16Stream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of Wave32To16Stream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.WaveFormatGet">
            <summary>Sets the stub of Wave32To16Stream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWave32To16Stream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWave32To16Stream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.BlockAlign">
            <summary>Sets the stub of Wave32To16Stream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.Length">
            <summary>Sets the stub of Wave32To16Stream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.Position">
            <summary>Sets the stub of Wave32To16Stream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.WaveFormat">
            <summary>Sets the stub of Wave32To16Stream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWave32To16Stream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveBuffer">
            <summary>Stub type of NAudio.Wave.WaveBuffer</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveBuffer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveBuffer.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveBuffer.InitializeStub">
            <summary>Initializes a new instance of type StubWaveBuffer</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveBuffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveBuffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveBuffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveChannel32">
            <summary>Stub type of NAudio.Wave.WaveChannel32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.#ctor(NAudio.Wave.WaveStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.#ctor(NAudio.Wave.WaveStream,System.Single,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWaveChannel32.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveChannel32.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveChannel32.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveChannel32.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.BlockAlignGet">
            <summary>Sets the stub of WaveChannel32.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveChannel32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.DisposeBoolean">
            <summary>Sets the stub of WaveChannel32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.HasData(System.Int32)">
            <summary>Sets the stub of WaveChannel32.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.HasDataInt32">
            <summary>Sets the stub of WaveChannel32.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.InitializeStub">
            <summary>Initializes a new instance of type StubWaveChannel32</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.LengthGet">
            <summary>Sets the stub of WaveChannel32.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.PositionGet">
            <summary>Sets the stub of WaveChannel32.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.PositionSetInt64">
            <summary>Sets the stub of WaveChannel32.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveChannel32.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveChannel32.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.WaveFormatGet">
            <summary>Sets the stub of WaveChannel32.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveChannel32.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveChannel32.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.BlockAlign">
            <summary>Sets the stub of WaveChannel32.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.Length">
            <summary>Sets the stub of WaveChannel32.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.Position">
            <summary>Sets the stub of WaveChannel32.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.WaveFormat">
            <summary>Sets the stub of WaveChannel32.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveChannel32.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFileReader">
            <summary>Stub type of NAudio.Wave.WaveFileReader</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWaveFileReader.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveFileReader.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveFileReader.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveFileReader.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.DisposeBoolean">
            <summary>Sets the stub of WaveFileReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFileReader</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.LengthGet">
            <summary>Sets the stub of WaveFileReader.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.PositionGet">
            <summary>Sets the stub of WaveFileReader.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.PositionSetInt64">
            <summary>Sets the stub of WaveFileReader.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveFileReader.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.WaveFormatGet">
            <summary>Sets the stub of WaveFileReader.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileReader.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileReader.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.Length">
            <summary>Sets the stub of WaveFileReader.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.Position">
            <summary>Sets the stub of WaveFileReader.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.WaveFormat">
            <summary>Sets the stub of WaveFileReader.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileReader.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFileWriter">
            <summary>Stub type of NAudio.Wave.WaveFileWriter</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.#ctor(System.String,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.#ctor(System.IO.Stream,NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveFileWriter.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveFileWriter.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveFileWriter.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.CanReadGet">
            <summary>Sets the stub of WaveFileWriter.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.CanSeekGet">
            <summary>Sets the stub of WaveFileWriter.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.CanWriteGet">
            <summary>Sets the stub of WaveFileWriter.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.DisposeBoolean">
            <summary>Sets the stub of WaveFileWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.Flush">
            <summary>Sets the stub of WaveFileWriter.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.Flush01">
            <summary>Sets the stub of WaveFileWriter.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFileWriter</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.LengthGet">
            <summary>Sets the stub of WaveFileWriter.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.PositionGet">
            <summary>Sets the stub of WaveFileWriter.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.PositionSetInt64">
            <summary>Sets the stub of WaveFileWriter.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveFileWriter.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveFileWriter.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.SetLength(System.Int64)">
            <summary>Sets the stub of WaveFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.SetLengthInt64">
            <summary>Sets the stub of WaveFileWriter.SetLength(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.UpdateHeader(System.IO.BinaryWriter)">
            <summary>Sets the stub of WaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.UpdateHeaderBinaryWriter">
            <summary>Sets the stub of WaveFileWriter.UpdateHeader(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFileWriter.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveFileWriter.Write(Byte[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFileWriter.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.CanRead">
            <summary>Sets the stub of WaveFileWriter.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.CanSeek">
            <summary>Sets the stub of WaveFileWriter.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.CanWrite">
            <summary>Sets the stub of WaveFileWriter.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.Length">
            <summary>Sets the stub of WaveFileWriter.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.Position">
            <summary>Sets the stub of WaveFileWriter.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFileWriter.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFloatTo16Provider">
            <summary>Stub type of NAudio.Wave.WaveFloatTo16Provider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFloatTo16Provider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFloatTo16Provider.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFloatTo16Provider</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFloatTo16Provider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFloatTo16Provider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFloatTo16Provider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFormat">
            <summary>Stub type of NAudio.Wave.WaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormat.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormat</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormat.SerializeBinaryWriter">
            <summary>Sets the stub of WaveFormat.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormat.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormat.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormat.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFormatConversionStream">
            <summary>Stub type of NAudio.Wave.WaveFormatConversionStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.#ctor(NAudio.Wave.WaveFormat,NAudio.Wave.WaveStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWaveFormatConversionStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveFormatConversionStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveFormatConversionStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveFormatConversionStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveFormatConversionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.DisposeBoolean">
            <summary>Sets the stub of WaveFormatConversionStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormatConversionStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.LengthGet">
            <summary>Sets the stub of WaveFormatConversionStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.PositionGet">
            <summary>Sets the stub of WaveFormatConversionStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.PositionSetInt64">
            <summary>Sets the stub of WaveFormatConversionStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveFormatConversionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveFormatConversionStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WaveFormatGet">
            <summary>Sets the stub of WaveFormatConversionStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Length">
            <summary>Sets the stub of WaveFormatConversionStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.Position">
            <summary>Sets the stub of WaveFormatConversionStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WaveFormat">
            <summary>Sets the stub of WaveFormatConversionStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatConversionStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFormatExtensible">
            <summary>Stub type of NAudio.Wave.WaveFormatExtensible</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtensible.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtensible.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtensible.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtensible.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtensible.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtensible.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtensible.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormatExtensible</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtensible.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of WaveFormatExtensible.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtensible.SerializeBinaryWriter">
            <summary>Sets the stub of WaveFormatExtensible.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtensible.ToString">
            <summary>Sets the stub of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtensible.ToString01">
            <summary>Sets the stub of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtensible.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtensible.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtensible.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtensible.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveFormatExtraData">
            <summary>Stub type of NAudio.Wave.WaveFormatExtraData</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtraData.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtraData.BlockAlignGet">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtraData.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtraData.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtraData.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtraData.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtraData.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormatExtraData</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtraData.Serialize(System.IO.BinaryWriter)">
            <summary>Sets the stub of WaveFormatExtraData.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtraData.SerializeBinaryWriter">
            <summary>Sets the stub of WaveFormatExtraData.Serialize(BinaryWriter writer)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveFormatExtraData.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveFormatExtraData.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtraData.BlockAlign">
            <summary>Sets the stub of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtraData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtraData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveFormatExtraData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveIn">
            <summary>Stub type of NAudio.Wave.WaveIn</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveIn.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveIn.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveIn.#ctor(NAudio.Wave.WaveCallbackInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveIn.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveIn.DisposeBoolean">
            <summary>Sets the stub of WaveIn.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveIn.InitializeStub">
            <summary>Initializes a new instance of type StubWaveIn</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveIn.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveIn.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveIn.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveInEvent">
            <summary>Stub type of NAudio.Wave.WaveInEvent</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInEvent.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveInEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveInEvent.DisposeBoolean">
            <summary>Sets the stub of WaveInEvent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInEvent.InitializeStub">
            <summary>Initializes a new instance of type StubWaveInEvent</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveInEventArgs">
            <summary>Stub type of NAudio.Wave.WaveInEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInEventArgs.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubWaveInEventArgs</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveInProvider">
            <summary>Stub type of NAudio.Wave.WaveInProvider</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInProvider.#ctor(NAudio.Wave.IWaveIn)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveInProvider.InitializeStub">
            <summary>Initializes a new instance of type StubWaveInProvider</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveInProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveMixerStream32">
            <summary>Stub type of NAudio.Wave.WaveMixerStream32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.#ctor(System.Collections.Generic.IEnumerable{NAudio.Wave.WaveStream},System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWaveMixerStream32.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveMixerStream32.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveMixerStream32.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveMixerStream32.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.BlockAlignGet">
            <summary>Sets the stub of WaveMixerStream32.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CopyToAsyncStreamInt32CancellationToken">
            <summary>Sets the stub of Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveMixerStream32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.DisposeBoolean">
            <summary>Sets the stub of WaveMixerStream32.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.FlushAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.FlushAsyncCancellationToken">
            <summary>Sets the stub of Stream.FlushAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.InitializeStub">
            <summary>Initializes a new instance of type StubWaveMixerStream32</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.LengthGet">
            <summary>Sets the stub of WaveMixerStream32.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.PositionGet">
            <summary>Sets the stub of WaveMixerStream32.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.PositionSetInt64">
            <summary>Sets the stub of WaveMixerStream32.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveMixerStream32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveMixerStream32.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.WaveFormatGet">
            <summary>Sets the stub of WaveMixerStream32.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>Sets the stub of Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.BlockAlign">
            <summary>Sets the stub of WaveMixerStream32.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.Length">
            <summary>Sets the stub of WaveMixerStream32.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.Position">
            <summary>Sets the stub of WaveMixerStream32.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.WaveFormat">
            <summary>Sets the stub of WaveMixerStream32.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveMixerStream32.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveOffsetStream">
            <summary>Stub type of NAudio.Wave.WaveOffsetStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.#ctor(NAudio.Wave.WaveStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.#ctor(NAudio.Wave.WaveStream,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWaveOffsetStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveOffsetStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveOffsetStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveOffsetStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.BlockAlignGet">
            <summary>Sets the stub of WaveOffsetStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.Dispose(System.Boolean)">
            <summary>Sets the stub of WaveOffsetStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.DisposeBoolean">
            <summary>Sets the stub of WaveOffsetStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.HasData(System.Int32)">
            <summary>Sets the stub of WaveOffsetStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.HasDataInt32">
            <summary>Sets the stub of WaveOffsetStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.InitializeStub">
            <summary>Initializes a new instance of type StubWaveOffsetStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.LengthGet">
            <summary>Sets the stub of WaveOffsetStream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.PositionGet">
            <summary>Sets the stub of WaveOffsetStream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.PositionSetInt64">
            <summary>Sets the stub of WaveOffsetStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveOffsetStream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of WaveOffsetStream.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.WaveFormatGet">
            <summary>Sets the stub of WaveOffsetStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOffsetStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveOffsetStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.BlockAlign">
            <summary>Sets the stub of WaveOffsetStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.Length">
            <summary>Sets the stub of WaveOffsetStream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.Position">
            <summary>Sets the stub of WaveOffsetStream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.WaveFormat">
            <summary>Sets the stub of WaveOffsetStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOffsetStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveOut">
            <summary>Stub type of NAudio.Wave.WaveOut</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOut.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOut.#ctor(NAudio.Wave.WaveCallbackInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOut.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOut.InitializeStub">
            <summary>Initializes a new instance of type StubWaveOut</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOut.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOut.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOut.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveOutEvent">
            <summary>Stub type of NAudio.Wave.WaveOutEvent</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOutEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveOutEvent.InitializeStub">
            <summary>Initializes a new instance of type StubWaveOutEvent</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOutEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOutEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveOutEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveProvider16">
            <summary>Stub type of NAudio.Wave.WaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider16.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider16.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider16.InitializeStub">
            <summary>Initializes a new instance of type StubWaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider16.Read(System.Int16[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveProvider16.Read(Int16[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveProvider16.ReadInt16ArrayInt32Int32">
            <summary>Sets the stub of WaveProvider16.Read(Int16[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveProvider16.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveProvider16.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveProvider16.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveProvider32">
            <summary>Stub type of NAudio.Wave.WaveProvider32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider32.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider32.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider32.InitializeStub">
            <summary>Initializes a new instance of type StubWaveProvider32</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveProvider32.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveProvider32.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveProvider32.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of WaveProvider32.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveProvider32.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveProvider32.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveProvider32.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveRecorder">
            <summary>Stub type of NAudio.Wave.WaveRecorder</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveRecorder.#ctor(NAudio.Wave.IWaveProvider,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveRecorder.InitializeStub">
            <summary>Initializes a new instance of type StubWaveRecorder</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveRecorder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveRecorder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveRecorder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.Fakes.StubWaveStream">
            <summary>Stub type of NAudio.Wave.WaveStream</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.AttachBackingFieldToCurrentTime">
            <summary>Attaches delegates to emulate StubWaveStream.CurrentTime as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubWaveStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubWaveStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubWaveStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.BlockAlignGet">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CanReadGet">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CanSeekGet">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CanWriteGet">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CurrentTimeGet">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.CurrentTimeSetTimeSpan">
            <summary>Sets the stub of WaveStream.set_CurrentTime(TimeSpan value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.Dispose(System.Boolean)">
            <summary>Sets the stub of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.DisposeBoolean">
            <summary>Sets the stub of Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.Flush">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.Flush01">
            <summary>Sets the stub of WaveStream.Flush()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.HasData(System.Int32)">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.HasDataInt32">
            <summary>Sets the stub of WaveStream.HasData(Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.InitializeStub">
            <summary>Initializes a new instance of type StubWaveStream</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.LengthGet">
            <summary>Sets the stub of Stream.get_Length()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.PositionGet">
            <summary>Sets the stub of Stream.get_Position()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.PositionSetInt64">
            <summary>Sets the stub of Stream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of Stream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of Stream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of WaveStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.SetLength(System.Int64)">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.SetLengthInt64">
            <summary>Sets the stub of WaveStream.SetLength(Int64 length)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.TotalTimeGet">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.WaveFormatGet">
            <summary>Sets the stub of WaveStream.get_WaveFormat()</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:NAudio.Wave.Fakes.StubWaveStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of WaveStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:NAudio.Wave.Fakes.StubWaveStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.BlockAlign">
            <summary>Sets the stub of WaveStream.get_BlockAlign()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.CanRead">
            <summary>Sets the stub of WaveStream.get_CanRead()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.CanSeek">
            <summary>Sets the stub of WaveStream.get_CanSeek()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.CanWrite">
            <summary>Sets the stub of WaveStream.get_CanWrite()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.CurrentTime">
            <summary>Sets the stub of WaveStream.get_CurrentTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.Length">
            <summary>Sets the stub of Stream.get_Length()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.Position">
            <summary>Sets the stub of Stream.get_Position()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.TotalTime">
            <summary>Sets the stub of WaveStream.get_TotalTime()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.WaveFormat">
            <summary>Sets the stub of WaveStream.get_WaveFormat()</summary>
        </member>
        <member name="P:NAudio.Wave.Fakes.StubWaveStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.FadeInOutSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.#ctor(NAudio.Wave.SampleProviders.FadeInOutSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.BeginFadeInDouble">
            <summary>Sets the shim of FadeInOutSampleProvider.BeginFadeIn(Double fadeDurationInMilliseconds)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.BeginFadeOutDouble">
            <summary>Sets the shim of FadeInOutSampleProvider.BeginFadeOut(Double fadeDurationInMilliseconds)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.ClearBufferSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.ClearBuffer(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.ConstructorISampleProviderBoolean">
            <summary>Sets the shim of FadeInOutSampleProvider.FadeInOutSampleProvider(ISampleProvider source, Boolean initiallySilent)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.FadeInSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.FadeIn(Single[] buffer, Int32 offset, Int32 sourceSamplesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.FadeOutSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.FadeOut(Single[] buffer, Int32 offset, Int32 sourceSamplesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.WaveFormatGet">
            <summary>Sets the shim of FadeInOutSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances.BeginFadeInDouble">
            <summary>Sets the shim of FadeInOutSampleProvider.BeginFadeIn(Double fadeDurationInMilliseconds)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances.BeginFadeOutDouble">
            <summary>Sets the shim of FadeInOutSampleProvider.BeginFadeOut(Double fadeDurationInMilliseconds)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances.FadeInSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.FadeIn(Single[] buffer, Int32 offset, Int32 sourceSamplesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances.FadeOutSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.FadeOut(Single[] buffer, Int32 offset, Int32 sourceSamplesRead)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of FadeInOutSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimFadeInOutSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of FadeInOutSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy">
            <summary>Shim type of NAudio.Wave.SampleProviders.LinearPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.#ctor(NAudio.Wave.SampleProviders.LinearPanStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.Bind(NAudio.Wave.SampleProviders.IPanStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.Constructor">
            <summary>Sets the shim of LinearPanStrategy.LinearPanStrategy()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.GetMultipliersSingle">
            <summary>Sets the shim of LinearPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimLinearPanStrategy.AllInstances.GetMultipliersSingle">
            <summary>Sets the shim of LinearPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.MeteringSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.#ctor(NAudio.Wave.SampleProviders.MeteringSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.ConstructorISampleProvider">
            <summary>Sets the shim of MeteringSampleProvider.MeteringSampleProvider(ISampleProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.ConstructorISampleProviderInt32">
            <summary>Sets the shim of MeteringSampleProvider.MeteringSampleProvider(ISampleProvider source, Int32 samplesPerNotification)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MeteringSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.SamplesPerNotificationGet">
            <summary>Sets the shim of MeteringSampleProvider.get_SamplesPerNotification()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.SamplesPerNotificationSetInt32">
            <summary>Sets the shim of MeteringSampleProvider.set_SamplesPerNotification(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.StreamVolumeAddEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of MeteringSampleProvider.add_StreamVolume(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.StreamVolumeRemoveEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of MeteringSampleProvider.remove_StreamVolume(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.WaveFormatGet">
            <summary>Sets the shim of MeteringSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MeteringSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances.SamplesPerNotificationGet">
            <summary>Sets the shim of MeteringSampleProvider.get_SamplesPerNotification()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances.SamplesPerNotificationSetInt32">
            <summary>Sets the shim of MeteringSampleProvider.set_SamplesPerNotification(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances.StreamVolumeAddEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of MeteringSampleProvider.add_StreamVolume(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances.StreamVolumeRemoveEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of MeteringSampleProvider.remove_StreamVolume(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMeteringSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MeteringSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.MixingSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.#ctor(NAudio.Wave.SampleProviders.MixingSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AddMixerInputISampleProvider">
            <summary>Sets the shim of MixingSampleProvider.AddMixerInput(ISampleProvider mixerInput)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AddMixerInputIWaveProvider">
            <summary>Sets the shim of MixingSampleProvider.AddMixerInput(IWaveProvider mixerInput)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.ConstructorIEnumerableOfISampleProvider">
            <summary>Sets the shim of MixingSampleProvider.MixingSampleProvider(IEnumerable`1&lt;ISampleProvider&gt; sources)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.ConstructorWaveFormat">
            <summary>Sets the shim of MixingSampleProvider.MixingSampleProvider(WaveFormat waveFormat)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.ReadFullyGet">
            <summary>Sets the shim of MixingSampleProvider.get_ReadFully()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.ReadFullySetBoolean">
            <summary>Sets the shim of MixingSampleProvider.set_ReadFully(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MixingSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.RemoveAllMixerInputs">
            <summary>Sets the shim of MixingSampleProvider.RemoveAllMixerInputs()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.RemoveMixerInputISampleProvider">
            <summary>Sets the shim of MixingSampleProvider.RemoveMixerInput(ISampleProvider mixerInput)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.WaveFormatGet">
            <summary>Sets the shim of MixingSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.AddMixerInputISampleProvider">
            <summary>Sets the shim of MixingSampleProvider.AddMixerInput(ISampleProvider mixerInput)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.AddMixerInputIWaveProvider">
            <summary>Sets the shim of MixingSampleProvider.AddMixerInput(IWaveProvider mixerInput)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.ReadFullyGet">
            <summary>Sets the shim of MixingSampleProvider.get_ReadFully()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.ReadFullySetBoolean">
            <summary>Sets the shim of MixingSampleProvider.set_ReadFully(Boolean value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MixingSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.RemoveAllMixerInputs">
            <summary>Sets the shim of MixingSampleProvider.RemoveAllMixerInputs()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.RemoveMixerInputISampleProvider">
            <summary>Sets the shim of MixingSampleProvider.RemoveMixerInput(ISampleProvider mixerInput)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMixingSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MixingSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.MonoToStereoSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.#ctor(NAudio.Wave.SampleProviders.MonoToStereoSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.ConstructorISampleProvider">
            <summary>Sets the shim of MonoToStereoSampleProvider.MonoToStereoSampleProvider(ISampleProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.EnsureSourceBufferInt32">
            <summary>Sets the shim of MonoToStereoSampleProvider.EnsureSourceBuffer(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MonoToStereoSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.WaveFormatGet">
            <summary>Sets the shim of MonoToStereoSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.AllInstances.EnsureSourceBufferInt32">
            <summary>Sets the shim of MonoToStereoSampleProvider.EnsureSourceBuffer(Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MonoToStereoSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMonoToStereoSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MonoToStereoSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.MultiplexingSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.#ctor(NAudio.Wave.SampleProviders.MultiplexingSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.ConnectInputToOutputInt32Int32">
            <summary>Sets the shim of MultiplexingSampleProvider.ConnectInputToOutput(Int32 inputChannel, Int32 outputChannel)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.ConstructorIEnumerableOfISampleProviderInt32">
            <summary>Sets the shim of MultiplexingSampleProvider.MultiplexingSampleProvider(IEnumerable`1&lt;ISampleProvider&gt; inputs, Int32 numberOfOutputChannels)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.InputChannelCountGet">
            <summary>Sets the shim of MultiplexingSampleProvider.get_InputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.OutputChannelCountGet">
            <summary>Sets the shim of MultiplexingSampleProvider.get_OutputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MultiplexingSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.WaveFormatGet">
            <summary>Sets the shim of MultiplexingSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.AllInstances.ConnectInputToOutputInt32Int32">
            <summary>Sets the shim of MultiplexingSampleProvider.ConnectInputToOutput(Int32 inputChannel, Int32 outputChannel)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.AllInstances.InputChannelCountGet">
            <summary>Sets the shim of MultiplexingSampleProvider.get_InputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.AllInstances.OutputChannelCountGet">
            <summary>Sets the shim of MultiplexingSampleProvider.get_OutputChannelCount()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of MultiplexingSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimMultiplexingSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of MultiplexingSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.NotifyingSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.#ctor(NAudio.Wave.SampleProviders.NotifyingSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.Bind(NAudio.Wave.ISampleNotifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.ConstructorISampleProvider">
            <summary>Sets the shim of NotifyingSampleProvider.NotifyingSampleProvider(ISampleProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of NotifyingSampleProvider.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.SampleAddEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of NotifyingSampleProvider.add_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.SampleRemoveEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of NotifyingSampleProvider.remove_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.WaveFormatGet">
            <summary>Sets the shim of NotifyingSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of NotifyingSampleProvider.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.AllInstances.SampleAddEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of NotifyingSampleProvider.add_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.AllInstances.SampleRemoveEventHandlerOfSampleEventArgs">
            <summary>Sets the shim of NotifyingSampleProvider.remove_Sample(EventHandler`1&lt;SampleEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimNotifyingSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of NotifyingSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.OffsetSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.#ctor(NAudio.Wave.SampleProviders.OffsetSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.ConstructorISampleProvider">
            <summary>Sets the shim of OffsetSampleProvider.OffsetSampleProvider(ISampleProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.DelayBySamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_DelayBySamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.DelayBySamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_DelayBySamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.LeadOutSamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_LeadOutSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.LeadOutSamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_LeadOutSamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of OffsetSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.SkipOverSamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_SkipOverSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.SkipOverSamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_SkipOverSamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.TakeSamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_TakeSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.TakeSamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_TakeSamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.WaveFormatGet">
            <summary>Sets the shim of OffsetSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.DelayBySamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_DelayBySamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.DelayBySamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_DelayBySamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.LeadOutSamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_LeadOutSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.LeadOutSamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_LeadOutSamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of OffsetSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.SkipOverSamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_SkipOverSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.SkipOverSamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_SkipOverSamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.TakeSamplesGet">
            <summary>Sets the shim of OffsetSampleProvider.get_TakeSamples()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.TakeSamplesSetInt32">
            <summary>Sets the shim of OffsetSampleProvider.set_TakeSamples(Int32 value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimOffsetSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of OffsetSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.PanningSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.#ctor(NAudio.Wave.SampleProviders.PanningSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.ConstructorISampleProvider">
            <summary>Sets the shim of PanningSampleProvider.PanningSampleProvider(ISampleProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.PanGet">
            <summary>Sets the shim of PanningSampleProvider.get_Pan()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.PanSetSingle">
            <summary>Sets the shim of PanningSampleProvider.set_Pan(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.PanStrategyGet">
            <summary>Sets the shim of PanningSampleProvider.get_PanStrategy()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.PanStrategySetIPanStrategy">
            <summary>Sets the shim of PanningSampleProvider.set_PanStrategy(IPanStrategy value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of PanningSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.UpdateMultipliers">
            <summary>Sets the shim of PanningSampleProvider.UpdateMultipliers()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.WaveFormatGet">
            <summary>Sets the shim of PanningSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.PanGet">
            <summary>Sets the shim of PanningSampleProvider.get_Pan()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.PanSetSingle">
            <summary>Sets the shim of PanningSampleProvider.set_Pan(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.PanStrategyGet">
            <summary>Sets the shim of PanningSampleProvider.get_PanStrategy()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.PanStrategySetIPanStrategy">
            <summary>Sets the shim of PanningSampleProvider.set_PanStrategy(IPanStrategy value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of PanningSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.UpdateMultipliers">
            <summary>Sets the shim of PanningSampleProvider.UpdateMultipliers()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPanningSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of PanningSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.Pcm16BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.#ctor(NAudio.Wave.SampleProviders.Pcm16BitToSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.ConstructorIWaveProvider">
            <summary>Sets the shim of Pcm16BitToSampleProvider.Pcm16BitToSampleProvider(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm16BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm16BitToSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm16BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.Pcm24BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.#ctor(NAudio.Wave.SampleProviders.Pcm24BitToSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.ConstructorIWaveProvider">
            <summary>Sets the shim of Pcm24BitToSampleProvider.Pcm24BitToSampleProvider(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm24BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm24BitToSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm24BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.Pcm32BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.#ctor(NAudio.Wave.SampleProviders.Pcm32BitToSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.ConstructorIWaveProvider">
            <summary>Sets the shim of Pcm32BitToSampleProvider.Pcm32BitToSampleProvider(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm32BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm32BitToSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm32BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.Pcm8BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.#ctor(NAudio.Wave.SampleProviders.Pcm8BitToSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.ConstructorIWaveProvider">
            <summary>Sets the shim of Pcm8BitToSampleProvider.Pcm8BitToSampleProvider(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm8BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimPcm8BitToSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of Pcm8BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel">
            <summary>Shim type of NAudio.Wave.SampleProviders.SampleChannel</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.#ctor(NAudio.Wave.SampleProviders.SampleChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.ConstructorIWaveProvider">
            <summary>Sets the shim of SampleChannel.SampleChannel(IWaveProvider waveProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.ConstructorIWaveProviderBoolean">
            <summary>Sets the shim of SampleChannel.SampleChannel(IWaveProvider waveProvider, Boolean forceStereo)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.PreVolumeMeterAddEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of SampleChannel.add_PreVolumeMeter(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.PreVolumeMeterRemoveEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of SampleChannel.remove_PreVolumeMeter(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of SampleChannel.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.VolumeGet">
            <summary>Sets the shim of SampleChannel.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.VolumeSetSingle">
            <summary>Sets the shim of SampleChannel.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.WaveFormatGet">
            <summary>Sets the shim of SampleChannel.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances.PreVolumeMeterAddEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of SampleChannel.add_PreVolumeMeter(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances.PreVolumeMeterRemoveEventHandlerOfStreamVolumeEventArgs">
            <summary>Sets the shim of SampleChannel.remove_PreVolumeMeter(EventHandler`1&lt;StreamVolumeEventArgs&gt; value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of SampleChannel.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances.VolumeGet">
            <summary>Sets the shim of SampleChannel.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of SampleChannel.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleChannel.AllInstances.WaveFormatGet">
            <summary>Sets the shim of SampleChannel.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase">
            <summary>Shim type of NAudio.Wave.SampleProviders.SampleProviderConverterBase</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.#ctor(NAudio.Wave.SampleProviders.SampleProviderConverterBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.ConstructorIWaveProvider">
            <summary>Sets the shim of SampleProviderConverterBase.SampleProviderConverterBase(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.EnsureSourceBufferInt32">
            <summary>Sets the shim of SampleProviderConverterBase.EnsureSourceBuffer(Int32 sourceBytesRequired)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.WaveFormatGet">
            <summary>Sets the shim of SampleProviderConverterBase.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.AllInstances.EnsureSourceBufferInt32">
            <summary>Sets the shim of SampleProviderConverterBase.EnsureSourceBuffer(Int32 sourceBytesRequired)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleProviderConverterBase.AllInstances.WaveFormatGet">
            <summary>Sets the shim of SampleProviderConverterBase.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.SampleToWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.#ctor(NAudio.Wave.SampleProviders.SampleToWaveProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.ConstructorISampleProvider">
            <summary>Sets the shim of SampleToWaveProvider.SampleToWaveProvider(ISampleProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SampleToWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.WaveFormatGet">
            <summary>Sets the shim of SampleToWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SampleToWaveProvider.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of SampleToWaveProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16">
            <summary>Shim type of NAudio.Wave.SampleProviders.SampleToWaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.#ctor(NAudio.Wave.SampleProviders.SampleToWaveProvider16)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.Bind(NAudio.Wave.IWaveProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.ConstructorISampleProvider">
            <summary>Sets the shim of SampleToWaveProvider16.SampleToWaveProvider16(ISampleProvider sourceProvider)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SampleToWaveProvider16.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.VolumeGet">
            <summary>Sets the shim of SampleToWaveProvider16.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.VolumeSetSingle">
            <summary>Sets the shim of SampleToWaveProvider16.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.WaveFormatGet">
            <summary>Sets the shim of SampleToWaveProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SampleToWaveProvider16.Read(Byte[] destBuffer, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.AllInstances.VolumeGet">
            <summary>Sets the shim of SampleToWaveProvider16.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of SampleToWaveProvider16.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSampleToWaveProvider16.AllInstances.WaveFormatGet">
            <summary>Sets the shim of SampleToWaveProvider16.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator">
            <summary>Shim type of NAudio.Wave.SampleProviders.SignalGenerator</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.#ctor(NAudio.Wave.SampleProviders.SignalGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.Constructor">
            <summary>Sets the shim of SignalGenerator.SignalGenerator()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.ConstructorInt32Int32">
            <summary>Sets the shim of SignalGenerator.SignalGenerator(Int32 sampleRate, Int32 channel)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.FrequencyEndGet">
            <summary>Sets the shim of SignalGenerator.get_FrequencyEnd()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.FrequencyEndLogGet">
            <summary>Sets the shim of SignalGenerator.get_FrequencyEndLog()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.FrequencyEndSetDouble">
            <summary>Sets the shim of SignalGenerator.set_FrequencyEnd(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.FrequencyGet">
            <summary>Sets the shim of SignalGenerator.get_Frequency()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.FrequencyLogGet">
            <summary>Sets the shim of SignalGenerator.get_FrequencyLog()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.FrequencySetDouble">
            <summary>Sets the shim of SignalGenerator.set_Frequency(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.GainGet">
            <summary>Sets the shim of SignalGenerator.get_Gain()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.GainSetDouble">
            <summary>Sets the shim of SignalGenerator.set_Gain(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.NextRandomTwo">
            <summary>Sets the shim of SignalGenerator.NextRandomTwo()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.PhaseReverseGet">
            <summary>Sets the shim of SignalGenerator.get_PhaseReverse()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.PhaseReverseSetBooleanArray">
            <summary>Sets the shim of SignalGenerator.set_PhaseReverse(Boolean[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of SignalGenerator.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.SweepLengthSecsGet">
            <summary>Sets the shim of SignalGenerator.get_SweepLengthSecs()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.SweepLengthSecsSetDouble">
            <summary>Sets the shim of SignalGenerator.set_SweepLengthSecs(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.TypeGet">
            <summary>Sets the shim of SignalGenerator.get_Type()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.TypeSetSignalGeneratorType">
            <summary>Sets the shim of SignalGenerator.set_Type(SignalGeneratorType value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.WaveFormatGet">
            <summary>Sets the shim of SignalGenerator.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.FrequencyEndGet">
            <summary>Sets the shim of SignalGenerator.get_FrequencyEnd()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.FrequencyEndLogGet">
            <summary>Sets the shim of SignalGenerator.get_FrequencyEndLog()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.FrequencyEndSetDouble">
            <summary>Sets the shim of SignalGenerator.set_FrequencyEnd(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.FrequencyGet">
            <summary>Sets the shim of SignalGenerator.get_Frequency()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.FrequencyLogGet">
            <summary>Sets the shim of SignalGenerator.get_FrequencyLog()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.FrequencySetDouble">
            <summary>Sets the shim of SignalGenerator.set_Frequency(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.GainGet">
            <summary>Sets the shim of SignalGenerator.get_Gain()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.GainSetDouble">
            <summary>Sets the shim of SignalGenerator.set_Gain(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.NextRandomTwo">
            <summary>Sets the shim of SignalGenerator.NextRandomTwo()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.PhaseReverseGet">
            <summary>Sets the shim of SignalGenerator.get_PhaseReverse()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.PhaseReverseSetBooleanArray">
            <summary>Sets the shim of SignalGenerator.set_PhaseReverse(Boolean[] value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of SignalGenerator.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.SweepLengthSecsGet">
            <summary>Sets the shim of SignalGenerator.get_SweepLengthSecs()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.SweepLengthSecsSetDouble">
            <summary>Sets the shim of SignalGenerator.set_SweepLengthSecs(Double value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.TypeGet">
            <summary>Sets the shim of SignalGenerator.get_Type()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.TypeSetSignalGeneratorType">
            <summary>Sets the shim of SignalGenerator.set_Type(SignalGeneratorType value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSignalGenerator.AllInstances.WaveFormatGet">
            <summary>Sets the shim of SignalGenerator.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy">
            <summary>Shim type of NAudio.Wave.SampleProviders.SinPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.#ctor(NAudio.Wave.SampleProviders.SinPanStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.Bind(NAudio.Wave.SampleProviders.IPanStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.Constructor">
            <summary>Sets the shim of SinPanStrategy.SinPanStrategy()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.GetMultipliersSingle">
            <summary>Sets the shim of SinPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSinPanStrategy.AllInstances.GetMultipliersSingle">
            <summary>Sets the shim of SinPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy">
            <summary>Shim type of NAudio.Wave.SampleProviders.SquareRootPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.#ctor(NAudio.Wave.SampleProviders.SquareRootPanStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.Bind(NAudio.Wave.SampleProviders.IPanStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.Constructor">
            <summary>Sets the shim of SquareRootPanStrategy.SquareRootPanStrategy()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.GetMultipliersSingle">
            <summary>Sets the shim of SquareRootPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimSquareRootPanStrategy.AllInstances.GetMultipliersSingle">
            <summary>Sets the shim of SquareRootPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy">
            <summary>Shim type of NAudio.Wave.SampleProviders.StereoBalanceStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.#ctor(NAudio.Wave.SampleProviders.StereoBalanceStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.Bind(NAudio.Wave.SampleProviders.IPanStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.Constructor">
            <summary>Sets the shim of StereoBalanceStrategy.StereoBalanceStrategy()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.GetMultipliersSingle">
            <summary>Sets the shim of StereoBalanceStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStereoBalanceStrategy.AllInstances.GetMultipliersSingle">
            <summary>Sets the shim of StereoBalanceStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimStereoSamplePair">
            <summary>Shim type of NAudio.Wave.SampleProviders.StereoSamplePair</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoSamplePair.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoSamplePair.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStereoSamplePair.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStereoSamplePair.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimStereoSamplePair.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs">
            <summary>Shim type of NAudio.Wave.SampleProviders.StreamVolumeEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.#ctor(NAudio.Wave.SampleProviders.StreamVolumeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.Constructor">
            <summary>Sets the shim of StreamVolumeEventArgs.StreamVolumeEventArgs()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.MaxSampleValuesGet">
            <summary>Sets the shim of StreamVolumeEventArgs.get_MaxSampleValues()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.MaxSampleValuesSetSingleArray">
            <summary>Sets the shim of StreamVolumeEventArgs.set_MaxSampleValues(Single[] value)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.AllInstances.MaxSampleValuesGet">
            <summary>Sets the shim of StreamVolumeEventArgs.get_MaxSampleValues()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimStreamVolumeEventArgs.AllInstances.MaxSampleValuesSetSingleArray">
            <summary>Sets the shim of StreamVolumeEventArgs.set_MaxSampleValues(Single[] value)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.VolumeSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.#ctor(NAudio.Wave.SampleProviders.VolumeSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.ConstructorISampleProvider">
            <summary>Sets the shim of VolumeSampleProvider.VolumeSampleProvider(ISampleProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of VolumeSampleProvider.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.VolumeGet">
            <summary>Sets the shim of VolumeSampleProvider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.VolumeSetSingle">
            <summary>Sets the shim of VolumeSampleProvider.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.WaveFormatGet">
            <summary>Sets the shim of VolumeSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of VolumeSampleProvider.Read(Single[] buffer, Int32 offset, Int32 sampleCount)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.AllInstances.VolumeGet">
            <summary>Sets the shim of VolumeSampleProvider.get_Volume()</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.AllInstances.VolumeSetSingle">
            <summary>Sets the shim of VolumeSampleProvider.set_Volume(Single value)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimVolumeSampleProvider.AllInstances.WaveFormatGet">
            <summary>Sets the shim of VolumeSampleProvider.get_WaveFormat()</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider">
            <summary>Shim type of NAudio.Wave.SampleProviders.WaveToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.#ctor(NAudio.Wave.SampleProviders.WaveToSampleProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.ConstructorIWaveProvider">
            <summary>Sets the shim of WaveToSampleProvider.WaveToSampleProvider(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of WaveToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of WaveToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64">
            <summary>Shim type of NAudio.Wave.SampleProviders.WaveToSampleProvider64</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.#ctor(NAudio.Wave.SampleProviders.WaveToSampleProvider64)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.Bind(NAudio.Wave.ISampleProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.ConstructorIWaveProvider">
            <summary>Sets the shim of WaveToSampleProvider64.WaveToSampleProvider64(IWaveProvider source)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of WaveToSampleProvider64.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.ShimWaveToSampleProvider64.AllInstances.ReadSingleArrayInt32Int32">
            <summary>Sets the shim of WaveToSampleProvider64.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubFadeInOutSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.FadeInOutSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubFadeInOutSampleProvider.#ctor(NAudio.Wave.ISampleProvider,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubFadeInOutSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubFadeInOutSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubFadeInOutSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubFadeInOutSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubFadeInOutSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubIPanStrategy">
            <summary>Stub type of NAudio.Wave.SampleProviders.IPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubIPanStrategy.#ctor">
            <summary>Initializes a new instance of type StubIPanStrategy</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubIPanStrategy.GetMultipliersSingle">
            <summary>Sets the stub of IPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubIPanStrategy.na::NAudio#Wave#SampleProviders#IPanStrategy#GetMultipliers(System.Single)">
            <summary>Sets the stub of IPanStrategy.GetMultipliers(Single pan)</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubLinearPanStrategy">
            <summary>Stub type of NAudio.Wave.SampleProviders.LinearPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubLinearPanStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubLinearPanStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubLinearPanStrategy</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubLinearPanStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubLinearPanStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubLinearPanStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.MeteringSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider.#ctor(NAudio.Wave.ISampleProvider,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubMeteringSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMeteringSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.MixingSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider.#ctor(NAudio.Wave.WaveFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider.#ctor(System.Collections.Generic.IEnumerable{NAudio.Wave.ISampleProvider})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubMixingSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMixingSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubMonoToStereoSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.MonoToStereoSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMonoToStereoSampleProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMonoToStereoSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubMonoToStereoSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMonoToStereoSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMonoToStereoSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMonoToStereoSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubMultiplexingSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.MultiplexingSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMultiplexingSampleProvider.#ctor(System.Collections.Generic.IEnumerable{NAudio.Wave.ISampleProvider},System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubMultiplexingSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubMultiplexingSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMultiplexingSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMultiplexingSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubMultiplexingSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubNotifyingSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.NotifyingSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubNotifyingSampleProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubNotifyingSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubNotifyingSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubNotifyingSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubNotifyingSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubNotifyingSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubOffsetSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.OffsetSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubOffsetSampleProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubOffsetSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubOffsetSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubOffsetSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubOffsetSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubOffsetSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubPanningSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.PanningSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPanningSampleProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPanningSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubPanningSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPanningSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPanningSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPanningSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.Pcm16BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubPcm16BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of Pcm16BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of Pcm16BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm16BitToSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.Pcm24BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubPcm24BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of Pcm24BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of Pcm24BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm24BitToSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.Pcm32BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubPcm32BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of Pcm32BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of Pcm32BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm32BitToSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.Pcm8BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubPcm8BitToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of Pcm8BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of Pcm8BitToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubPcm8BitToSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel">
            <summary>Stub type of NAudio.Wave.SampleProviders.SampleChannel</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel.#ctor(NAudio.Wave.IWaveProvider,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel.InitializeStub">
            <summary>Initializes a new instance of type StubSampleChannel</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase">
            <summary>Stub type of NAudio.Wave.SampleProviders.SampleProviderConverterBase</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.InitializeStub">
            <summary>Initializes a new instance of type StubSampleProviderConverterBase</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of SampleProviderConverterBase.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of SampleProviderConverterBase.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleProviderConverterBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.SampleToWaveProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider.InitializeStub">
            <summary>Initializes a new instance of type StubSampleToWaveProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider16">
            <summary>Stub type of NAudio.Wave.SampleProviders.SampleToWaveProvider16</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider16.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider16.InitializeStub">
            <summary>Initializes a new instance of type StubSampleToWaveProvider16</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider16.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider16.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSampleToWaveProvider16.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator">
            <summary>Stub type of NAudio.Wave.SampleProviders.SignalGenerator</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubSignalGenerator</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSignalGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSinPanStrategy">
            <summary>Stub type of NAudio.Wave.SampleProviders.SinPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSinPanStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSinPanStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubSinPanStrategy</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSinPanStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSinPanStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSinPanStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubSquareRootPanStrategy">
            <summary>Stub type of NAudio.Wave.SampleProviders.SquareRootPanStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSquareRootPanStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubSquareRootPanStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubSquareRootPanStrategy</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSquareRootPanStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSquareRootPanStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubSquareRootPanStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubStereoBalanceStrategy">
            <summary>Stub type of NAudio.Wave.SampleProviders.StereoBalanceStrategy</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubStereoBalanceStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubStereoBalanceStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubStereoBalanceStrategy</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubStereoBalanceStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubStereoBalanceStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubStereoBalanceStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubStreamVolumeEventArgs">
            <summary>Stub type of NAudio.Wave.SampleProviders.StreamVolumeEventArgs</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubStreamVolumeEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubStreamVolumeEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStreamVolumeEventArgs</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubStreamVolumeEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubStreamVolumeEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubStreamVolumeEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubVolumeSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.VolumeSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubVolumeSampleProvider.#ctor(NAudio.Wave.ISampleProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubVolumeSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubVolumeSampleProvider</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubVolumeSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubVolumeSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubVolumeSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider">
            <summary>Stub type of NAudio.Wave.SampleProviders.WaveToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.InitializeStub">
            <summary>Initializes a new instance of type StubWaveToSampleProvider</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of WaveToSampleProvider.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64">
            <summary>Stub type of NAudio.Wave.SampleProviders.WaveToSampleProvider64</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.#ctor(NAudio.Wave.IWaveProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.InitializeStub">
            <summary>Initializes a new instance of type StubWaveToSampleProvider64</summary>
        </member>
        <member name="M:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.Read(System.Single[],System.Int32,System.Int32)">
            <summary>Sets the stub of WaveToSampleProvider64.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.ReadSingleArrayInt32Int32">
            <summary>Sets the stub of WaveToSampleProvider64.Read(Single[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NAudio.Wave.SampleProviders.Fakes.StubWaveToSampleProvider64.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
